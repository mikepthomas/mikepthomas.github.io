{"version":3,"file":"static/js/674.09ea189a.chunk.js","mappings":";qGAEA,IAAIA,EAASC,OAAOC,UAAUC,eAC1BC,EAAQH,OAAOC,UAAUG,SACzBC,EAAiBL,OAAOK,eACxBC,EAAON,OAAOO,yBAEdC,EAAU,SAAiBC,GAC9B,MAA6B,oBAAlBC,MAAMF,QACTE,MAAMF,QAAQC,GAGK,mBAApBN,EAAMQ,KAAKF,EACnB,EAEIG,EAAgB,SAAuBC,GAC1C,IAAKA,GAA2B,oBAApBV,EAAMQ,KAAKE,GACtB,OAAO,EAGR,IASIC,EATAC,EAAoBhB,EAAOY,KAAKE,EAAK,eACrCG,EAAmBH,EAAII,aAAeJ,EAAII,YAAYhB,WAAaF,EAAOY,KAAKE,EAAII,YAAYhB,UAAW,iBAE9G,GAAIY,EAAII,cAAgBF,IAAsBC,EAC7C,OAAO,EAMR,IAAKF,KAAOD,GAEZ,MAAsB,qBAARC,GAAuBf,EAAOY,KAAKE,EAAKC,EACvD,EAGII,EAAc,SAAqBC,EAAQC,GAC1Cf,GAAmC,cAAjBe,EAAQC,KAC7BhB,EAAec,EAAQC,EAAQC,KAAM,CACpCC,YAAY,EACZC,cAAc,EACdC,MAAOJ,EAAQK,SACfC,UAAU,IAGXP,EAAOC,EAAQC,MAAQD,EAAQK,QAEjC,EAGIE,EAAc,SAAqBd,EAAKQ,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAKtB,EAAOY,KAAKE,EAAKQ,GACrB,OACM,GAAIf,EAGV,OAAOA,EAAKO,EAAKQ,GAAMG,KAEzB,CAEA,OAAOX,EAAIQ,EACZ,EAEAO,EAAOC,QAAU,SAASC,IACzB,IAAIV,EAASC,EAAMU,EAAKC,EAAMC,EAAaC,EACvCf,EAASgB,UAAU,GACnBC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,EAaX,IAVsB,mBAAXnB,IACVmB,EAAOnB,EACPA,EAASgB,UAAU,IAAM,CAAC,EAE1BC,EAAI,IAES,MAAVjB,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,CAAC,GAGJiB,EAAIC,IAAUD,EAGpB,GAAe,OAFfhB,EAAUe,UAAUC,IAInB,IAAKf,KAAQD,EACZW,EAAMJ,EAAYR,EAAQE,GAItBF,KAHJa,EAAOL,EAAYP,EAASC,MAKvBiB,GAAQN,IAASpB,EAAcoB,KAAUC,EAAczB,EAAQwB,MAC9DC,GACHA,GAAc,EACdC,EAAQH,GAAOvB,EAAQuB,GAAOA,EAAM,IAEpCG,EAAQH,GAAOnB,EAAcmB,GAAOA,EAAM,CAAC,EAI5Cb,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUK,EAAOQ,EAAMJ,EAAOF,MAGtC,qBAATA,GACjBd,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUO,KAQjD,OAAOb,CACR,oBClHA,IAAIoB,EAAgB,kCAEhBC,EAAgB,MAChBC,EAAmB,OAGnBC,EAAiB,yCACjBC,EAAc,QACdC,EAAc,uDACdC,EAAkB,UAGlBC,EAAa,aAMbC,EAAe,GA8OnB,SAASC,EAAKC,GACZ,OAAOA,EAAMA,EAAIC,QAAQJ,EAAYC,GAAgBA,CACvD,CAnOAnB,EAAOC,QAAU,SAASsB,EAAO/B,GAC/B,GAAqB,kBAAV+B,EACT,MAAM,IAAIC,UAAU,mCAGtB,IAAKD,EAAO,MAAO,GAEnB/B,EAAUA,GAAW,CAAC,EAKtB,IAAIiC,EAAS,EACTC,EAAS,EAOb,SAASC,EAAeN,GACtB,IAAIO,EAAQP,EAAIQ,MAAMjB,GAClBgB,IAAOH,GAAUG,EAAMnB,QAC3B,IAAID,EAAIa,EAAIS,YAvCF,MAwCVJ,GAAUlB,EAAIa,EAAIZ,OAASD,EAAIkB,EAASL,EAAIZ,MAC9C,CAOA,SAASsB,IACP,IAAIC,EAAQ,CAAEC,KAAMR,EAAQC,OAAQA,GACpC,OAAO,SAASQ,GAGd,OAFAA,EAAKH,SAAW,IAAII,EAASH,GAC7BI,IACOF,CACT,CACF,CAUA,SAASC,EAASH,GAChBK,KAAKL,MAAQA,EACbK,KAAKC,IAAM,CAAEL,KAAMR,EAAQC,OAAQA,GACnCW,KAAKE,OAAS/C,EAAQ+C,MACxB,CAKAJ,EAAS9D,UAAUmE,QAAUjB,EAE7B,IAAIkB,EAAa,GAQjB,SAASC,EAAMC,GACb,IAAIC,EAAM,IAAIC,MACZrD,EAAQ+C,OAAS,IAAMd,EAAS,IAAMC,EAAS,KAAOiB,GAQxD,GANAC,EAAIE,OAASH,EACbC,EAAIG,SAAWvD,EAAQ+C,OACvBK,EAAIX,KAAOR,EACXmB,EAAIlB,OAASA,EACbkB,EAAIL,OAAShB,GAET/B,EAAQwD,OAGV,MAAMJ,EAFNH,EAAWQ,KAAKL,EAIpB,CAQA,SAASf,EAAMqB,GACb,IAAIC,EAAID,EAAGE,KAAK7B,GAChB,GAAK4B,EAAL,CACA,IAAI9B,EAAM8B,EAAE,GAGZ,OAFAxB,EAAeN,GACfE,EAAQA,EAAM8B,MAAMhC,EAAIZ,QACjB0C,CAJO,CAKhB,CAKA,SAASf,IACPP,EAAMhB,EACR,CAQA,SAASyC,EAASC,GAChB,IAAIC,EAEJ,IADAD,EAAQA,GAAS,GACTC,EAAIC,MACA,IAAND,GACFD,EAAMN,KAAKO,GAGf,OAAOD,CACT,CAQA,SAASE,IACP,IAAIC,EAAM3B,IACV,GAnJgB,KAmJKR,EAAMoC,OAAO,IAlJvB,KAkJyCpC,EAAMoC,OAAO,GAAjE,CAGA,IADA,IAAInD,EAAI,EAENW,GAAgBI,EAAMoC,OAAOnD,KAtJpB,KAuJIe,EAAMoC,OAAOnD,IAxJZ,KAwJmCe,EAAMoC,OAAOnD,EAAI,OAEhEA,EAIJ,GAFAA,GAAK,EAEDW,IAAiBI,EAAMoC,OAAOnD,EAAI,GACpC,OAAOkC,EAAM,0BAGf,IAAIrB,EAAME,EAAM8B,MAAM,EAAG7C,EAAI,GAM7B,OALAkB,GAAU,EACVC,EAAeN,GACfE,EAAQA,EAAM8B,MAAM7C,GACpBkB,GAAU,EAEHgC,EAAI,CACTE,KApKa,UAqKbH,QAASpC,GAvBgE,CAyB7E,CAQA,SAASwC,IACP,IAAIH,EAAM3B,IAGN+B,EAAOjC,EAAMf,GACjB,GAAKgD,EAAL,CAIA,GAHAL,KAGK5B,EAAMd,GAAc,OAAO2B,EAAM,wBAGtC,IAAIqB,EAAMlC,EAAMb,GAEZgD,EAAMN,EAAI,CACZE,KA7LiB,cA8LjBK,SAAU7C,EAAK0C,EAAK,GAAGxC,QAAQX,EAAeQ,IAC9CvB,MAAOmE,EACH3C,EAAK2C,EAAI,GAAGzC,QAAQX,EAAeQ,IACnCA,IAMN,OAFAU,EAAMZ,GAEC+C,CApBU,CAqBnB,CAyBA,OADA5B,IAjBA,WACE,IAKI8B,EALAC,EAAQ,GAMZ,IAJAb,EAASa,GAIDD,EAAOL,MACA,IAATK,IACFC,EAAMlB,KAAKiB,GACXZ,EAASa,IAIb,OAAOA,CACT,CAGOC,EACT,oBCnPApE,EAAOC,QAAU,SAAmBhB,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAII,aACY,oBAA7BJ,EAAII,YAAYgF,UAA2BpF,EAAII,YAAYgF,SAASpF,EAC/E,uBCVA,IAIIqF,EAJYC,EAAQ,KAITC,CAHJD,EAAQ,MAGY,YAE/BvE,EAAOC,QAAUqE,wBCNjB,IAIIG,EAJYF,EAAQ,KAIdC,CAHCD,EAAQ,MAGO,OAE1BvE,EAAOC,QAAUwE,wBCNjB,IAIIC,EAJYH,EAAQ,KAIVC,CAHHD,EAAQ,MAGW,WAE9BvE,EAAOC,QAAUyE,wBCNjB,IAIIC,EAJYJ,EAAQ,KAIdC,CAHCD,EAAQ,MAGO,OAE1BvE,EAAOC,QAAU0E,wBCNjB,IAGIC,EAHOL,EAAQ,MAGDK,OAElB5E,EAAOC,QAAU2E,wBCLjB,IAIIC,EAJYN,EAAQ,KAIVC,CAHHD,EAAQ,MAGW,WAE9BvE,EAAOC,QAAU4E,wBCNjB,IAAIC,EAAYP,EAAQ,MACpBQ,EAAcR,EAAQ,MACtB3F,EAAU2F,EAAQ,MAClBF,EAAWE,EAAQ,MACnBS,EAAUT,EAAQ,MAClBU,EAAeV,EAAQ,MAMvBjG,EAHcF,OAAOC,UAGQC,eAqCjC0B,EAAOC,QA3BP,SAAuBL,EAAOsF,GAC5B,IAAIC,EAAQvG,EAAQgB,GAChBwF,GAASD,GAASJ,EAAYnF,GAC9ByF,GAAUF,IAAUC,GAASf,EAASzE,GACtC0F,GAAUH,IAAUC,IAAUC,GAAUJ,EAAarF,GACrD2F,EAAcJ,GAASC,GAASC,GAAUC,EAC1CE,EAASD,EAAcT,EAAUlF,EAAMa,OAAQgF,QAAU,GACzDhF,EAAS+E,EAAO/E,OAEpB,IAAK,IAAIvB,KAAOU,GACTsF,IAAa5G,EAAeS,KAAKa,EAAOV,IACvCqG,IAEQ,UAAPrG,GAECmG,IAAkB,UAAPnG,GAA0B,UAAPA,IAE9BoG,IAAkB,UAAPpG,GAA0B,cAAPA,GAA8B,cAAPA,IAEtD8F,EAAQ9F,EAAKuB,KAElB+E,EAAOvC,KAAK/D,GAGhB,OAAOsG,CACT,oBC1BAxF,EAAOC,QAXP,SAAkByF,EAAOC,GAKvB,IAJA,IAAIC,GAAS,EACTnF,EAAkB,MAATiF,EAAgB,EAAIA,EAAMjF,OACnC+E,EAAS1G,MAAM2B,KAEVmF,EAAQnF,GACf+E,EAAOI,GAASD,EAASD,EAAME,GAAQA,EAAOF,GAEhD,OAAOF,CACT,oBCPAxF,EAAOC,QAJP,SAAsB4F,GACpB,OAAOA,EAAOC,MAAM,GACtB,wBCTA,IAAIlB,EAASL,EAAQ,MACjBwB,EAAYxB,EAAQ,MACpByB,EAAiBzB,EAAQ,MAOzB0B,EAAiBrB,EAASA,EAAOsB,iBAAcC,EAkBnDnG,EAAOC,QATP,SAAoBL,GAClB,OAAa,MAATA,OACeuG,IAAVvG,EAdQ,qBADL,gBAiBJqG,GAAkBA,KAAkB7H,OAAOwB,GAC/CmG,EAAUnG,GACVoG,EAAepG,EACrB,wBCzBA,IAAIwG,EAAa7B,EAAQ,MACrB8B,EAAe9B,EAAQ,MAgB3BvE,EAAOC,QAJP,SAAyBL,GACvB,OAAOyG,EAAazG,IAVR,sBAUkBwG,EAAWxG,EAC3C,wBCfA,IAAI0G,EAAa/B,EAAQ,MACrBgC,EAAWhC,EAAQ,KACnBiC,EAAWjC,EAAQ,MACnBkC,EAAWlC,EAAQ,MASnBmC,EAAe,8BAGfC,EAAYC,SAASvI,UACrBwI,EAAczI,OAAOC,UAGrByI,EAAeH,EAAUnI,SAGzBF,EAAiBuI,EAAYvI,eAG7ByI,EAAaC,OAAO,IACtBF,EAAa/H,KAAKT,GAAgBgD,QAjBjB,sBAiBuC,QACvDA,QAAQ,yDAA0D,SAAW,KAmBhFtB,EAAOC,QARP,SAAsBL,GACpB,SAAK4G,EAAS5G,IAAU2G,EAAS3G,MAGnB0G,EAAW1G,GAASmH,EAAaL,GAChCO,KAAKR,EAAS7G,GAC/B,wBC5CA,IAAIwG,EAAa7B,EAAQ,MACrB2C,EAAW3C,EAAQ,MACnB8B,EAAe9B,EAAQ,MA8BvB4C,EAAiB,CAAC,EACtBA,EAZiB,yBAYYA,EAXZ,yBAYjBA,EAXc,sBAWYA,EAVX,uBAWfA,EAVe,uBAUYA,EATZ,uBAUfA,EATsB,8BASYA,EARlB,wBAShBA,EARgB,yBAQY,EAC5BA,EAjCc,sBAiCYA,EAhCX,kBAiCfA,EApBqB,wBAoBYA,EAhCnB,oBAiCdA,EApBkB,qBAoBYA,EAhChB,iBAiCdA,EAhCe,kBAgCYA,EA/Bb,qBAgCdA,EA/Ba,gBA+BYA,EA9BT,mBA+BhBA,EA9BgB,mBA8BYA,EA7BZ,mBA8BhBA,EA7Ba,gBA6BYA,EA5BT,mBA6BhBA,EA5BiB,qBA4BY,EAc7BnH,EAAOC,QALP,SAA0BL,GACxB,OAAOyG,EAAazG,IAClBsH,EAAStH,EAAMa,WAAa0G,EAAef,EAAWxG,GAC1D,wBCzDA,IAAIwH,EAAc7C,EAAQ,MACtB8C,EAAa9C,EAAQ,MAMrBjG,EAHcF,OAAOC,UAGQC,eAsBjC0B,EAAOC,QAbP,SAAkBqH,GAChB,IAAKF,EAAYE,GACf,OAAOD,EAAWC,GAEpB,IAAI9B,EAAS,GACb,IAAK,IAAItG,KAAOd,OAAOkJ,GACjBhJ,EAAeS,KAAKuI,EAAQpI,IAAe,eAAPA,GACtCsG,EAAOvC,KAAK/D,GAGhB,OAAOsG,CACT,oBCRAxF,EAAOC,QAVP,SAAmBsH,EAAG5B,GAIpB,IAHA,IAAIC,GAAS,EACTJ,EAAS1G,MAAMyI,KAEV3B,EAAQ2B,GACf/B,EAAOI,GAASD,EAASC,GAE3B,OAAOJ,CACT,oBCJAxF,EAAOC,QANP,SAAmBuH,GACjB,OAAO,SAAS5H,GACd,OAAO4H,EAAK5H,EACd,CACF,wBCXA,IAAI6H,EAAWlD,EAAQ,MAkBvBvE,EAAOC,QANP,SAAoBqH,EAAQI,GAC1B,OAAOD,EAASC,GAAO,SAASxI,GAC9B,OAAOoI,EAAOpI,EAChB,GACF,mBCGAc,EAAOC,QAXP,SAAmBsC,EAAQmD,GACzB,IAAIE,GAAS,EACTnF,EAAS8B,EAAO9B,OAGpB,IADAiF,IAAUA,EAAQ5G,MAAM2B,MACfmF,EAAQnF,GACfiF,EAAME,GAASrD,EAAOqD,GAExB,OAAOF,CACT,wBCjBA,IAGIiC,EAHOpD,EAAQ,MAGG,sBAEtBvE,EAAOC,QAAU0H,wBCJjB,IAAIC,EAA8B,iBAAVC,EAAAA,GAAsBA,EAAAA,GAAUA,EAAAA,EAAOzJ,SAAWA,QAAUyJ,EAAAA,EAEpF7H,EAAOC,QAAU2H,wBCHjB,IAAIE,EAAevD,EAAQ,MACvBwD,EAAWxD,EAAQ,IAevBvE,EAAOC,QALP,SAAmBqH,EAAQpI,GACzB,IAAIU,EAAQmI,EAAST,EAAQpI,GAC7B,OAAO4I,EAAalI,GAASA,OAAQuG,CACvC,wBCdA,IAAIvB,EAASL,EAAQ,MAGjBsC,EAAczI,OAAOC,UAGrBC,EAAiBuI,EAAYvI,eAO7B0J,EAAuBnB,EAAYrI,SAGnCyH,EAAiBrB,EAASA,EAAOsB,iBAAcC,EA6BnDnG,EAAOC,QApBP,SAAmBL,GACjB,IAAIqI,EAAQ3J,EAAeS,KAAKa,EAAOqG,GACnCiC,EAAMtI,EAAMqG,GAEhB,IACErG,EAAMqG,QAAkBE,EACxB,IAAIgC,GAAW,CACJ,CAAX,MAAOC,GAAI,CAEb,IAAI5C,EAASwC,EAAqBjJ,KAAKa,GAQvC,OAPIuI,IACEF,EACFrI,EAAMqG,GAAkBiC,SAEjBtI,EAAMqG,IAGVT,CACT,wBC3CA,IAAIlB,EAAWC,EAAQ,KACnBE,EAAMF,EAAQ,MACdG,EAAUH,EAAQ,MAClBI,EAAMJ,EAAQ,MACdM,EAAUN,EAAQ,MAClB6B,EAAa7B,EAAQ,MACrBkC,EAAWlC,EAAQ,MAGnB8D,EAAS,eAETC,EAAa,mBACbC,EAAS,eACTC,EAAa,mBAEbC,EAAc,oBAGdC,EAAqBjC,EAASnC,GAC9BqE,EAAgBlC,EAAShC,GACzBmE,EAAoBnC,EAAS/B,GAC7BmE,EAAgBpC,EAAS9B,GACzBmE,EAAoBrC,EAAS5B,GAS7BkE,EAAS3C,GAGR9B,GAAYyE,EAAO,IAAIzE,EAAS,IAAI0E,YAAY,MAAQP,GACxDhE,GAAOsE,EAAO,IAAItE,IAAQ4D,GAC1B3D,GAAWqE,EAAOrE,EAAQuE,YAAcX,GACxC3D,GAAOoE,EAAO,IAAIpE,IAAQ4D,GAC1B1D,GAAWkE,EAAO,IAAIlE,IAAY2D,KACrCO,EAAS,SAASnJ,GAChB,IAAI4F,EAASY,EAAWxG,GACpBsJ,EA/BQ,mBA+BD1D,EAAsB5F,EAAMP,iBAAc8G,EACjDgD,EAAaD,EAAOzC,EAASyC,GAAQ,GAEzC,GAAIC,EACF,OAAQA,GACN,KAAKT,EAAoB,OAAOD,EAChC,KAAKE,EAAe,OAAON,EAC3B,KAAKO,EAAmB,OAAON,EAC/B,KAAKO,EAAe,OAAON,EAC3B,KAAKO,EAAmB,OAAON,EAGnC,OAAOhD,CACT,GAGFxF,EAAOC,QAAU8I,kBC7CjB/I,EAAOC,QAJP,SAAkBqH,EAAQpI,GACxB,OAAiB,MAAVoI,OAAiBnB,EAAYmB,EAAOpI,EAC7C,oBCTA,IAWIkK,EAAepC,OAAO,uFAa1BhH,EAAOC,QAJP,SAAoB4F,GAClB,OAAOuD,EAAanC,KAAKpB,EAC3B,oBCtBA,IAGIwD,EAAW,mBAoBfrJ,EAAOC,QAVP,SAAiBL,EAAOa,GACtB,IAAImD,SAAchE,EAGlB,SAFAa,EAAmB,MAAVA,EAfY,iBAewBA,KAGlC,UAARmD,GACU,UAARA,GAAoByF,EAASpC,KAAKrH,KAChCA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQa,CACjD,uBCtBA,IAAIkH,EAAapD,EAAQ,MAGrB+E,EAAc,WAChB,IAAIC,EAAM,SAASnG,KAAKuE,GAAcA,EAAW6B,MAAQ7B,EAAW6B,KAAKC,UAAY,IACrF,OAAOF,EAAO,iBAAmBA,EAAO,EAC1C,CAHkB,GAgBlBvJ,EAAOC,QAJP,SAAkBuH,GAChB,QAAS8B,GAAeA,KAAc9B,CACxC,oBChBA,IAAIX,EAAczI,OAAOC,UAgBzB2B,EAAOC,QAPP,SAAqBL,GACnB,IAAIsJ,EAAOtJ,GAASA,EAAMP,YAG1B,OAAOO,KAFqB,mBAARsJ,GAAsBA,EAAK7K,WAAcwI,EAG/D,oBCEA7G,EAAOC,QAVP,SAAyByJ,GAIvB,IAHA,IAAIC,EACAnE,EAAS,KAEJmE,EAAOD,EAASE,QAAQC,MAC/BrE,EAAOvC,KAAK0G,EAAK/J,OAEnB,OAAO4F,CACT,mBCEAxF,EAAOC,QAVP,SAAoB6J,GAClB,IAAIlE,GAAS,EACTJ,EAAS1G,MAAMgL,EAAIC,MAKvB,OAHAD,EAAIE,SAAQ,SAASpK,EAAOV,GAC1BsG,IAASI,GAAS,CAAC1G,EAAKU,EAC1B,IACO4F,CACT,wBCfA,IAGI6B,EAHU9C,EAAQ,KAGL0F,CAAQ7L,OAAOoL,KAAMpL,QAEtC4B,EAAOC,QAAUoH,mCCLjB,IAAIO,EAAarD,EAAQ,MAGrB2F,EAA4CjK,IAAYA,EAAQkK,UAAYlK,EAG5EmK,EAAaF,GAA4ClK,IAAWA,EAAOmK,UAAYnK,EAMvFqK,EAHgBD,GAAcA,EAAWnK,UAAYiK,GAGtBtC,EAAW0C,QAG1CC,EAAY,WACd,IAEE,IAAIC,EAAQJ,GAAcA,EAAW7F,SAAW6F,EAAW7F,QAAQ,QAAQiG,MAE3E,OAAIA,GAKGH,GAAeA,EAAYI,SAAWJ,EAAYI,QAAQ,OACtD,CAAX,MAAOrC,GAAI,CACf,CAZgB,GAchBpI,EAAOC,QAAUsK,oBC5BjB,IAOIvC,EAPc5J,OAAOC,UAOcG,SAavCwB,EAAOC,QAJP,SAAwBL,GACtB,OAAOoI,EAAqBjJ,KAAKa,EACnC,oBCLAI,EAAOC,QANP,SAAiBuH,EAAMkD,GACrB,OAAO,SAASC,GACd,OAAOnD,EAAKkD,EAAUC,GACxB,CACF,wBCZA,IAAI/C,EAAarD,EAAQ,MAGrBqG,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKzM,SAAWA,QAAUyM,KAGxEC,EAAOlD,GAAcgD,GAAYhE,SAAS,cAATA,GAErC5G,EAAOC,QAAU6K,oBCSjB9K,EAAOC,QAVP,SAAoB8K,GAClB,IAAInF,GAAS,EACTJ,EAAS1G,MAAMiM,EAAIhB,MAKvB,OAHAgB,EAAIf,SAAQ,SAASpK,GACnB4F,IAASI,GAAShG,CACpB,IACO4F,CACT,wBCfA,IAAIwF,EAAezG,EAAQ,MACvB0G,EAAa1G,EAAQ,MACrB2G,EAAiB3G,EAAQ,MAe7BvE,EAAOC,QANP,SAAuB4F,GACrB,OAAOoF,EAAWpF,GACdqF,EAAerF,GACfmF,EAAanF,EACnB,oBCdA,IAGIiB,EAHYF,SAASvI,UAGIG,SAqB7BwB,EAAOC,QAZP,SAAkBuH,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOV,EAAa/H,KAAKyI,EACd,CAAX,MAAOY,GAAI,CACb,IACE,OAAQZ,EAAO,EACJ,CAAX,MAAOY,GAAI,CACf,CACA,MAAO,EACT,oBCtBA,IAQI+C,EAAW,oBACXC,EAAU,kDACVC,EAAS,2BAETC,EAAc,qBACdC,EAAa,kCACbC,EAAa,qCAIbC,EAPa,MAAQL,EAAU,IAAMC,EAAS,IAOtB,IACxBK,EAAW,oBAEXC,EAAQD,EAAWD,GADP,gBAAwB,CAACH,EAAaC,EAAYC,GAAYI,KAAK,KAAO,IAAMF,EAAWD,EAAW,MAElHI,EAAW,MAAQ,CAACP,EAAcF,EAAU,IAAKA,EAASG,EAAYC,EAAYL,GAAUS,KAAK,KAAO,IAGxGE,EAAY9E,OAAOqE,EAAS,MAAQA,EAAS,KAAOQ,EAAWF,EAAO,KAa1E3L,EAAOC,QAJP,SAAwB4F,GACtB,OAAOA,EAAOhE,MAAMiK,IAAc,EACpC,wBCrCA,IAAIC,EAAkBxH,EAAQ,MAC1B8B,EAAe9B,EAAQ,MAGvBsC,EAAczI,OAAOC,UAGrBC,EAAiBuI,EAAYvI,eAG7B0N,EAAuBnF,EAAYmF,qBAoBnCjH,EAAcgH,EAAgB,WAAa,OAAOxL,SAAW,CAA/B,IAAsCwL,EAAkB,SAASnM,GACjG,OAAOyG,EAAazG,IAAUtB,EAAeS,KAAKa,EAAO,YACtDoM,EAAqBjN,KAAKa,EAAO,SACtC,EAEAI,EAAOC,QAAU8E,oBCZjB,IAAInG,EAAUE,MAAMF,QAEpBoB,EAAOC,QAAUrB,wBCzBjB,IAAI0H,EAAa/B,EAAQ,MACrB2C,EAAW3C,EAAQ,MA+BvBvE,EAAOC,QAJP,SAAqBL,GACnB,OAAgB,MAATA,GAAiBsH,EAAStH,EAAMa,UAAY6F,EAAW1G,EAChE,mCC9BA,IAAIkL,EAAOvG,EAAQ,MACf0H,EAAY1H,EAAQ,MAGpB2F,EAA4CjK,IAAYA,EAAQkK,UAAYlK,EAG5EmK,EAAaF,GAA4ClK,IAAWA,EAAOmK,UAAYnK,EAMvFkM,EAHgB9B,GAAcA,EAAWnK,UAAYiK,EAG5BY,EAAKoB,YAAS/F,EAsBvC9B,GAnBiB6H,EAASA,EAAO7H,cAAW8B,IAmBf8F,EAEjCjM,EAAOC,QAAUoE,wBCrCjB,IAAI+B,EAAa7B,EAAQ,MACrBiC,EAAWjC,EAAQ,MAmCvBvE,EAAOC,QAVP,SAAoBL,GAClB,IAAK4G,EAAS5G,GACZ,OAAO,EAIT,IAAIsI,EAAM9B,EAAWxG,GACrB,MA5BY,qBA4BLsI,GA3BI,8BA2BcA,GA7BZ,0BA6B6BA,GA1B7B,kBA0BgDA,CAC/D,oBCAAlI,EAAOC,QALP,SAAkBL,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GA9Bb,gBA+BvB,oBCFAI,EAAOC,QALP,SAAkBL,GAChB,IAAIgE,SAAchE,EAClB,OAAgB,MAATA,IAA0B,UAARgE,GAA4B,YAARA,EAC/C,oBCAA5D,EAAOC,QAJP,SAAsBL,GACpB,OAAgB,MAATA,GAAiC,iBAATA,CACjC,wBC1BA,IAAIwG,EAAa7B,EAAQ,MACrB3F,EAAU2F,EAAQ,MAClB8B,EAAe9B,EAAQ,MA2B3BvE,EAAOC,QALP,SAAkBL,GAChB,MAAuB,iBAATA,IACVhB,EAAQgB,IAAUyG,EAAazG,IArBrB,mBAqB+BwG,EAAWxG,EAC1D,wBC3BA,IAAIuM,EAAmB5H,EAAQ,MAC3B6H,EAAY7H,EAAQ,MACpBgG,EAAWhG,EAAQ,MAGnB8H,EAAmB9B,GAAYA,EAAStF,aAmBxCA,EAAeoH,EAAmBD,EAAUC,GAAoBF,EAEpEnM,EAAOC,QAAUgF,wBC1BjB,IAAIqH,EAAgB/H,EAAQ,MACxBgI,EAAWhI,EAAQ,MACnBiI,EAAcjI,EAAQ,MAkC1BvE,EAAOC,QAJP,SAAcqH,GACZ,OAAOkF,EAAYlF,GAAUgF,EAAchF,GAAUiF,EAASjF,EAChE,oBCjBAtH,EAAOC,QAJP,WACE,OAAO,CACT,wBCfA,IAAI2E,EAASL,EAAQ,MACjBkI,EAAYlI,EAAQ,KACpBwE,EAASxE,EAAQ,MACjBiI,EAAcjI,EAAQ,MACtBmI,EAAWnI,EAAQ,MACnBoI,EAAkBpI,EAAQ,MAC1BqI,EAAarI,EAAQ,KACrBsI,EAAatI,EAAQ,MACrBuI,EAAgBvI,EAAQ,MACxBwI,EAASxI,EAAQ,MAOjByI,EAAcpI,EAASA,EAAO8E,cAAWvD,EAyC7CnG,EAAOC,QAhBP,SAAiBL,GACf,IAAKA,EACH,MAAO,GAET,GAAI4M,EAAY5M,GACd,OAAO8M,EAAS9M,GAASkN,EAAclN,GAAS6M,EAAU7M,GAE5D,GAAIoN,GAAepN,EAAMoN,GACvB,OAAOL,EAAgB/M,EAAMoN,MAE/B,IAAI9E,EAAMa,EAAOnJ,GAGjB,OA1CW,gBAwCAsI,EAAgB0E,EAvChB,gBAuC8B1E,EAAgB2E,EAAaE,GAE1DnN,EACd,wBCvDA,IAAIqN,EAAa1I,EAAQ,MACrBiF,EAAOjF,EAAQ,MAgCnBvE,EAAOC,QAJP,SAAgBqH,GACd,OAAiB,MAAVA,EAAiB,GAAK2F,EAAW3F,EAAQkC,EAAKlC,GACvD,wBC/BAtH,EAAOC,QAAU,EAAjBD,4BCCA,IAAIkN,EAAU3I,EAAQ,MAClB4I,EAAc5I,EAAQ,MAOtB6I,EAAiB,yBAMjBC,EAAiB,qCAQrB,SAASC,EAAajM,GACpB,IAAIkM,EAAalM,EAAImM,QAAQ,KAC7B,OAAID,GAAc,EAEZA,IAAelM,EAAIZ,OAAS,EAEvB6M,EADPjM,EAAMA,EAAIoM,UAAU,EAAGF,IAIhBD,EADPjM,EAAMA,EAAIqM,OAAOH,EAAa,IAK3BlM,CACT,CAQA,SAASsM,EAAYtM,GACnB,MAAuB,kBAARA,GAAoBA,EAAIZ,OAAS,EAAK,IAAMY,EAAM,IAAMA,CACzE,CAgBA,IAAIuM,EAAmBnI,OAAOoI,aAAa,OACvCC,EAAkB,IAAI9G,OAAO4G,EAAkB,KAInD,SAASG,EAAUC,GACjB,OAAOA,EAAK1M,QAAQwM,EAAiB,GACvC,CAKA,IAAIG,EAAc7P,OAAOoL,KAAK2D,GAAae,QAAO,SAASC,EAAEC,GAE3D,OADAD,EAAEJ,EAASZ,EAAYiB,KAAOA,EACvBD,CACT,GAAG,CAAC,GAKAE,EAAQ,CACVC,MAAOnB,GAQTkB,EAAME,KAAO,SAAeD,GAC1B,OAAIL,EAAYF,EAASO,IAChBA,EACEnB,EAAY7O,eAAegQ,GAC7BnB,EAAYmB,GAxCE,kBADFjN,EA4CDiN,IA3C0B,MAAXjN,EAAI,GAAcsM,EAAWtM,GAAOA,EADzE,IAAuBA,CA6CvB,EAOAgN,EAAMG,IAAM,SAAcF,GAGxB,OAFAA,EAAQhB,EAAYgB,GAEbD,EAAME,KAAKD,EACpB,EAOAD,EAAMI,KAAO,SAAeC,GAC1B,OAAOL,EAAMM,WAAWD,IAAeL,EAAMO,WAAWF,EAC1D,EAOAL,EAAMM,WAAa,SAAqBlP,GACtC,IAAIoP,EAAWvB,EAAY7N,GACvB6O,EAAQnB,EAAY0B,GAExB,OAAOP,EAAS,CAAEA,MAAOA,EAAOpP,IAAK2P,QAAc1I,CACrD,EAOAkI,EAAMO,WAAa,SAAqBZ,GACtC,IAAIa,EAAWd,EAASC,GACpBvO,EAAOwO,EAAYY,GAGvB,OAAOpP,EAAQ,CAAE6O,MAAOnB,EAAY1N,GAAOP,IAAKO,QAAU0G,CAC5D,EAQAkI,EAAMS,SAAW,SAAmBJ,GAClC,OAAOL,EAAMU,eAAeL,IAAeL,EAAMW,eAAeN,EAClE,EAOAL,EAAMU,eAAiB,SAAyBtP,GAC9C,IAAI+F,EAAS6I,EAAMM,WAAWlP,GAC9B,QAAS+F,GAAUA,EAAOtG,MAAQoO,EAAY7N,EAChD,EAOA4O,EAAMW,eAAiB,SAAyBhB,GAC9C,IAAIxI,EAAS6I,EAAMO,WAAWZ,GAC9B,QAASxI,GAAUuI,EAASvI,EAAO8I,SAAWP,EAASC,EACzD,EAQAK,EAAMY,MAAQ,SAAgBC,EAAYC,GACxC,IAAInB,EAAOD,EAASmB,GAChBE,EAAOnB,EAAYD,GAEvB,OAAOmB,EAAgBxB,EAAWyB,GAAQA,CAC5C,EASAf,EAAMgB,QAAU,SAAkBhO,EAAKiO,EAAYC,GACjD,OAAKlO,EAEEA,EAAIyE,MAAMsH,GACNtD,KAAI,SAAoB0F,EAAGhP,GAE1B,GAAIA,EAAI,IAAM,EAAG,OAAOgP,EACxB,IAAIlB,EAAQD,EAAME,KAAKiB,GACnBC,EAAYnB,EAAMd,QAAQ,MAAQ,EAEtC,OAAIiC,GAAmC,oBAAfH,EACfA,EAAWE,GAGfC,GAA+B,oBAAXF,EAIlBjB,EAHEiB,EAAOjB,EAAOkB,EAIzB,IACC5D,KAAK,IAnBC,EAqBnB,EAMAyC,EAAMqB,OAAS,WACb,IAAIC,EAAYvR,OAAOoL,KAAK2D,GAExBjO,EAAMyQ,EADQC,KAAKC,MAAMD,KAAKF,SAAWC,EAAUlP,SAGvD,MAAO,CAAEvB,IAAKA,EAAKoP,MADPD,EAAME,KAAKrP,GAEzB,EAOAmP,EAAMyB,OAAS,SAAiBzO,GAC9B,IAAIsO,EAAYvR,OAAOoL,KAAK2D,GACxB4C,EAAUzC,EAAYjM,GAI1B,OAHmBsO,EAAUK,QAAO,SAAS9Q,GAC3C,OAA2C,IAApCA,EAAIV,WAAWgP,QAAQuC,EAChC,IACoBjG,KAAI,SAAS5K,GAC/B,MAAO,CACLA,IAAKA,EACLoP,MAAOD,EAAME,KAAKrP,GAEtB,GACF,EAOAmP,EAAM4B,UAAY,SAAoB5O,GACpC,OAAKA,EACO6L,EAAQ7L,GAEPyI,KAAI,SAASsF,GACxB,OAAOf,EAAMY,MAAMG,GAAM,IAASA,CACpC,IAAGxD,KAAK,IALS,EAMnB,EASAyC,EAAM/M,QAAU,SAAkBD,EAAK6O,EAAaC,GAClD,IAAK9O,EAAK,MAAO,GAEjB,IAAIC,EAAiC,oBAAhB4O,EAA6BA,EAAc,WAAa,OAAOA,CAAa,EAC7FE,EAAQlD,EAAQ7L,GAEhBgP,EAAWD,EAAMtG,KAAI,SAASsF,EAAMkB,GACtC,IAAIhC,EAAQD,EAAMO,WAAWQ,GAM7B,OAJId,GAAS6B,GAAkC,MAAnBC,EAAME,EAAM,KACtCF,EAAME,EAAM,GAAK,IAGZhC,EAAQhN,EAAQgN,GAASc,CAClC,IAAGxD,KAAK,IAER,OAAOuE,EAAcE,EAAS/O,QAAQ+L,EAAgB,IAAMgD,CAC9D,EAQAhC,EAAMkC,MAAQ,SAAgBlP,GAC5B,OAAOgN,EAAM/M,QAAQD,EAAK,IAAI,EAChC,EAEArB,EAAOC,QAAUoO,8JCxSbmC,EACM,iBADNA,EAEM,iBAFNA,EAGO,kBAGPC,EAAY,CACZC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,SAAU,WACVC,OAAQ,SACRC,MAAO,QACPC,MAAO,SAOPC,GAJkBhT,OAAOoL,KAAKiH,GAAW3G,KAAI,SAAUrK,GACvD,OAAOgR,EAAUhR,EACrB,IAGa,WADT2R,EAEU,UAFVA,EAGM,OAHNA,EAIW,aAJXA,EAKY,YALZA,EAMW,WANXA,EAOM,OAPNA,EAQU,WARVA,EASK,MATLA,EAUK,MAVLA,EAWQ,SAGRC,EAAgB,CAChBC,UAAW,YACXC,QAAS,UACTC,MAAO,YACPC,gBAAiB,kBACjBC,YAAa,cACb,aAAc,YACdC,SAAU,WACVC,SAAU,YAGVC,EACe,eADfA,EAEO,QAFPA,EAG2B,0BAH3BA,EAIwB,sBAJxBA,EAKgB,gBAGhBC,EAAe1T,OAAOoL,KAAK6H,GAAenD,QAAO,SAAUjP,EAAKC,GAEhE,OADAD,EAAIoS,EAAcnS,IAAQA,EACnBD,CACX,GAAG,CAAC,GAEA8S,EAAoB,CAACtB,EAAUO,SAAUP,EAAUQ,OAAQR,EAAUS,OAErEc,EAAmB,oBAEnBC,EAA4B,oBAAXrN,QAAoD,kBAApBA,OAAO8E,SAAwB,SAAUzK,GAC5F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAyB,oBAAX2F,QAAyB3F,EAAII,cAAgBuF,QAAU3F,IAAQ2F,OAAOvG,UAAY,gBAAkBY,CAC3H,EAEIiT,EAAiB,SAAUC,EAAUC,GACvC,KAAMD,aAAoBC,GACxB,MAAM,IAAI5Q,UAAU,oCAExB,EAEI6Q,EAAc,WAChB,SAASC,EAAiB/S,EAAQmI,GAChC,IAAK,IAAIlH,EAAI,EAAGA,EAAIkH,EAAMjH,OAAQD,IAAK,CACrC,IAAI+R,EAAa7K,EAAMlH,GACvB+R,EAAW7S,WAAa6S,EAAW7S,aAAc,EACjD6S,EAAW5S,cAAe,EACtB,UAAW4S,IAAYA,EAAWzS,UAAW,GACjD1B,OAAOK,eAAec,EAAQgT,EAAWrT,IAAKqT,EAChD,CACF,CAEA,OAAO,SAAUH,EAAaI,EAAYC,GAGxC,OAFID,GAAYF,EAAiBF,EAAY/T,UAAWmU,GACpDC,GAAaH,EAAiBF,EAAaK,GACxCL,CACT,CACF,CAhBkB,GAkBdM,EAAWtU,OAAOuU,QAAU,SAAUpT,GACxC,IAAK,IAAIiB,EAAI,EAAGA,EAAID,UAAUE,OAAQD,IAAK,CACzC,IAAI+B,EAAShC,UAAUC,GAEvB,IAAK,IAAItB,KAAOqD,EACVnE,OAAOC,UAAUC,eAAeS,KAAKwD,EAAQrD,KAC/CK,EAAOL,GAAOqD,EAAOrD,GAG3B,CAEA,OAAOK,CACT,EAkBIqT,EAA0B,SAAU3T,EAAKuK,GAC3C,IAAIjK,EAAS,CAAC,EAEd,IAAK,IAAIiB,KAAKvB,EACRuK,EAAKgE,QAAQhN,IAAM,GAClBpC,OAAOC,UAAUC,eAAeS,KAAKE,EAAKuB,KAC/CjB,EAAOiB,GAAKvB,EAAIuB,IAGlB,OAAOjB,CACT,EAEIsT,EAA4B,SAAUhI,EAAM9L,GAC9C,IAAK8L,EACH,MAAM,IAAIiI,eAAe,6DAG3B,OAAO/T,GAAyB,kBAATA,GAAqC,oBAATA,EAA8B8L,EAAP9L,CAC5E,EAEIgU,EAA0B,SAAiC1R,GAC3D,IAAI2R,IAASzS,UAAUE,OAAS,QAAsB0F,IAAjB5F,UAAU,KAAmBA,UAAU,GAE5E,OAAe,IAAXyS,EACOvN,OAAOpE,GAGXoE,OAAOpE,GAAKC,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAChI,EAEI2R,EAAwB,SAA+BC,GACvD,IAAIC,EAAiBC,EAAqBF,EAAWzC,EAAUU,OAC3DkC,EAAoBD,EAAqBF,EAAWrB,GAExD,GAAIwB,GAAqBF,EAErB,OAAOE,EAAkB/R,QAAQ,OAAO,WACpC,OAAOxC,MAAMF,QAAQuU,GAAkBA,EAAevH,KAAK,IAAMuH,CACrE,IAGJ,IAAIG,EAAwBF,EAAqBF,EAAWrB,GAE5D,OAAOsB,GAAkBG,QAAyBnN,CACtD,EAEIoN,EAAyB,SAAgCL,GACzD,OAAOE,EAAqBF,EAAWrB,IAAwC,WAAa,CAChG,EAEI2B,EAA6B,SAAoCC,EAASP,GAC1E,OAAOA,EAAUlD,QAAO,SAAUtI,GAC9B,MAAiC,qBAAnBA,EAAM+L,EACxB,IAAG3J,KAAI,SAAUpC,GACb,OAAOA,EAAM+L,EACjB,IAAGvF,QAAO,SAAUwF,EAAUC,GAC1B,OAAOjB,EAAS,CAAC,EAAGgB,EAAUC,EAClC,GAAG,CAAC,EACR,EAEIC,EAA0B,SAAiCC,EAAmBX,GAC9E,OAAOA,EAAUlD,QAAO,SAAUtI,GAC9B,MAAwC,qBAA1BA,EAAM+I,EAAUC,KAClC,IAAG5G,KAAI,SAAUpC,GACb,OAAOA,EAAM+I,EAAUC,KAC3B,IAAGoD,UAAU5F,QAAO,SAAU6F,EAAkB7L,GAC5C,IAAK6L,EAAiBtT,OAGlB,IAFA,IAAI+I,EAAOpL,OAAOoL,KAAKtB,GAEd1H,EAAI,EAAGA,EAAIgJ,EAAK/I,OAAQD,IAAK,CAClC,IACIwT,EADexK,EAAKhJ,GACiByT,cAEzC,IAA0D,IAAtDJ,EAAkBrG,QAAQwG,IAAiC9L,EAAI8L,GAC/D,OAAOD,EAAiBG,OAAOhM,EAEvC,CAGJ,OAAO6L,CACX,GAAG,GACP,EAEII,EAAuB,SAA8BC,EAASP,EAAmBX,GAEjF,IAAImB,EAAmB,CAAC,EAExB,OAAOnB,EAAUlD,QAAO,SAAUtI,GAC9B,QAAI5I,MAAMF,QAAQ8I,EAAM0M,MAGM,qBAAnB1M,EAAM0M,IACbE,EAAK,WAAaF,EAAU,mDAAwDnC,EAAQvK,EAAM0M,IAAY,MAE3G,EACX,IAAGtK,KAAI,SAAUpC,GACb,OAAOA,EAAM0M,EACjB,IAAGN,UAAU5F,QAAO,SAAUqG,EAAcC,GACxC,IAAIC,EAAmB,CAAC,EAExBD,EAAaxE,QAAO,SAAU9H,GAG1B,IAFA,IAAIwM,OAAsB,EACtBlL,EAAOpL,OAAOoL,KAAKtB,GACd1H,EAAI,EAAGA,EAAIgJ,EAAK/I,OAAQD,IAAK,CAClC,IAAImU,EAAenL,EAAKhJ,GACpBwT,EAAwBW,EAAaV,eAGiB,IAAtDJ,EAAkBrG,QAAQwG,IAAmCU,IAAwBtD,GAAiE,cAA3ClJ,EAAIwM,GAAqBT,eAAoCD,IAA0B5C,GAAmE,eAA7ClJ,EAAI8L,GAAuBC,gBACnPS,EAAsBV,IAGuB,IAA7CH,EAAkBrG,QAAQmH,IAAyBA,IAAiBvD,GAA6BuD,IAAiBvD,GAA2BuD,IAAiBvD,IAC9JsD,EAAsBC,EAE9B,CAEA,IAAKD,IAAwBxM,EAAIwM,GAC7B,OAAO,EAGX,IAAI9U,EAAQsI,EAAIwM,GAAqBT,cAUrC,OARKI,EAAiBK,KAClBL,EAAiBK,GAAuB,CAAC,GAGxCD,EAAiBC,KAClBD,EAAiBC,GAAuB,CAAC,IAGxCL,EAAiBK,GAAqB9U,KACvC6U,EAAiBC,GAAqB9U,IAAS,GACxC,EAIf,IAAGkU,UAAU9J,SAAQ,SAAU9B,GAC3B,OAAOqM,EAAatR,KAAKiF,EAC7B,IAIA,IADA,IAAIsB,EAAOpL,OAAOoL,KAAKiL,GACdjU,EAAI,EAAGA,EAAIgJ,EAAK/I,OAAQD,IAAK,CAClC,IAAImU,EAAenL,EAAKhJ,GACpBoU,EAAWC,IAAa,CAAC,EAAGR,EAAiBM,GAAeF,EAAiBE,IAEjFN,EAAiBM,GAAgBC,CACrC,CAEA,OAAOL,CACX,GAAG,IAAIT,SACX,EAEIV,EAAuB,SAA8BF,EAAWjP,GAChE,IAAK,IAAIzD,EAAI0S,EAAUzS,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC5C,IAAIkH,EAAQwL,EAAU1S,GAEtB,GAAIkH,EAAMpJ,eAAe2F,GACrB,OAAOyD,EAAMzD,EAErB,CAEA,OAAO,IACX,EAoBI6Q,EAAc,WACd,IAAIC,EAAQC,KAAKC,MAEjB,OAAO,SAAUC,GACb,IAAIC,EAAcH,KAAKC,MAEnBE,EAAcJ,EAAQ,IACtBA,EAAQI,EACRD,EAASC,IAETC,YAAW,WACPN,EAAYI,EAChB,GAAG,EAEX,CACJ,CAfkB,GAiBdG,EAAc,SAAqBC,GACnC,OAAOC,aAAaD,EACxB,EAEIE,EAA0C,qBAAXC,OAAyBA,OAAOD,uBAAyBC,OAAOD,sBAAsBE,KAAKD,SAAWA,OAAOE,6BAA+BF,OAAOG,0BAA4Bd,EAAcjN,EAAAA,EAAO2N,uBAAyBV,EAE5Pe,EAAyC,qBAAXJ,OAAyBA,OAAOI,sBAAwBJ,OAAOK,4BAA8BL,OAAOM,yBAA2BV,EAAcxN,EAAAA,EAAOgO,sBAAwBR,EAE1Mf,EAAO,SAAc3R,GACrB,OAAOqT,SAAmC,oBAAjBA,QAAQ1B,MAAuB0B,QAAQ1B,KAAK3R,EACzE,EAEIsT,GAAkB,KAmBlBC,GAAmB,SAA0BC,EAAUC,GACvD,IAAIC,EAAUF,EAASE,QACnBC,EAAiBH,EAASG,eAC1BC,EAAiBJ,EAASI,eAC1BC,EAAWL,EAASK,SACpBC,EAAWN,EAASM,SACpBC,EAAeP,EAASO,aACxBC,EAAsBR,EAASQ,oBAC/BC,EAAaT,EAASS,WACtBC,EAAYV,EAASU,UACrBC,EAAQX,EAASW,MACjBC,EAAkBZ,EAASY,gBAE/BC,GAAiBvG,EAAUE,KAAM2F,GACjCU,GAAiBvG,EAAUI,KAAM0F,GAEjCU,GAAYH,EAAOC,GAEnB,IAAIG,EAAa,CACbb,QAASc,GAAW1G,EAAUC,KAAM2F,GACpCG,SAAUW,GAAW1G,EAAUK,KAAM0F,GACrCC,SAAUU,GAAW1G,EAAUM,KAAM0F,GACrCC,aAAcS,GAAW1G,EAAUO,SAAU0F,GAC7CE,WAAYO,GAAW1G,EAAUQ,OAAQ2F,GACzCC,UAAWM,GAAW1G,EAAUS,MAAO2F,IAGvCO,EAAY,CAAC,EACbC,EAAc,CAAC,EAEnBjZ,OAAOoL,KAAK0N,GAAYlN,SAAQ,SAAUyJ,GACtC,IAAI6D,EAAsBJ,EAAWzD,GACjC8D,EAAUD,EAAoBC,QAC9BC,EAAUF,EAAoBE,QAG9BD,EAAQ9W,SACR2W,EAAU3D,GAAW8D,GAErBC,EAAQ/W,SACR4W,EAAY5D,GAAWyD,EAAWzD,GAAS+D,QAEnD,IAEApB,GAAMA,IAENO,EAAoBR,EAAUiB,EAAWC,EAC7C,EAEII,GAAe,SAAsBC,GACrC,OAAO5Y,MAAMF,QAAQ8Y,GAAiBA,EAAc9L,KAAK,IAAM8L,CACnE,EAEIT,GAAc,SAAqBH,EAAOa,GACrB,qBAAVb,GAAyBc,SAASd,QAAUA,IACnDc,SAASd,MAAQW,GAAaX,IAGlCE,GAAiBvG,EAAUU,MAAOwG,EACtC,EAEIX,GAAmB,SAA0B5C,EAASuD,GACtD,IAAIE,EAAaD,SAASE,qBAAqB1D,GAAS,GAExD,GAAKyD,EAAL,CASA,IALA,IAAIE,EAAwBF,EAAWG,aAAahG,GAChDiG,EAAmBF,EAAwBA,EAAsBjS,MAAM,KAAO,GAC9EoS,EAAqB,GAAGhE,OAAO+D,GAC/BE,EAAgB/Z,OAAOoL,KAAKmO,GAEvBnX,EAAI,EAAGA,EAAI2X,EAAc1X,OAAQD,IAAK,CAC3C,IAAI4X,EAAYD,EAAc3X,GAC1BZ,EAAQ+X,EAAWS,IAAc,GAEjCP,EAAWG,aAAaI,KAAexY,GACvCiY,EAAWQ,aAAaD,EAAWxY,IAGM,IAAzCqY,EAAiBzK,QAAQ4K,IACzBH,EAAiBhV,KAAKmV,GAG1B,IAAIE,EAAcJ,EAAmB1K,QAAQ4K,IACxB,IAAjBE,GACAJ,EAAmBK,OAAOD,EAAa,EAE/C,CAEA,IAAK,IAAIE,EAAKN,EAAmBzX,OAAS,EAAG+X,GAAM,EAAGA,IAClDX,EAAWY,gBAAgBP,EAAmBM,IAG9CP,EAAiBxX,SAAWyX,EAAmBzX,OAC/CoX,EAAWY,gBAAgBzG,GACpB6F,EAAWG,aAAahG,KAAsBmG,EAAcvM,KAAK,MACxEiM,EAAWQ,aAAarG,EAAkBmG,EAAcvM,KAAK,KAhCjE,CAkCJ,EAEIuL,GAAa,SAAoBvT,EAAM8U,GACvC,IAAIC,EAAcf,SAASgB,MAAQhB,SAASiB,cAAcpI,EAAUG,MAChEkI,EAAWH,EAAYI,iBAAiBnV,EAAO,IAAPA,sBACxC4T,EAAU1Y,MAAMT,UAAUgF,MAAMtE,KAAK+Z,GACrCvB,EAAU,GACVyB,OAAgB,EA4CpB,OA1CIN,GAAQA,EAAKjY,QACbiY,EAAK1O,SAAQ,SAAU9B,GACnB,IAAI+Q,EAAarB,SAASsB,cAActV,GAExC,IAAK,IAAIwU,KAAalQ,EAClB,GAAIA,EAAI5J,eAAe8Z,GACnB,GAAIA,IAAchH,EACd6H,EAAWE,UAAYjR,EAAIiR,eACxB,GAAIf,IAAchH,EACjB6H,EAAWG,WACXH,EAAWG,WAAWC,QAAUnR,EAAImR,QAEpCJ,EAAWK,YAAY1B,SAAS2B,eAAerR,EAAImR,cAEpD,CACH,IAAIzZ,EAAkC,qBAAnBsI,EAAIkQ,GAA6B,GAAKlQ,EAAIkQ,GAC7Da,EAAWZ,aAAaD,EAAWxY,EACvC,CAIRqZ,EAAWZ,aAAarG,EAAkB,QAGtCwF,EAAQgC,MAAK,SAAUC,EAAa7T,GAEpC,OADAoT,EAAgBpT,EACTqT,EAAWS,YAAYD,EAClC,IACIjC,EAAQe,OAAOS,EAAe,GAE9BzB,EAAQtU,KAAKgW,EAErB,IAGJzB,EAAQxN,SAAQ,SAAU9B,GACtB,OAAOA,EAAIyR,WAAWC,YAAY1R,EACtC,IACAqP,EAAQvN,SAAQ,SAAU9B,GACtB,OAAOyQ,EAAYW,YAAYpR,EACnC,IAEO,CACHsP,QAASA,EACTD,QAASA,EAEjB,EAEIsC,GAAoC,SAA2ClC,GAC/E,OAAOvZ,OAAOoL,KAAKmO,GAAYzJ,QAAO,SAAU7M,EAAKnC,GACjD,IAAI4a,EAAkC,qBAApBnC,EAAWzY,GAAuBA,EAAM,KAAQyY,EAAWzY,GAAO,IAAO,GAAKA,EAChG,OAAOmC,EAAMA,EAAM,IAAMyY,EAAOA,CACpC,GAAG,GACP,EAyBIC,GAAuC,SAA8CpC,GACrF,IAAIqC,EAAYzZ,UAAUE,OAAS,QAAsB0F,IAAjB5F,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAErF,OAAOnC,OAAOoL,KAAKmO,GAAYzJ,QAAO,SAAUjP,EAAKC,GAEjD,OADAD,EAAIoS,EAAcnS,IAAQA,GAAOyY,EAAWzY,GACrCD,CACX,GAAG+a,EACP,EA8CIC,GAAmB,SAA0BrW,EAAM8U,EAAM1F,GACzD,OAAQpP,GACJ,KAAK6M,EAAUU,MACX,MAAO,CACH+I,YAAa,WACT,OAxCgB,SAAuCtW,EAAMkT,EAAOa,GACpF,IAAIwC,EAGAH,IAAaG,EAAa,CAC1Bjb,IAAK4X,IACK9E,IAAoB,EAAMmI,GACpCzS,EAAQqS,GAAqCpC,EAAYqC,GAE7D,MAAO,CAACI,EAAAA,cAAoB3J,EAAUU,MAAOzJ,EAAOoP,GACxD,CA8B2BuD,CAA8BzW,EAAM8U,EAAK5B,MAAO4B,EAAK3B,gBAChE,EACAvY,SAAU,WACN,OApFQ,SAA+BoF,EAAMkT,EAAOa,EAAY3E,GAChF,IAAIsH,EAAkBT,GAAkClC,GACpD4C,EAAiB9C,GAAaX,GAClC,OAAOwD,EAAkB,IAAM1W,EAAN,6BAAqD0W,EAAkB,IAAMvH,EAAwBwH,EAAgBvH,GAAU,KAAOpP,EAAO,IAAM,IAAMA,EAAN,6BAAqDmP,EAAwBwH,EAAgBvH,GAAU,KAAOpP,EAAO,GACrS,CAgF2B4W,CAAsB5W,EAAM8U,EAAK5B,MAAO4B,EAAK3B,gBAAiB/D,EACzE,GAER,KAAKxC,EACL,KAAKA,EACD,MAAO,CACH0J,YAAa,WACT,OAAOH,GAAqCrB,EAChD,EACAla,SAAU,WACN,OAAOqb,GAAkCnB,EAC7C,GAER,QACI,MAAO,CACHwB,YAAa,WACT,OA/Ce,SAAsCtW,EAAM8U,GAC3E,OAAOA,EAAK5O,KAAI,SAAU5B,EAAK1H,GAC3B,IAAIia,EAEAC,IAAaD,EAAa,CAC1Bvb,IAAKsB,IACKwR,IAAoB,EAAMyI,GAaxC,OAXArc,OAAOoL,KAAKtB,GAAK8B,SAAQ,SAAUoO,GAC/B,IAAIuC,EAAkBtJ,EAAc+G,IAAcA,EAElD,GAAIuC,IAAoBvJ,GAA6BuJ,IAAoBvJ,EAAyB,CAC9F,IAAI5O,EAAU0F,EAAIiR,WAAajR,EAAImR,QACnCqB,EAAUE,wBAA0B,CAAEC,OAAQrY,EAClD,MACIkY,EAAUC,GAAmBzS,EAAIkQ,EAEzC,IAEOgC,EAAAA,cAAoBxW,EAAM8W,EACrC,GACJ,CA0B2BI,CAA6BlX,EAAM8U,EAC9C,EACAla,SAAU,WACN,OAjGO,SAA8BoF,EAAM8U,EAAM1F,GACjE,OAAO0F,EAAKxK,QAAO,SAAU7M,EAAK6G,GAC9B,IAAI6S,EAAgB3c,OAAOoL,KAAKtB,GAAK8H,QAAO,SAAUoI,GAClD,QAASA,IAAchH,GAA6BgH,IAAchH,EACtE,IAAGlD,QAAO,SAAUrI,EAAQuS,GACxB,IAAI0B,EAAiC,qBAAnB5R,EAAIkQ,GAA6BA,EAAYA,EAAY,KAAQrF,EAAwB7K,EAAIkQ,GAAYpF,GAAU,IACrI,OAAOnN,EAASA,EAAS,IAAMiU,EAAOA,CAC1C,GAAG,IAECkB,EAAa9S,EAAIiR,WAAajR,EAAImR,SAAW,GAE7C4B,GAAqD,IAArClJ,EAAkBvE,QAAQ5J,GAE9C,OAAOvC,EAAM,IAAMuC,EAAZvC,6BAA2D0Z,GAAiBE,EAAgB,KAAO,IAAMD,EAAa,KAAOpX,EAAO,IAC/I,GAAG,GACP,CAkF2BsX,CAAqBtX,EAAM8U,EAAM1F,EAC5C,GAGhB,EAEImI,GAAmB,SAA0BC,GAC7C,IAAI/E,EAAU+E,EAAK/E,QACfC,EAAiB8E,EAAK9E,eACtBtD,EAASoI,EAAKpI,OACduD,EAAiB6E,EAAK7E,eACtBC,EAAW4E,EAAK5E,SAChBC,EAAW2E,EAAK3E,SAChBC,EAAe0E,EAAK1E,aACpBE,EAAawE,EAAKxE,WAClBC,EAAYuE,EAAKvE,UACjBwE,EAAaD,EAAKtE,MAClBA,OAAuB3Q,IAAfkV,EAA2B,GAAKA,EACxCtE,EAAkBqE,EAAKrE,gBAC3B,MAAO,CACHuE,KAAMrB,GAAiBxJ,EAAUC,KAAM2F,EAASrD,GAChDsD,eAAgB2D,GAAiBzJ,EAAsB8F,EAAgBtD,GACvEuD,eAAgB0D,GAAiBzJ,EAAsB+F,EAAgBvD,GACvEuI,KAAMtB,GAAiBxJ,EAAUK,KAAM0F,EAAUxD,GACjDwI,KAAMvB,GAAiBxJ,EAAUM,KAAM0F,EAAUzD,GACjDyI,SAAUxB,GAAiBxJ,EAAUO,SAAU0F,EAAc1D,GAC7D0I,OAAQzB,GAAiBxJ,EAAUQ,OAAQ2F,EAAY5D,GACvDzR,MAAO0Y,GAAiBxJ,EAAUS,MAAO2F,EAAW7D,GACpD8D,MAAOmD,GAAiBxJ,EAAUU,MAAO,CAAE2F,MAAOA,EAAOC,gBAAiBA,GAAmB/D,GAErG,EA0PI2I,GAxPS,SAAgBC,GACzB,IAAIC,EAAQC,EAEZ,OAAOA,EAAQD,EAAS,SAAUE,GAG9B,SAASC,IAEL,OADA9J,EAAe7P,KAAM2Z,GACdnJ,EAA0BxQ,KAAM0Z,EAAiBE,MAAM5Z,KAAM9B,WACxE,CA6LA,OAzuBO,SAAU2b,EAAUC,GACjC,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAI3a,UAAU,kEAAoE2a,GAG1FD,EAAS7d,UAAYD,OAAOge,OAAOD,GAAcA,EAAW9d,UAAW,CACrEgB,YAAa,CACXO,MAAOsc,EACPxc,YAAY,EACZI,UAAU,EACVH,cAAc,KAGdwc,IAAY/d,OAAOie,eAAiBje,OAAOie,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,EAC7G,CAyhBQI,CAASP,EAAeD,GAOxBC,EAAc3d,UAAUme,sBAAwB,SAA+BC,GAC3E,OAAQC,IAAQra,KAAKqF,MAAO+U,EAChC,EAEAT,EAAc3d,UAAUse,yBAA2B,SAAkCC,EAAOC,GACxF,IAAKA,EACD,OAAO,KAGX,OAAQD,EAAMhZ,MACV,KAAK6M,EAAUQ,OACf,KAAKR,EAAUO,SACX,MAAO,CACHmI,UAAW0D,GAGnB,KAAKpM,EAAUS,MACX,MAAO,CACHmI,QAASwD,GAIrB,MAAM,IAAIha,MAAM,IAAM+Z,EAAMhZ,KAAO,qGACvC,EAEAoY,EAAc3d,UAAUye,yBAA2B,SAAkC1B,GACjF,IAAI2B,EAEAH,EAAQxB,EAAKwB,MACbI,EAAoB5B,EAAK4B,kBACzBC,EAAgB7B,EAAK6B,cACrBJ,EAAiBzB,EAAKyB,eAE1B,OAAOnK,EAAS,CAAC,EAAGsK,IAAoBD,EAAwB,CAAC,GAAyBH,EAAMhZ,MAAQ,GAAGsQ,OAAO8I,EAAkBJ,EAAMhZ,OAAS,GAAI,CAAC8O,EAAS,CAAC,EAAGuK,EAAe5a,KAAKsa,yBAAyBC,EAAOC,MAAoBE,GACjP,EAEAf,EAAc3d,UAAU6e,sBAAwB,SAA+BC,GAC3E,IAAIC,EAAwBC,EAExBT,EAAQO,EAAMP,MACdU,EAAWH,EAAMG,SACjBL,EAAgBE,EAAMF,cACtBJ,EAAiBM,EAAMN,eAE3B,OAAQD,EAAMhZ,MACV,KAAK6M,EAAUU,MACX,OAAOuB,EAAS,CAAC,EAAG4K,IAAWF,EAAyB,CAAC,GAA0BR,EAAMhZ,MAAQiZ,EAAgBO,EAAuBrG,gBAAkBrE,EAAS,CAAC,EAAGuK,GAAgBG,IAE3L,KAAK3M,EAAUE,KACX,OAAO+B,EAAS,CAAC,EAAG4K,EAAU,CAC1BhH,eAAgB5D,EAAS,CAAC,EAAGuK,KAGrC,KAAKxM,EAAUI,KACX,OAAO6B,EAAS,CAAC,EAAG4K,EAAU,CAC1B/G,eAAgB7D,EAAS,CAAC,EAAGuK,KAIzC,OAAOvK,EAAS,CAAC,EAAG4K,IAAWD,EAAyB,CAAC,GAA0BT,EAAMhZ,MAAQ8O,EAAS,CAAC,EAAGuK,GAAgBI,GAClI,EAEArB,EAAc3d,UAAUkf,4BAA8B,SAAqCP,EAAmBM,GAC1G,IAAIE,EAAoB9K,EAAS,CAAC,EAAG4K,GAQrC,OANAlf,OAAOoL,KAAKwT,GAAmBhT,SAAQ,SAAUyT,GAC7C,IAAIC,EAEJF,EAAoB9K,EAAS,CAAC,EAAG8K,IAAoBE,EAAyB,CAAC,GAA0BD,GAAkBT,EAAkBS,GAAiBC,GAClK,IAEOF,CACX,EAEAxB,EAAc3d,UAAUsf,sBAAwB,SAA+Bf,EAAOC,GAmBlF,OAAO,CACX,EAEAb,EAAc3d,UAAUuf,mBAAqB,SAA4BC,EAAUP,GAC/E,IAAIQ,EAASzb,KAET2a,EAAoB,CAAC,EAyCzB,OAvCA5C,EAAAA,SAAAA,QAAuByD,GAAU,SAAUjB,GACvC,GAAKA,GAAUA,EAAMlV,MAArB,CAIA,IAAIqW,EAAenB,EAAMlV,MACrBmV,EAAiBkB,EAAaF,SAG9BZ,EAhOoB,SAA2CvV,GAC/E,IAAIsW,EAAiBzd,UAAUE,OAAS,QAAsB0F,IAAjB5F,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAE1F,OAAOnC,OAAOoL,KAAK9B,GAAOwG,QAAO,SAAUjP,EAAKC,GAE5C,OADAD,EAAI6S,EAAa5S,IAAQA,GAAOwI,EAAMxI,GAC/BD,CACX,GAAG+e,EACP,CAyNoCC,CAFHrL,EAAwBmL,EAAc,CAAC,cAMxD,OAFAD,EAAOH,sBAAsBf,EAAOC,GAE5BD,EAAMhZ,MACV,KAAK6M,EAAUK,KACf,KAAKL,EAAUM,KACf,KAAKN,EAAUO,SACf,KAAKP,EAAUQ,OACf,KAAKR,EAAUS,MACX8L,EAAoBc,EAAOhB,yBAAyB,CAChDF,MAAOA,EACPI,kBAAmBA,EACnBC,cAAeA,EACfJ,eAAgBA,IAEpB,MAEJ,QACIS,EAAWQ,EAAOZ,sBAAsB,CACpCN,MAAOA,EACPU,SAAUA,EACVL,cAAeA,EACfJ,eAAgBA,IA7B5B,CAiCJ,IAEAS,EAAWjb,KAAKkb,4BAA4BP,EAAmBM,EAEnE,EAEAtB,EAAc3d,UAAU6f,OAAS,WAC7B,IAAIC,EAAS9b,KAAKqF,MACdmW,EAAWM,EAAON,SAClBnW,EAAQkL,EAAwBuL,EAAQ,CAAC,aAEzCb,EAAW5K,EAAS,CAAC,EAAGhL,GAM5B,OAJImW,IACAP,EAAWjb,KAAKub,mBAAmBC,EAAUP,IAG1ClD,EAAAA,cAAoBwB,EAAW0B,EAC1C,EAEAjL,EAAY2J,EAAe,KAAM,CAAC,CAC9B9c,IAAK,YAyBL6L,IAAK,SAAgBqT,GACjBxC,EAAUwC,UAAYA,CAC1B,KAEGpC,CACX,CApMwB,CAoMtB5B,EAAAA,WAAkByB,EAAOwC,UAAY,CACnC/C,KAAMgD,IAAAA,OACNhI,eAAgBgI,IAAAA,OAChBT,SAAUS,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,MAAiBA,IAAAA,OAClEC,aAAcD,IAAAA,OACdE,MAAOF,IAAAA,KACPvL,wBAAyBuL,IAAAA,KACzB/H,eAAgB+H,IAAAA,OAChB/C,KAAM+C,IAAAA,QAAkBA,IAAAA,QACxB9C,KAAM8C,IAAAA,QAAkBA,IAAAA,QACxB7C,SAAU6C,IAAAA,QAAkBA,IAAAA,QAC5B3H,oBAAqB2H,IAAAA,KACrB5C,OAAQ4C,IAAAA,QAAkBA,IAAAA,QAC1B/c,MAAO+c,IAAAA,QAAkBA,IAAAA,QACzBxH,MAAOwH,IAAAA,OACPvH,gBAAiBuH,IAAAA,OACjBG,cAAeH,IAAAA,QAChBzC,EAAO6C,aAAe,CACrBF,OAAO,EACPzL,yBAAyB,GAC1B8I,EAAO8C,KAAO/C,EAAU+C,KAAM9C,EAAO+C,OAAS,WAC7C,IAAIC,EAAcjD,EAAUgD,SAkB5B,OAjBKC,IAEDA,EAAc1D,GAAiB,CAC3B9E,QAAS,GACTC,eAAgB,CAAC,EACjBvD,yBAAyB,EACzBwD,eAAgB,CAAC,EACjBC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdE,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,gBAAiB,CAAC,KAInB8H,CACX,EAAG/C,CACP,CAQmBgD,CAFKC,KAnmBC,SAA4B7L,GACjD,MAAO,CACHmD,QAASzC,EAAwB,CAACxC,EAAqBA,GAAwB8B,GAC/EoD,eAAgB9C,EAA2BhD,EAAsB0C,GACjEsL,MAAOpL,EAAqBF,EAAWrB,GACvCmB,OAAQI,EAAqBF,EAAWrB,GACxC0E,eAAgB/C,EAA2BhD,EAAsB0C,GACjEsD,SAAUrC,EAAqB1D,EAAUK,KAAM,CAACM,EAAoBA,GAAsB8B,GAC1FuD,SAAUtC,EAAqB1D,EAAUM,KAAM,CAACK,EAAqBA,EAAwBA,EAA0BA,EAAyBA,GAA2B8B,GAC3KwD,aAAcvC,EAAqB1D,EAAUO,SAAU,CAACI,GAA4B8B,GACpFyD,oBAAqBpD,EAAuBL,GAC5C0D,WAAYzC,EAAqB1D,EAAUQ,OAAQ,CAACG,EAAoBA,GAA4B8B,GACpG2D,UAAW1C,EAAqB1D,EAAUS,MAAO,CAACE,GAA0B8B,GAC5E4D,MAAO7D,EAAsBC,GAC7B6D,gBAAiBvD,EAA2BhD,EAAuB0C,GAE3E,IAiC8B,SAAiCiD,GACvDF,IACAJ,EAAqBI,IAGrBE,EAASqI,MACTvI,GAAkBT,GAAsB,WACpCU,GAAiBC,GAAU,WACvBF,GAAkB,IACtB,GACJ,KAEAC,GAAiBC,GACjBF,GAAkB,KAE1B,GAmiBoFkF,GAA5D4D,EAJJ,WAChB,OAAO,IACX,KAKApD,GAAaqD,aAAerD,GAAaiD,wCCt4B5B,IAA4bK,EAAxbC,EAAEta,OAAOua,IAAI,iBAAiB3b,EAAEoB,OAAOua,IAAI,gBAAgBC,EAAExa,OAAOua,IAAI,kBAAkB/W,EAAExD,OAAOua,IAAI,qBAAqBE,EAAEza,OAAOua,IAAI,kBAAkBG,EAAE1a,OAAOua,IAAI,kBAAkBhR,EAAEvJ,OAAOua,IAAI,iBAAiB/Q,EAAExJ,OAAOua,IAAI,wBAAwBI,EAAE3a,OAAOua,IAAI,qBAAqBhc,EAAEyB,OAAOua,IAAI,kBAAkB5X,EAAE3C,OAAOua,IAAI,uBAAuBK,EAAE5a,OAAOua,IAAI,cAAcM,EAAE7a,OAAOua,IAAI,cAAcO,EAAE9a,OAAOua,IAAI,mBACtb,SAASQ,EAAEC,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKX,EAAE,OAAOU,EAAEA,EAAEhc,MAAQ,KAAKwb,EAAE,KAAKC,EAAE,KAAKjX,EAAE,KAAKjF,EAAE,KAAKoE,EAAE,OAAOqY,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAK1R,EAAE,KAAKD,EAAE,KAAKoR,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKF,EAAE,OAAOM,EAAE,QAAQ,OAAOC,GAAG,KAAKrc,EAAE,OAAOqc,EAAE,CAAC,CADkMZ,EAAEra,OAAOua,IAAI,0BAC9Mlf,EAAQ8f,gBAAgB5R,EAAElO,EAAQ+f,gBAAgBV,EAAErf,EAAQggB,QAAQf,EAAEjf,EAAQigB,WAAWX,EAAEtf,EAAQkgB,SAASf,EAAEnf,EAAQmgB,KAAKX,EAAExf,EAAQogB,KAAKb,EAAEvf,EAAQqgB,OAAO9c,EAAEvD,EAAQsgB,SAASlB,EAAEpf,EAAQugB,WAAWpY,EAAEnI,EAAQwgB,SAAStd,EAChelD,EAAQygB,aAAanZ,EAAEtH,EAAQ0gB,YAAY,WAAW,OAAM,CAAE,EAAE1gB,EAAQ2gB,iBAAiB,WAAW,OAAM,CAAE,EAAE3gB,EAAQ4gB,kBAAkB,SAASjB,GAAG,OAAOD,EAAEC,KAAKzR,CAAC,EAAElO,EAAQ6gB,kBAAkB,SAASlB,GAAG,OAAOD,EAAEC,KAAKN,CAAC,EAAErf,EAAQ8gB,UAAU,SAASnB,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWZ,CAAC,EAAEjf,EAAQ+gB,aAAa,SAASpB,GAAG,OAAOD,EAAEC,KAAKL,CAAC,EAAEtf,EAAQghB,WAAW,SAASrB,GAAG,OAAOD,EAAEC,KAAKR,CAAC,EAAEnf,EAAQihB,OAAO,SAAStB,GAAG,OAAOD,EAAEC,KAAKH,CAAC,EAAExf,EAAQkhB,OAAO,SAASvB,GAAG,OAAOD,EAAEC,KAAKJ,CAAC,EACvevf,EAAQmhB,SAAS,SAASxB,GAAG,OAAOD,EAAEC,KAAKpc,CAAC,EAAEvD,EAAQohB,WAAW,SAASzB,GAAG,OAAOD,EAAEC,KAAKP,CAAC,EAAEpf,EAAQqhB,aAAa,SAAS1B,GAAG,OAAOD,EAAEC,KAAKxX,CAAC,EAAEnI,EAAQshB,WAAW,SAAS3B,GAAG,OAAOD,EAAEC,KAAKzc,CAAC,EAAElD,EAAQuhB,eAAe,SAAS5B,GAAG,OAAOD,EAAEC,KAAKrY,CAAC,EAClPtH,EAAQwhB,mBAAmB,SAAS7B,GAAG,MAAM,kBAAkBA,GAAG,oBAAoBA,GAAGA,IAAIR,GAAGQ,IAAIP,GAAGO,IAAIxX,GAAGwX,IAAIzc,GAAGyc,IAAIrY,GAAGqY,IAAIF,GAAG,kBAAkBE,GAAG,OAAOA,IAAIA,EAAEE,WAAWL,GAAGG,EAAEE,WAAWN,GAAGI,EAAEE,WAAWR,GAAGM,EAAEE,WAAW3R,GAAGyR,EAAEE,WAAWP,GAAGK,EAAEE,WAAWb,QAAG,IAASW,EAAE8B,YAAkB,EAAEzhB,EAAQ0hB,OAAOhC,qCCV/S3f,EAAOC,QAAU,EAAjBD,yCCCF,IAF0B4hB,EAEtBxH,EAAQ7V,EAAQ,MAChBsd,GAHsBD,EAGWxH,IAHwB,kBAAPwH,GAAoB,YAAaA,EAAMA,EAAY,QAAIA,EAK7G,SAASE,EAAgB7iB,EAAKC,EAAKU,GAYjC,OAXIV,KAAOD,EACTb,OAAOK,eAAeQ,EAAKC,EAAK,CAC9BU,MAAOA,EACPF,YAAY,EACZC,cAAc,EACdG,UAAU,IAGZb,EAAIC,GAAOU,EAGNX,CACT,CAQA,IAAImf,IAAiC,qBAAX3I,SAA0BA,OAAOmC,WAAYnC,OAAOmC,SAASsB,eAgGvFlZ,EAAOC,QA/FP,SAAwB8hB,EAAoBC,EAA2B7G,GACrE,GAAkC,oBAAvB4G,EACT,MAAM,IAAIlf,MAAM,iDAGlB,GAAyC,oBAA9Bmf,EACT,MAAM,IAAInf,MAAM,wDAGlB,GAAgC,qBAArBsY,GAAgE,oBAArBA,EACpD,MAAM,IAAItY,MAAM,mEAOlB,OAAO,SAAcof,GACnB,GAAgC,oBAArBA,EACT,MAAM,IAAIpf,MAAM,sDAGlB,IACIqf,EADAC,EAAmB,GAGvB,SAASC,IACPF,EAAQH,EAAmBI,EAAiBrY,KAAI,SAAUqI,GACxD,OAAOA,EAASzK,KAClB,KAEI2a,EAAWjE,UACb4D,EAA0BE,GACjB/G,IACT+G,EAAQ/G,EAAiB+G,GAE7B,CAEA,IAAIG,EAEJ,SAAUC,GA9Cd,IAAwBpG,EAAUC,EAiD5B,SAASkG,IACP,OAAOC,EAAerG,MAAM5Z,KAAM9B,YAAc8B,IAClD,CAnD4B8Z,EA+CDmG,GA/CTpG,EA+CHmG,GA9CVhkB,UAAYD,OAAOge,OAAOD,EAAW9d,WAC9C6d,EAAS7d,UAAUgB,YAAc6c,EACjCA,EAASI,UAAYH,EAoDjBkG,EAAW1D,KAAO,WAChB,OAAOuD,CACT,EAEAG,EAAWzD,OAAS,WAClB,GAAIyD,EAAWjE,UACb,MAAM,IAAIvb,MAAM,oFAGlB,IAAI0f,EAAgBL,EAGpB,OAFAA,OAAQ/b,EACRgc,EAAmB,GACZI,CACT,EAEA,IAAIC,EAASH,EAAWhkB,UAqBxB,OAnBAmkB,EAAOC,0BAA4B,WACjCN,EAAiBlf,KAAKZ,MACtB+f,GACF,EAEAI,EAAOE,mBAAqB,WAC1BN,GACF,EAEAI,EAAOG,qBAAuB,WAC5B,IAAI/c,EAAQuc,EAAiB3U,QAAQnL,MACrC8f,EAAiB5J,OAAO3S,EAAO,GAC/Bwc,GACF,EAEAI,EAAOtE,OAAS,WACd,OAAO2D,EAAe3I,cAAc+I,EAAkB5f,KAAKqF,MAC7D,EAEO2a,CACT,CA9CA,CA8CEjI,EAAMwI,eAMR,OAJAd,EAAgBO,EAAY,cAAe,cA1E7C,SAAwBJ,GACtB,OAAOA,EAAiBY,aAAeZ,EAAiBxiB,MAAQ,WAClE,CAwE6DqjB,CAAeb,GAAoB,KAE9FH,EAAgBO,EAAY,YAAajE,GAElCiE,CACT,CACF,wBC1HA,IAAIU,EAAQxe,EAAQ,MAyCpBvE,EAAOC,QA5BP,SAAuBsB,EAAOmI,GAC5B,IAKI7F,EALAmf,EAAS,KACb,IAAKzhB,GAA0B,kBAAVA,EACnB,OAAOyhB,EAST,IALA,IAEI/e,EACArE,EAHAwE,EAAe2e,EAAMxhB,GACrB0hB,EAAkC,oBAAbvZ,EAIhBlJ,EAAI,EAAG0iB,EAAM9e,EAAa3D,OAAQD,EAAI0iB,EAAK1iB,IAElDyD,GADAJ,EAAcO,EAAa5D,IACJyD,SACvBrE,EAAQiE,EAAYjE,MAEhBqjB,EACFvZ,EAASzF,EAAUrE,EAAOiE,GACjBjE,IACTojB,IAAWA,EAAS,CAAC,GACrBA,EAAO/e,GAAYrE,GAIvB,OAAOojB,CACT,qCCvCe,SAASG,EAA0BlkB,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIuC,UAAU,sBAAwBvC,EAC/D,oGCEA,IAAMmkB,EAAUxL,SAASsB,cAAc,KAMhC,SAASmK,EAA8BzjB,GAC5C,IAAM0jB,EAAqB,IAAM1jB,EAAQ,IACzCwjB,EAAQjK,UAAYmK,EACpB,IAAMC,EAAOH,EAAQI,YAUrB,OAAyC,KAArCD,EAAKE,WAAWF,EAAK9iB,OAAS,IAAiC,SAAVb,KAQlD2jB,IAASD,GAA6BC,EAC/C,6FCvBaG,EAAY,CACvBC,SAKF,SAA2BC,EAASC,EAAIC,GACtC,OAAOC,EAAAA,EAAAA,GAAaH,GAGpB,SAAyB5V,GACvB,OAAgB,OAATA,IAAiBgW,EAAAA,EAAAA,IAAmBhW,GAAQ6V,EAAG7V,GAAQ8V,EAAI9V,EACpE,GAL8C,aAMhD,EAXEiW,SAAS,oFCEJ,SAASF,EAAaH,EAASC,EAAIjgB,EAAMsgB,GAC9C,IAAMC,EAAQD,EAAMA,EAAM,EAAIE,OAAOC,kBACjCta,EAAO,EACX,OAGA,SAAeiE,GACb,IAAIsW,EAAAA,EAAAA,IAActW,GAEhB,OADA4V,EAAQW,MAAM3gB,GACP4gB,EAAOxW,GAGhB,OAAO6V,EAAG7V,EACZ,EAGA,SAASwW,EAAOxW,GACd,OAAIsW,EAAAA,EAAAA,IAActW,IAASjE,IAASoa,GAClCP,EAAQa,QAAQzW,GACTwW,IAGTZ,EAAQc,KAAK9gB,GACNigB,EAAG7V,GACZ,CACF,8UChCO,ICWM2W,EAAaC,EAAW,YAQxBC,EAAaD,EAAW,MAexBE,EAAgBF,EAAW,cAS3BG,EAAoBH,EAAW,cAU/BI,EAAmBJ,EAAW,kBAkB9BK,EAAaL,EAAW,uBAW9B,SAASM,EAAalX,GAC3B,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,EAEnC,CASO,SAASmX,EAA0BnX,GACxC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,EACvC,CAeO,SAASgW,EAAmBhW,GACjC,OAAgB,OAATA,GAAiBA,GAAQ,CAClC,CAeO,SAASsW,EAActW,GAC5B,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,CACvC,CAiBO,IAAMoX,EAAoBR,EAAW,MAkB/BS,EAAqBT,EDvKhC,+vCC+KF,SAASA,EAAWU,GAClB,OAQA,SAAetX,GACb,OAAgB,OAATA,GAAiBsX,EAAMre,KAAKxB,OAAOoI,aAAaG,GACzD,CACF,qCClLO,SAASuK,EAAOgN,EAAMvjB,EAAOwjB,EAAQC,GAC1C,IAIIC,EAJEpjB,EAAMijB,EAAK9kB,OACbklB,EAAa,EAajB,GAPE3jB,EADEA,EAAQ,GACDA,EAAQM,EAAM,EAAIA,EAAMN,EAEzBA,EAAQM,EAAMA,EAAMN,EAG9BwjB,EAASA,EAAS,EAAIA,EAAS,EAE3BC,EAAMhlB,OAAS,KACjBilB,EAAa5mB,MAAM8mB,KAAKH,IACbI,QAAQ7jB,EAAOwjB,GACzB,GAAGjN,OAAO0D,MAAMsJ,EAAMG,QAKvB,IAFIF,GAAQ,GAAGjN,OAAO0D,MAAMsJ,EAAM,CAACvjB,EAAOwjB,IAEnCG,EAAaF,EAAMhlB,SACxBilB,EAAaD,EAAMpiB,MAAMsiB,EAAYA,EAAa,MACvCE,QAAQ7jB,EAAO,GACzB,GAAGuW,OAAO0D,MAAMsJ,EAAMG,GACvBC,GAAc,IACd3jB,GAAS,GAGf,CAcO,SAASiB,EAAKsiB,EAAME,GACzB,OAAIF,EAAK9kB,OAAS,GAChB8X,EAAOgN,EAAMA,EAAK9kB,OAAQ,EAAGglB,GACtBF,GAGFE,CACT,wIC/CO,SAASK,EAAkB9X,GAChC,OACW,OAATA,IACAmX,EAAAA,EAAAA,IAA0BnX,KAC1BoX,EAAAA,EAAAA,IAAkBpX,GAEX,GAGLqX,EAAAA,EAAAA,IAAmBrX,GACd,OADT,CAGF,mFCxBM1P,EAAiB,CAAC,EAAEA,eAQnB,SAASynB,EAAkBC,GAKhC,IAHA,IAAMC,EAAM,CAAC,EACTrgB,GAAS,IAEJA,EAAQogB,EAAWvlB,QAC1BylB,EAAgBD,EAAKD,EAAWpgB,IAGlC,OAAOqgB,CACT,CASA,SAASC,EAAgBD,EAAKE,GAE5B,IAAIC,EAEJ,IAAKA,KAAQD,EAAW,CACtB,IACME,GADQ/nB,EAAeS,KAAKknB,EAAKG,GAAQH,EAAIG,QAAQjgB,KACpC8f,EAAIG,GAAQ,CAAC,GAC9BE,EAAQH,EAAUC,GAEpBpY,OAAI,EAER,IAAKA,KAAQsY,EAAO,CACbhoB,EAAeS,KAAKsnB,EAAMrY,KAAOqY,EAAKrY,GAAQ,IACnD,IAAMpO,EAAQ0mB,EAAMtY,GACpBuY,EAEEF,EAAKrY,GACLlP,MAAMF,QAAQgB,GAASA,EAAQA,EAAQ,CAACA,GAAS,GAErD,CACF,CACF,CAUA,SAAS2mB,EAAWC,EAAUjB,GAK5B,IAJA,IAAI3f,GAAS,EAEP6gB,EAAS,KAEN7gB,EAAQ2f,EAAK9kB,SAEE,UAApB8kB,EAAK3f,GAAO8gB,IAAkBF,EAAWC,GAAQxjB,KAAKsiB,EAAK3f,KAG/D2S,EAAAA,EAAAA,GAAOiO,EAAU,EAAG,EAAGC,EACzB,qCCpEO,SAASE,EAAgC/mB,EAAO0b,GACrD,IAAMtN,EAAOoW,OAAOwC,SAAShnB,EAAO0b,GAEpC,OAEEtN,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,SAAX,MAAPA,IACkB,SAAX,MAAPA,IACDA,EAAO,QAEA,SAGFvI,OAAOoI,aAAaG,EAC7B,4HC3BM6Y,EACJ,oEAWK,SAASC,EAAalnB,GAC3B,OAAOA,EAAM0B,QAAQulB,EAA4BE,EACnD,CAQA,SAASA,EAAOC,EAAIC,EAAIC,GACtB,GAAID,EAEF,OAAOA,EAKT,GAAa,KAFAC,EAAGzD,WAAW,GAEV,CACf,IAAM7K,EAAOsO,EAAGzD,WAAW,GACrB0D,EAAe,MAATvO,GAAyB,KAATA,EAC5B,OAAO+N,EAAAA,EAAAA,GAAgCO,EAAG7jB,MAAM8jB,EAAM,EAAI,GAAIA,EAAM,GAAK,GAC3E,CAEA,OAAO9D,EAAAA,EAAAA,GAA8B6D,IAAOF,CAC9C,oCCjCO,SAASI,EAAoBxnB,GAClC,OACEA,EACG0B,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlB2S,cACAoT,aAEP,oECLO,SAASC,EAAWf,EAAYgB,EAAQC,GAK7C,IAHA,IAAMC,EAAS,GACX7hB,GAAS,IAEJA,EAAQ2gB,EAAW9lB,QAAQ,CAClC,IAAMwI,EAAUsd,EAAW3gB,GAAO0hB,WAE9Bre,IAAYwe,EAAOC,SAASze,KAC9Bse,EAASte,EAAQse,EAAQC,GACzBC,EAAOxkB,KAAKgG,GAEhB,CAEA,OAAOse,CACT,qyBC3Be,SAASI,EAAWC,EAAQC,EAAMC,GAa/C,OAXEH,GADE,EAAAI,EAAA,KACWC,QAAQC,UAAUvS,OAElB,SAAoBkS,EAAQC,EAAMC,GAC7C,IAAIlI,EAAI,CAAC,MACTA,EAAE3c,KAAKgZ,MAAM2D,EAAGiI,GAChB,IACI1V,EAAW,IADGvL,SAAS8O,KAAKuG,MAAM2L,EAAQhI,IAG9C,OADIkI,IAAO,EAAAzL,EAAA,GAAelK,EAAU2V,EAAMzpB,WACnC8T,CACT,EAEKwV,EAAW1L,MAAM,KAAM1b,UAChC,CCZe,SAAS2nB,EAAiBJ,GACvC,IAAIK,EAAwB,oBAAR1jB,IAAqB,IAAIA,SAAQ0B,EAuBrD,OAtBA+hB,EAAmB,SAA0BJ,GAC3C,GAAc,OAAVA,ICPkCM,EDOEN,GCNsB,IAAzDlhB,SAASpI,SAASO,KAAKqpB,GAAI5a,QAAQ,kBDMQ,OAAOsa,ECP5C,IAA2BM,EDQtC,GAAqB,oBAAVN,EACT,MAAM,IAAItmB,UAAU,sDAEtB,GAAsB,qBAAX2mB,EAAwB,CACjC,GAAIA,EAAOE,IAAIP,GAAQ,OAAOK,EAAO3Z,IAAIsZ,GACzCK,EAAOpd,IAAI+c,EAAOQ,EACpB,CACA,SAASA,IACP,OAAO,EAAUR,EAAOvnB,WAAW,EAAAgoB,EAAA,GAAelmB,MAAMhD,YAC1D,CASA,OARAipB,EAAQjqB,UAAYD,OAAOge,OAAO0L,EAAMzpB,UAAW,CACjDgB,YAAa,CACXO,MAAO0oB,EACP5oB,YAAY,EACZI,UAAU,EACVH,cAAc,MAGX,EAAA0c,EAAA,GAAeiM,EAASR,EACjC,EACOI,EAAiBJ,EAC1B,CEfO,SAASU,EAAkB5oB,GAEhC,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BmC,EAASnC,EAAMmC,UAIpB,UAAWnC,GAAS,QAASA,EACxBmC,EAASnC,GAId,SAAUA,GAAS,WAAYA,EAC1B6oB,EAAM7oB,GAIR,GAnBE,EAoBX,CAMA,SAAS6oB,EAAMA,GACb,OAAO7iB,EAAM6iB,GAASA,EAAMxmB,MAAQ,IAAM2D,EAAM6iB,GAASA,EAAM/mB,OACjE,CAMA,SAASK,EAAS2B,GAChB,OAAO+kB,EAAM/kB,GAAOA,EAAI1B,OAAS,IAAMymB,EAAM/kB,GAAOA,EAAIpB,IAC1D,CAMA,SAASsD,EAAMhG,GACb,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,CACtD,CCpDO,IAAM8oB,EAAY,0CAcvB,WAAY5lB,EAAQ6lB,EAAOC,GAAQ,sBAEjC,IAAMC,EAAQ,CAAC,KAAM,MAEjB9mB,EAAW,CAEbC,MAAO,CAACC,KAAM,KAAMP,OAAQ,MAE5BY,IAAK,CAACL,KAAM,KAAMP,OAAQ,OAU5B,GAPA,eAEqB,kBAAVinB,IACTC,EAASD,EACTA,OAAQxiB,GAGY,kBAAXyiB,EAAqB,CAC9B,IAAMhjB,EAAQgjB,EAAOpb,QAAQ,MAEd,IAAX5H,EACFijB,EAAM,GAAKD,GAEXC,EAAM,GAAKD,EAAOvlB,MAAM,EAAGuC,GAC3BijB,EAAM,GAAKD,EAAOvlB,MAAMuC,EAAQ,GAEpC,CAiIA,OA/HI+iB,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAM5mB,WAERA,EAAW4mB,EAAM5mB,UAIZ,UAAW4mB,GAAS,QAASA,EAEpC5mB,EAAW4mB,GAGJ,SAAUA,GAAS,WAAYA,KACtC5mB,EAASC,MAAQ2mB,IAKrB,EAAKlpB,KAAO+oB,EAAkBG,IAAU,MAExC,EAAKG,QAA4B,kBAAXhmB,EAAsBA,EAAOgmB,QAAUhmB,EAE7D,EAAKimB,MAAQ,GAES,kBAAXjmB,GAAuBA,EAAOimB,QACvC,EAAKA,MAAQjmB,EAAOimB,OAQtB,EAAKjmB,OAAS,EAAKgmB,QAanB,EAAKE,MAOL,EAAK/mB,KAAOF,EAASC,MAAMC,KAO3B,EAAKP,OAASK,EAASC,MAAMN,OAS7B,EAAKK,SAAWA,EAOhB,EAAKQ,OAASsmB,EAAM,GAOpB,EAAKI,OAASJ,EAAM,GAOpB,EAAKK,KAYL,EAAKC,OAQL,EAAKC,SAOL,EAAKC,IAOL,EAAKC,KACL,CACF,CAAC,iBA3KsB,CA2KtB,EA3K+BzmB,QA8KlC6lB,EAAarqB,UAAU6qB,KAAO,GAC9BR,EAAarqB,UAAUoB,KAAO,GAC9BipB,EAAarqB,UAAUyE,OAAS,GAChC4lB,EAAarqB,UAAUyqB,QAAU,GACjCJ,EAAarqB,UAAU0qB,MAAQ,GAC/BL,EAAarqB,UAAU2qB,MAAQ,KAC/BN,EAAarqB,UAAUqD,OAAS,KAChCgnB,EAAarqB,UAAU4D,KAAO,KAC9BymB,EAAarqB,UAAUkE,OAAS,KAChCmmB,EAAarqB,UAAU4qB,OAAS,KAChCP,EAAarqB,UAAU0D,SAAW,KC9I3B,IAAMwnB,EAAO,CAACC,SASrB,SAAkBD,EAAME,GACtB,QAAYtjB,IAARsjB,GAAoC,kBAARA,EAC9B,MAAM,IAAIjoB,UAAU,mCAGtBkoB,EAAWH,GACX,IAIII,EAJA3nB,EAAQ,EACRM,GAAO,EACPsD,EAAQ2jB,EAAK9oB,OAIjB,QAAY0F,IAARsjB,GAAoC,IAAfA,EAAIhpB,QAAgBgpB,EAAIhpB,OAAS8oB,EAAK9oB,OAAQ,CACrE,KAAOmF,KACL,GAA+B,KAA3B2jB,EAAK9F,WAAW7d,IAGlB,GAAI+jB,EAAc,CAChB3nB,EAAQ4D,EAAQ,EAChB,KACF,OACStD,EAAM,IAGfqnB,GAAe,EACfrnB,EAAMsD,EAAQ,GAIlB,OAAOtD,EAAM,EAAI,GAAKinB,EAAKlmB,MAAMrB,EAAOM,EAC1C,CAEA,GAAImnB,IAAQF,EACV,MAAO,GAGT,IAAIK,GAAoB,EACpBC,EAAWJ,EAAIhpB,OAAS,EAE5B,KAAOmF,KACL,GAA+B,KAA3B2jB,EAAK9F,WAAW7d,IAGlB,GAAI+jB,EAAc,CAChB3nB,EAAQ4D,EAAQ,EAChB,KACF,OAEIgkB,EAAmB,IAGrBD,GAAe,EACfC,EAAmBhkB,EAAQ,GAGzBikB,GAAY,IAEVN,EAAK9F,WAAW7d,KAAW6jB,EAAIhG,WAAWoG,KACxCA,EAAW,IAGbvnB,EAAMsD,IAKRikB,GAAY,EACZvnB,EAAMsnB,IAMV5nB,IAAUM,EACZA,EAAMsnB,EACGtnB,EAAM,IACfA,EAAMinB,EAAK9oB,QAGb,OAAO8oB,EAAKlmB,MAAMrB,EAAOM,EAC3B,EAzF+BwnB,QA+F/B,SAAiBP,GAGf,GAFAG,EAAWH,GAES,IAAhBA,EAAK9oB,OACP,MAAO,IAGT,IAGIspB,EAHAznB,GAAO,EACPsD,EAAQ2jB,EAAK9oB,OAKjB,OAASmF,GACP,GAA+B,KAA3B2jB,EAAK9F,WAAW7d,IAClB,GAAImkB,EAAgB,CAClBznB,EAAMsD,EACN,KACF,OACUmkB,IAEVA,GAAiB,GAIrB,OAAOznB,EAAM,EACc,KAAvBinB,EAAK9F,WAAW,GACd,IACA,IACM,IAARnhB,GAAoC,KAAvBinB,EAAK9F,WAAW,GAC7B,KACA8F,EAAKlmB,MAAM,EAAGf,EACpB,EA/HwC0nB,QAqIxC,SAAiBT,GACfG,EAAWH,GAEX,IASIQ,EATAnkB,EAAQ2jB,EAAK9oB,OAEb6B,GAAO,EACP2nB,EAAY,EACZC,GAAY,EAGZC,EAAc,EAIlB,KAAOvkB,KAAS,CACd,IAAMoI,EAAOub,EAAK9F,WAAW7d,GAE7B,GAAa,KAAToI,EAWA1L,EAAM,IAGRynB,GAAiB,EACjBznB,EAAMsD,EAAQ,GAGH,KAAToI,EAEEkc,EAAW,EACbA,EAAWtkB,EACc,IAAhBukB,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAzBf,GAAIJ,EAAgB,CAClBE,EAAYrkB,EAAQ,EACpB,KACF,CAwBJ,CAEA,GACEskB,EAAW,GACX5nB,EAAM,GAEU,IAAhB6nB,GAEiB,IAAhBA,GAAqBD,IAAa5nB,EAAM,GAAK4nB,IAAaD,EAAY,EAEvE,MAAO,GAGT,OAAOV,EAAKlmB,MAAM6mB,EAAU5nB,EAC9B,EAlMiDsJ,KAwMjD,WAGY,IAFV,IAEIwe,EAFAxkB,GAAS,EAEH,mBAHKykB,EAAQ,yBAARA,EAAQ,gBAKvB,OAASzkB,EAAQykB,EAAS5pB,QACxBipB,EAAWW,EAASzkB,IAEhBykB,EAASzkB,KACXwkB,OACajkB,IAAXikB,EAAuBC,EAASzkB,GAASwkB,EAAS,IAAMC,EAASzkB,IAIvE,YAAkBO,IAAXikB,EAAuB,IAAME,EAAUF,EAChD,EAvNuDG,IAAK,KAgO5D,SAASD,EAAUf,GACjBG,EAAWH,GAEX,IAAMiB,EAAkC,KAAvBjB,EAAK9F,WAAW,GAG7B7jB,EAoBN,SAAyB2pB,EAAMkB,GAC7B,IAMIzc,EAEA0c,EARAllB,EAAS,GACTmlB,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPjlB,GAAS,EAMb,OAASA,GAAS2jB,EAAK9oB,QAAQ,CAC7B,GAAImF,EAAQ2jB,EAAK9oB,OACfuN,EAAOub,EAAK9F,WAAW7d,OAClB,IAAa,KAAToI,EACT,MAEAA,EAAO,EACT,CAEA,GAAa,KAATA,EAAuB,CACzB,GAAI4c,IAAchlB,EAAQ,GAAc,IAATilB,QAExB,GAAID,IAAchlB,EAAQ,GAAc,IAATilB,EAAY,CAChD,GACErlB,EAAO/E,OAAS,GACM,IAAtBkqB,GACyC,KAAzCnlB,EAAOie,WAAWje,EAAO/E,OAAS,IACO,KAAzC+E,EAAOie,WAAWje,EAAO/E,OAAS,GAElC,GAAI+E,EAAO/E,OAAS,GAGlB,IAFAiqB,EAAiBllB,EAAO1D,YAAY,QAEb0D,EAAO/E,OAAS,EAAG,CACpCiqB,EAAiB,GACnBllB,EAAS,GACTmlB,EAAoB,GAGpBA,GADAnlB,EAASA,EAAOnC,MAAM,EAAGqnB,IACEjqB,OAAS,EAAI+E,EAAO1D,YAAY,KAG7D8oB,EAAYhlB,EACZilB,EAAO,EACP,QACF,OACK,GAAIrlB,EAAO/E,OAAS,EAAG,CAC5B+E,EAAS,GACTmlB,EAAoB,EACpBC,EAAYhlB,EACZilB,EAAO,EACP,QACF,CAGEJ,IACFjlB,EAASA,EAAO/E,OAAS,EAAI+E,EAAS,MAAQ,KAC9CmlB,EAAoB,EAExB,MACMnlB,EAAO/E,OAAS,EAClB+E,GAAU,IAAM+jB,EAAKlmB,MAAMunB,EAAY,EAAGhlB,GAE1CJ,EAAS+jB,EAAKlmB,MAAMunB,EAAY,EAAGhlB,GAGrC+kB,EAAoB/kB,EAAQglB,EAAY,EAG1CA,EAAYhlB,EACZilB,EAAO,CACT,MAAoB,KAAT7c,GAAyB6c,GAAQ,EAC1CA,IAEAA,GAAQ,CAEZ,CAEA,OAAOrlB,CACT,CAnGcslB,CAAgBvB,GAAOiB,GAUnC,OARqB,IAAjB5qB,EAAMa,QAAiB+pB,IACzB5qB,EAAQ,KAGNA,EAAMa,OAAS,GAA0C,KAArC8oB,EAAK9F,WAAW8F,EAAK9oB,OAAS,KACpDb,GAAS,KAGJ4qB,EAAW,IAAM5qB,EAAQA,CAClC,CA6FA,SAAS8pB,EAAWH,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAI/nB,UACR,mCAAqCupB,KAAKC,UAAUzB,GAG1D,CCpYO,IAAM0B,EAAO,CAACC,IAErB,WACE,MAAO,GACT,GCgBO,SAASC,EAAMC,GACpB,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAcC,MAEdD,EAAcxC,MAElB,CCvBO,SAAS0C,EAAU/B,GACxB,GAAoB,kBAATA,EACTA,EAAO,IAAIgC,IAAIhC,QACV,IAAK4B,EAAM5B,GAAO,CAEvB,IAAM7mB,EAAQ,IAAIlB,UAChB,+EACE+nB,EACA,KAGJ,MADA7mB,EAAMsL,KAAO,uBACPtL,CACR,CAEA,GAAsB,UAAlB6mB,EAAKiC,SAAsB,CAE7B,IAAM9oB,EAAQ,IAAIlB,UAAU,kCAE5B,MADAkB,EAAMsL,KAAO,yBACPtL,CACR,CAEA,OAMF,SAA6B2mB,GAC3B,GAAqB,KAAjBA,EAAIoC,SAAiB,CAEvB,IAAM/oB,EAAQ,IAAIlB,UAChB,wDAGF,MADAkB,EAAMsL,KAAO,4BACPtL,CACR,CAEA,IAAMgpB,EAAWrC,EAAIqC,SACjB9lB,GAAS,EAEb,OAASA,EAAQ8lB,EAASjrB,QACxB,GACiC,KAA/BirB,EAASjI,WAAW7d,IACe,KAAnC8lB,EAASjI,WAAW7d,EAAQ,GAC5B,CACA,IAAM+lB,EAAQD,EAASjI,WAAW7d,EAAQ,GAC1C,GAAc,KAAV+lB,GAAoC,MAAVA,EAAyB,CAErD,IAAMjpB,EAAQ,IAAIlB,UAChB,uDAGF,MADAkB,EAAMsL,KAAO,4BACPtL,CACR,CACF,CAGF,OAAOkpB,mBAAmBF,EAC5B,CArCSG,CAAoBtC,EAC7B,CC0BA,IAAMuC,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAEpDC,EAAK,WAkBhB,WAAYnsB,GAEV,IAAIJ,GAFa,eAQfA,EAJGI,EAEuB,kBAAVA,GAAsBosB,EAAOpsB,GAEnC,CAACA,MAAAA,GACFurB,EAAMvrB,GACL,CAAC2pB,KAAM3pB,GAGPA,EARA,CAAC,EAiBbyC,KAAKsH,KAAO,CAAC,EAMbtH,KAAK4pB,SAAW,GAOhB5pB,KAAK6pB,QAAU,GAMf7pB,KAAK6oB,IAAMD,EAAKC,MAOhB7oB,KAAKzC,MAULyC,KAAK8pB,OASL9pB,KAAKmD,OASLnD,KAAKyH,IAML,IAFA,IAcIhG,EAdA8B,GAAS,IAEJA,EAAQkmB,EAAMrrB,QAAQ,CAC7B,IAAMqD,EAAOgoB,EAAMlmB,GAIf9B,KAAQtE,QAA6B2G,IAAlB3G,EAAQsE,KAE7BzB,KAAKyB,GAAiB,YAATA,GAAqB,OAAItE,EAAQsE,IAAStE,EAAQsE,GAEnE,CAMA,IAAKA,KAAQtE,EAENssB,EAAMpE,SAAS5jB,KAAOzB,KAAKyB,GAAQtE,EAAQsE,GAEpD,CAuMC,OArMD,0BAIA,WACE,OAAOzB,KAAK6pB,QAAQ7pB,KAAK6pB,QAAQzrB,OAAS,EAC5C,EAEA,IAOA,SAAS8oB,GACH4B,EAAM5B,KACRA,EAAO+B,EAAU/B,IAGnB6C,EAAe7C,EAAM,QAEjBlnB,KAAKknB,OAASA,GAChBlnB,KAAK6pB,QAAQjpB,KAAKsmB,EAEtB,GAEA,mBAGA,WACE,MAA4B,kBAAdlnB,KAAKknB,KAAoBA,EAAKO,QAAQznB,KAAKknB,WAAQpjB,CACnE,EAEA,IAIA,SAAY2jB,GACVJ,EAAWrnB,KAAKmnB,SAAU,WAC1BnnB,KAAKknB,KAAOA,EAAK3d,KAAKke,GAAW,GAAIznB,KAAKmnB,SAC5C,GAEA,oBAGA,WACE,MAA4B,kBAAdnnB,KAAKknB,KAAoBA,EAAKC,SAASnnB,KAAKknB,WAAQpjB,CACpE,EAEA,IAMA,SAAaqjB,GACX4C,EAAe5C,EAAU,YACzB6C,EAAW7C,EAAU,YACrBnnB,KAAKknB,KAAOA,EAAK3d,KAAKvJ,KAAKynB,SAAW,GAAIN,EAC5C,GAEA,mBAGA,WACE,MAA4B,kBAAdnnB,KAAKknB,KAAoBA,EAAKS,QAAQ3nB,KAAKknB,WAAQpjB,CACnE,EAEA,IAMA,SAAY6jB,GAIV,GAHAqC,EAAWrC,EAAS,WACpBN,EAAWrnB,KAAKynB,QAAS,WAErBE,EAAS,CACX,GAA8B,KAA1BA,EAAQvG,WAAW,GACrB,MAAM,IAAI5gB,MAAM,iCAGlB,GAAImnB,EAAQtC,SAAS,IAAK,GACxB,MAAM,IAAI7kB,MAAM,yCAEpB,CAEAR,KAAKknB,KAAOA,EAAK3d,KAAKvJ,KAAKynB,QAASznB,KAAKiqB,MAAQtC,GAAW,IAC9D,GAEA,gBAGA,WACE,MAA4B,kBAAd3nB,KAAKknB,KACfA,EAAKC,SAASnnB,KAAKknB,KAAMlnB,KAAK2nB,cAC9B7jB,CACN,EAEA,IAMA,SAASmmB,GACPF,EAAeE,EAAM,QACrBD,EAAWC,EAAM,QACjBjqB,KAAKknB,KAAOA,EAAK3d,KAAKvJ,KAAKynB,SAAW,GAAIwC,GAAQjqB,KAAK2nB,SAAW,IACpE,GAEA,sBASA,SAASuC,GACP,OAAQlqB,KAAKzC,OAAS,IAAIpB,SAAS+tB,EACrC,GAEA,qBAcA,SAAQzpB,EAAQ6lB,EAAOC,GACrB,IAAME,EAAU,IAAIJ,EAAa5lB,EAAQ6lB,EAAOC,GAWhD,OATIvmB,KAAKknB,OACPT,EAAQrpB,KAAO4C,KAAKknB,KAAO,IAAMT,EAAQrpB,KACzCqpB,EAAQI,KAAO7mB,KAAKknB,MAGtBT,EAAQE,OAAQ,EAEhB3mB,KAAK4pB,SAAShpB,KAAK6lB,GAEZA,CACT,GAEA,kBAaA,SAAKhmB,EAAQ6lB,EAAOC,GAClB,IAAME,EAAUzmB,KAAKymB,QAAQhmB,EAAQ6lB,EAAOC,GAI5C,OAFAE,EAAQE,MAAQ,KAETF,CACT,GAEA,kBAeA,SAAKhmB,EAAQ6lB,EAAOC,GAClB,IAAME,EAAUzmB,KAAKymB,QAAQhmB,EAAQ6lB,EAAOC,GAI5C,MAFAE,EAAQE,OAAQ,EAEVF,CACR,KAAC,EA9Te,GAwUlB,SAASuD,EAAWG,EAAM/sB,GACxB,GAAI+sB,GAAQA,EAAK9E,SAAS6B,EAAKgB,KAC7B,MAAM,IAAI1nB,MACR,IAAMpD,EAAO,uCAAyC8pB,EAAKgB,IAAM,IAGvE,CASA,SAAS6B,EAAeI,EAAM/sB,GAC5B,IAAK+sB,EACH,MAAM,IAAI3pB,MAAM,IAAMpD,EAAO,oBAEjC,CASA,SAASiqB,EAAWH,EAAM9pB,GACxB,IAAK8pB,EACH,MAAM,IAAI1mB,MAAM,YAAcpD,EAAO,kCAEzC,4CC/Ze,SAASgtB,EAAS5tB,GAC/B,OAAO,EAAA6tB,EAAA,GAAe7tB,KAAQ,EAAA8tB,EAAA,GAAgB9tB,KAAQ,EAAA+tB,EAAA,GAA2B/tB,KAAQ,EAAAguB,EAAA,IAC3F,CCCO,SAASC,EAAKpqB,GACnB,GAAIA,EACF,MAAMA,CAEV,eCXe,SAAS1D,EAAcY,GACrC,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,IAAMvB,EAAYD,OAAOmqB,eAAe3oB,GACxC,OAAsB,OAAdvB,GAAsBA,IAAcD,OAAOC,WAAkD,OAArCD,OAAOmqB,eAAelqB,OAA0BuG,OAAOsB,eAAetG,MAAYgF,OAAO8E,YAAY9J,EACtK,CCqFO,SAASmtB,EAAKC,EAAY9X,GAE/B,IAAIuS,EAEJ,OAQA,WAAgC,2BAAZ/B,EAAU,yBAAVA,EAAU,gBAC5B,IAEIlgB,EAFEynB,EAAoBD,EAAWvsB,OAASilB,EAAWjlB,OAIrDwsB,GACFvH,EAAWziB,KAAK4G,GAGlB,IACErE,EAASwnB,EAAW/Q,MAAM5Z,KAAMqjB,EAalC,CAZE,MAAOhjB,GACP,IAAMwqB,EAAkCxqB,EAMxC,GAAIuqB,GAAqBxF,EACvB,MAAMyF,EAGR,OAAOrjB,EAAKqjB,EACd,CAEKD,IACCznB,aAAkBd,QACpBc,EAAO2nB,KAAKA,EAAMtjB,GACTrE,aAAkB3C,MAC3BgH,EAAKrE,GAEL2nB,EAAK3nB,GAGX,EAMA,SAASqE,EAAKnH,GACZ,IAAK+kB,EAAQ,CACXA,GAAS,EAAI,2BAFOzE,EAAM,iCAANA,EAAM,kBAG1B9N,EAAQ,cAACxS,GAAK,OAAKsgB,GACrB,CACF,CAOA,SAASmK,EAAKvtB,GACZiK,EAAK,KAAMjK,EACb,CACF,CCnIO,IAAMwtB,EAQb,SAAS9R,IACP,IAMI+R,EANEC,EDpBD,WAEL,IAAMC,EAAM,GAENC,EAAW,CAACC,IAKlB,WAAwB,2BAAR1gB,EAAM,yBAANA,EAAM,gBACpB,IAAI2gB,GAAmB,EAEjBxY,EAAWnI,EAAO4gB,MAExB,GAAwB,oBAAbzY,EACT,MAAM,IAAI1T,UAAU,2CAA6C0T,GAWnE,SAAStL,EAAKlH,GACZ,IAAM0lB,EAAKmF,IAAMG,GACb9nB,GAAS,EAEb,GAAIlD,EACFwS,EAASxS,OADX,CAKA,2BATsBsgB,EAAM,iCAANA,EAAM,kBAU5B,OAASpd,EAAQmH,EAAOtM,QACA,OAAlBuiB,EAAOpd,SAAqCO,IAAlB6c,EAAOpd,KACnCod,EAAOpd,GAASmH,EAAOnH,IAK3BmH,EAASiW,EAGLoF,EACF2E,EAAK3E,EAAIxe,GAAK,aAAIoZ,GAElB9N,EAAQ,cAAC,MAAI,OAAK8N,GAhBpB,CAkBF,CAjCApZ,EAAI,cAAC,MAAI,eAAKmD,IAkChB,EAhDuB6gB,IAmDvB,SAAaC,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAIrsB,UACR,+CAAiDqsB,GAKrD,OADAN,EAAItqB,KAAK4qB,GACFL,CACT,GA1DA,OAAOA,CA2DT,CC7CuBM,GAEfC,EAAY,GAEdC,EAAY,CAAC,EAGbC,GAAe,EA2BnB,OAvBAC,EAAUvkB,KA6CV,SAAczK,EAAKU,GACjB,GAAmB,kBAARV,EAET,OAAyB,IAArBqB,UAAUE,QACZ0tB,EAAe,OAAQd,GACvBW,EAAU9uB,GAAOU,EACVsuB,GAIDE,EAAIrvB,KAAKivB,EAAW9uB,IAAQ8uB,EAAU9uB,IAAS,KAIzD,GAAIA,EAGF,OAFAivB,EAAe,OAAQd,GACvBW,EAAY9uB,EACLgvB,EAIT,OAAOF,CACT,EAlEAE,EAAUG,YAASloB,EACnB+nB,EAAUI,cAAWnoB,EAGrB+nB,EAAUK,OAiEV,WACE,GAAIlB,EACF,OAAOa,EAGT,OAASD,EAAcF,EAAUttB,QAAQ,CACvC,QAA+BstB,EAAUE,IAAlCO,EAAQ,KAAKhvB,EAAO,WAE3B,IAAmB,IAAfA,EAAQ,GAAZ,EAImB,IAAfA,EAAQ,KACVA,EAAQ,QAAK2G,GAIf,IAAMsoB,EAAcD,EAASzvB,KAAI,MAAbyvB,EAAQ,CAAMN,GAAS,eAAK1uB,KAErB,oBAAhBivB,GACTnB,EAAaM,IAAIa,EAVnB,CAYF,CAKA,OAHApB,GAAS,EACTY,EAAc7J,OAAOC,kBAEd6J,CACT,EA1FAA,EAAUH,UAAYA,EAEtBG,EAAUN,IA+FV,SAAahuB,GAAmB,2BAATJ,EAAO,iCAAPA,EAAO,kBAE5B,IAAIkvB,EAIJ,GAFAP,EAAe,MAAOd,GAER,OAAVztB,QAA4BuG,IAAVvG,QAEf,GAAqB,oBAAVA,EAChB+uB,EAAS,cAAC/uB,GAAK,OAAKJ,QACf,IAAqB,kBAAVI,EAOhB,MAAM,IAAI4B,UAAU,+BAAiC5B,EAAQ,KANzDd,MAAMF,QAAQgB,GAChBgvB,EAAQhvB,GAERivB,EAAUjvB,EAId,CAEI8uB,IACFV,EAAUU,SAAWtwB,OAAOuU,OAAOqb,EAAUU,UAAY,CAAC,EAAGA,IAG/D,OAAOR,EAMP,SAASxH,EAAI9mB,GACX,GAAqB,oBAAVA,EACT+uB,EAAU/uB,OACL,IAAqB,kBAAVA,EAQhB,MAAM,IAAI4B,UAAU,+BAAiC5B,EAAQ,KAP7D,GAAId,MAAMF,QAAQgB,GAAQ,CACxB,QAA6BA,GAAtBkvB,EAAM,KAAKtvB,EAAO,WACzBmvB,EAAS,cAACG,GAAM,eAAKtvB,IACvB,MACEqvB,EAAUjvB,EAId,CACF,CAMA,SAASivB,EAAUrpB,GACjBopB,EAAQppB,EAAOupB,SAEXvpB,EAAOkpB,WACTA,EAAWtwB,OAAOuU,OAAO+b,GAAY,CAAC,EAAGlpB,EAAOkpB,UAEpD,CAMA,SAASE,EAAQG,GACf,IAAInpB,GAAS,EAEb,GAAgB,OAAZmpB,QAAgC5oB,IAAZ4oB,OAEjB,KAAIjwB,MAAMF,QAAQmwB,GAMvB,MAAM,IAAIvtB,UAAU,oCAAsCutB,EAAU,KALpE,OAASnpB,EAAQmpB,EAAQtuB,QAAQ,CAE/BimB,EADcqI,EAAQnpB,GAExB,CAGF,CACF,CAOA,SAAS+oB,EAAUG,EAAQlvB,GAKzB,IAJA,IAEIovB,EAFAppB,GAAS,IAIJA,EAAQmoB,EAAUttB,QACzB,GAAIstB,EAAUnoB,GAAO,KAAOkpB,EAAQ,CAClCE,EAAQjB,EAAUnoB,GAClB,KACF,CAGEopB,GACEC,EAAWD,EAAM,KAAOC,EAAWrvB,KACrCA,EAAQM,GAAO,EAAM8uB,EAAM,GAAIpvB,IAGjCovB,EAAM,GAAKpvB,GAGXmuB,EAAU9qB,KAAK,MAAD,qBAAK1C,WAEvB,CACF,EApMA2tB,EAAUnL,MAuMV,SAAemM,GACbhB,EAAUK,SACV,IAAMrF,EAAOiG,EAAMD,GACbb,EAASH,EAAUG,OAGzB,GAFAe,EAAa,QAASf,GAElBgB,EAAQhB,EAAQ,SAElB,OAAO,IAAIA,EAAO5oB,OAAOyjB,GAAOA,GAAMnG,QAIxC,OAAOsL,EAAO5oB,OAAOyjB,GAAOA,EAC9B,EAnNAgF,EAAUlD,UAsNV,SAAmB9oB,EAAMgtB,GACvBhB,EAAUK,SACV,IAAMrF,EAAOiG,EAAMD,GACbZ,EAAWJ,EAAUI,SAI3B,GAHAgB,EAAe,YAAahB,GAC5BiB,EAAWrtB,GAEPmtB,EAAQf,EAAU,WAEpB,OAAO,IAAIA,EAASpsB,EAAMgnB,GAAMsG,UAIlC,OAAOlB,EAASpsB,EAAMgnB,EACxB,EAlOAgF,EAAUT,IA0OV,SAAavrB,EAAMgtB,EAAKha,GACtBqa,EAAWrtB,GACXgsB,EAAUK,SAELrZ,GAA2B,oBAARga,IACtBha,EAAWga,EACXA,OAAM/oB,GAGR,IAAK+O,EACH,OAAO,IAAIxQ,QAAQ+qB,GAUrB,SAASA,EAASxmB,EAASymB,GAUzB,SAAS7lB,EAAKnH,EAAOitB,EAAMzG,GACzByG,EAAOA,GAAQztB,EACXQ,EACFgtB,EAAOhtB,GACEuG,EACTA,EAAQ0mB,GAGRza,EAAS,KAAMya,EAAMzG,EAEzB,CAlBAoE,EAAaG,IAAIvrB,EAAMitB,EAAMD,GAAMrlB,EAmBrC,CA5BA4lB,EAAS,KAAMva,EA6BjB,EAnRAgZ,EAAU0B,QAsRV,SAAiB1tB,EAAMgnB,GAErB,IAAI1jB,EAEAqqB,EAOJ,OALA3B,EAAUT,IAAIvrB,EAAMgnB,EAAMrf,GAE1BimB,EAAW,UAAW,MAAOD,GAGtBrqB,EAOP,SAASqE,EAAKnH,EAAOitB,GACnB7C,EAAKpqB,GACL8C,EAASmqB,EACTE,GAAW,CACb,CACF,EA3SA3B,EAAU5jB,QAkTV,SAAiB4kB,EAAKha,GAKpB,GAJAgZ,EAAUK,SACVa,EAAa,UAAWlB,EAAUG,QAClCiB,EAAe,UAAWpB,EAAUI,WAE/BpZ,EACH,OAAO,IAAIxQ,QAAQ+qB,GAUrB,SAASA,EAASxmB,EAASymB,GACzB,IAAMxG,EAAOiG,EAAMD,GA0BnB,SAASrlB,EAAKnH,EAAOwmB,GACfxmB,IAAUwmB,EACZwG,EAAOhtB,GACEuG,EACTA,EAAQigB,GAGRhU,EAAS,KAAMgU,EAEnB,CAjCAgF,EAAUT,IAAIS,EAAUnL,MAAMmG,GAAOA,GAAM,SAACxmB,EAAOitB,EAAMzG,GACvD,IAAIxmB,GAAUitB,GAASzG,EAEhB,CAEL,IAAM1jB,EAAS0oB,EAAUlD,UAAU2E,EAAMzG,QAE1B/iB,IAAXX,GAAmC,OAAXA,IAsMZ,kBADI5F,EAnMY4F,IAoMJnB,EAASzE,GAnMnCspB,EAAKtpB,MAAQ4F,EAEb0jB,EAAK1jB,OAASA,GAGhBqE,EAAKnH,EAAOwmB,EACd,MAdErf,EAAKnH,GA0Mf,IAA8B9C,CA3LxB,GAiBF,CA5CA6vB,EAAS,KAAMva,EA6CjB,EAvWAgZ,EAAU6B,YA0WV,SAAqBb,GAEnB,IAAIW,EAEJ3B,EAAUK,SACVa,EAAa,cAAelB,EAAUG,QACtCiB,EAAe,cAAepB,EAAUI,UAExC,IAAMpF,EAAOiG,EAAMD,GAMnB,OAJAhB,EAAU5jB,QAAQ4e,EAAMrf,GAExBimB,EAAW,cAAe,UAAWD,GAE9B3G,EAMP,SAASrf,EAAKnH,GACZmtB,GAAW,EACX/C,EAAKpqB,EACP,CACF,EA/XOwrB,EAIP,SAASA,IAIP,IAHA,IAAM8B,EAAc1U,IAChB1V,GAAS,IAEJA,EAAQmoB,EAAUttB,QACzBuvB,EAAYpC,IAAG,MAAfoC,GAAW,OAAQjC,EAAUnoB,KAK/B,OAFAoqB,EAAYrmB,KAAKzJ,GAAO,EAAM,CAAC,EAAG8tB,IAE3BgC,CACT,CAiXF,CA3auB1U,GAAOiT,SAExBH,EAAM,CAAC,EAAE9vB,eAkbf,SAAS+wB,EAAQzvB,EAAOH,GACtB,MACmB,oBAAVG,GAGPA,EAAMvB,YAeV,SAAcuB,GAEZ,IAAIV,EAEJ,IAAKA,KAAOU,EACV,GAAIwuB,EAAIrvB,KAAKa,EAAOV,GAClB,OAAO,EAIX,OAAO,CACT,CArBKsK,CAAK5J,EAAMvB,YAAcoB,KAAQG,EAAMvB,UAE5C,CA4BA,SAAS+wB,EAAa3vB,EAAMG,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAI4B,UAAU,WAAa/B,EAAO,qBAE5C,CASA,SAAS6vB,EAAe7vB,EAAMG,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAI4B,UAAU,WAAa/B,EAAO,uBAE5C,CASA,SAAS0uB,EAAe1uB,EAAM4tB,GAC5B,GAAIA,EACF,MAAM,IAAIxqB,MACR,gBACEpD,EACA,mHAGR,CAQA,SAAS8vB,EAAWrtB,GAGlB,IAAK+sB,EAAW/sB,IAA8B,kBAAdA,EAAK0B,KACnC,MAAM,IAAIpC,UAAU,uBAAyBU,EAAO,IAGxD,CAUA,SAAS4tB,EAAWrwB,EAAMwwB,EAAWJ,GACnC,IAAKA,EACH,MAAM,IAAIhtB,MACR,IAAMpD,EAAO,0BAA4BwwB,EAAY,YAG3D,CAMA,SAASd,EAAMvvB,GACb,OAOF,SAAyBA,GACvB,OAAOswB,QACLtwB,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,EAEpB,CAdSuwB,CAAgBvwB,GAASA,EAAQ,IAAImsB,EAAMnsB,EACpD,CCnjBO,SAASpB,EAAS0D,EAAM1C,GAC7B,IAA4C,GAAbA,GAAW,CAAC,GAAtC4wB,gBACL,OAAOC,EAAInuB,OADS,IAAG,GAAI,EAE7B,CAOA,SAASmuB,EAAInuB,EAAMkuB,GACjB,OACGluB,GACiB,kBAATA,IAENA,EAAKtC,QAEHwwB,EAAkBluB,EAAKouB,IAAM,KAE7B,aAAcpuB,GAAQ+jB,GAAI/jB,EAAK2b,SAAUuS,IACzCtxB,MAAMF,QAAQsD,IAAS+jB,GAAI/jB,EAAMkuB,KACtC,EAEJ,CAOA,SAASnK,GAAIlZ,EAAQqjB,GAKnB,IAHA,IAAI5qB,EAAS,GACTI,GAAS,IAEJA,EAAQmH,EAAOtM,QACtB+E,EAAOI,GAASyqB,EAAItjB,EAAOnH,GAAQwqB,GAGrC,OAAO5qB,EAAOoG,KAAK,GACrB,sCC5CapJ,GAAU,CACrBmhB,SAIF,SAA2BC,GACzB,IAOI2M,EAPEC,EAAe5M,EAAQ6M,QAC3BpuB,KAAKquB,OAAOnK,WAAWoK,gBAUzB,SAAoC3iB,GAClC,GAAa,OAATA,EAEF,YADA4V,EAAQa,QAAQzW,GAOlB,OAHA4V,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAAS4M,EAAc,aAC7C,IAGA,SAA0BxiB,GAExB,OADA4V,EAAQW,MAAM,aACPqM,EAAU5iB,EACnB,IAnBA,OAAOwiB,EAsBP,SAASI,EAAU5iB,GACjB,IAAM6iB,EAAQjN,EAAQW,MAAM,YAAa,CACvCuM,YAAa,OACbP,SAAAA,IAQF,OALIA,IACFA,EAAS3mB,KAAOinB,GAGlBN,EAAWM,EACJlnB,EAAKqE,EACd,CAGA,SAASrE,EAAKqE,GACZ,OAAa,OAATA,GACF4V,EAAQc,KAAK,aACbd,EAAQc,KAAK,kBACbd,EAAQa,QAAQzW,KAIdgW,EAAAA,GAAAA,IAAmBhW,IACrB4V,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,aACNkM,IAGThN,EAAQa,QAAQzW,GACTrE,EACT,CACF,kBC1DaiO,GAAW,CACtB+L,SASF,SAA4BC,GAC1B,IAOImN,EAGAC,EAGAC,EAbEpmB,EAAOxI,KAGP0mB,EAAQ,GACVmI,EAAY,EAUhB,OAAOlvB,EAGP,SAASA,EAAMgM,GAWb,GAAIkjB,EAAYnI,EAAMtoB,OAAQ,CAC5B,IAAM0wB,EAAOpI,EAAMmI,GAEnB,OADArmB,EAAKumB,eAAiBD,EAAK,GACpBvN,EAAQ6M,QACbU,EAAK,GAAGE,aACRC,EACAC,EAHK3N,CAIL5V,EACJ,CAEA,OAAOujB,EAAmBvjB,EAC5B,CAGA,SAASsjB,EAAiBtjB,GAKxB,GAJAkjB,IAIIrmB,EAAKumB,eAAeI,WAAY,CAClC3mB,EAAKumB,eAAeI,gBAAarrB,EAE7B4qB,GACFU,IAUF,IANA,IAIIhJ,EAJEiJ,EAAmB7mB,EAAK0c,OAAO9mB,OACjCkxB,EAAkBD,EAKfC,KACL,GACsC,SAApC9mB,EAAK0c,OAAOoK,GAAiB,IACY,cAAzC9mB,EAAK0c,OAAOoK,GAAiB,GAAG/tB,KAChC,CACA6kB,EAAQ5d,EAAK0c,OAAOoK,GAAiB,GAAGrvB,IACxC,KACF,CAGFsvB,EAAeV,GAIf,IAFA,IAAItrB,EAAQ8rB,EAEL9rB,EAAQiF,EAAK0c,OAAO9mB,QACzBoK,EAAK0c,OAAO3hB,GAAO,GAAGtD,IAAMlE,OAAOuU,OAAO,CAAC,EAAG8V,GAC9C7iB,IAWF,OARA2S,EAAAA,GAAAA,GACE1N,EAAK0c,OACLoK,EAAkB,EAClB,EACA9mB,EAAK0c,OAAOlkB,MAAMquB,IAGpB7mB,EAAK0c,OAAO9mB,OAASmF,EACd2rB,EAAmBvjB,EAC5B,CAEA,OAAOhM,EAAMgM,EACf,CAGA,SAASujB,EAAmBvjB,GAM1B,GAAIkjB,IAAcnI,EAAMtoB,OAAQ,CAI9B,IAAKswB,EACH,OAAOc,EAAkB7jB,GAK3B,GAAI+iB,EAAUe,kBAAoBf,EAAUe,iBAAiBC,SAC3D,OAAOC,EAAUhkB,GAKnBnD,EAAKonB,UAAY/B,QACfa,EAAUe,mBAAqBf,EAAUmB,8BAE7C,CAGA,OADArnB,EAAKumB,eAAiB,CAAC,EAChBxN,EAAQuO,MACbC,GACAC,EACAC,EAHK1O,CAIL5V,EACJ,CAGA,SAASqkB,EAAqBrkB,GAG5B,OAFI+iB,GAAWU,IACfG,EAAeV,GACRW,EAAkB7jB,EAC3B,CAGA,SAASskB,EAAsBtkB,GAG7B,OAFAnD,EAAK6lB,OAAO6B,KAAK1nB,EAAKoK,MAAMhT,MAAQivB,IAAcnI,EAAMtoB,OACxDwwB,EAAkBpmB,EAAKoK,MAAMud,OACtBR,EAAUhkB,EACnB,CAGA,SAAS6jB,EAAkB7jB,GAGzB,OADAnD,EAAKumB,eAAiB,CAAC,EAChBxN,EAAQ6M,QACb2B,GACAK,EACAT,EAHKpO,CAIL5V,EACJ,CAGA,SAASykB,EAAkBzkB,GAIzB,OAHAkjB,IACAnI,EAAM9lB,KAAK,CAAC4H,EAAKinB,iBAAkBjnB,EAAKumB,iBAEjCS,EAAkB7jB,EAC3B,CAGA,SAASgkB,EAAUhkB,GACjB,OAAa,OAATA,GACE+iB,GAAWU,IACfG,EAAe,QACfhO,EAAQa,QAAQzW,KAIlB+iB,EAAYA,GAAalmB,EAAK6lB,OAAOgC,KAAK7nB,EAAKoK,OAC/C2O,EAAQW,MAAM,YAAa,CACzBuM,YAAa,OACbP,SAAUS,EACV2B,WAAY5B,IAEP6B,EAAa5kB,GACtB,CAGA,SAAS4kB,EAAa5kB,GACpB,OAAa,OAATA,GACF6kB,EAAajP,EAAQc,KAAK,cAAc,GACxCkN,EAAe,QACfhO,EAAQa,QAAQzW,KAIdgW,EAAAA,GAAAA,IAAmBhW,IACrB4V,EAAQa,QAAQzW,GAChB6kB,EAAajP,EAAQc,KAAK,cAE1BwM,EAAY,EACZrmB,EAAKonB,eAAY9rB,EACVnE,IAGT4hB,EAAQa,QAAQzW,GACT4kB,EACT,CAOA,SAASC,EAAahC,EAAOiC,GAC3B,IAAMC,EAASloB,EAAKmoB,YAAYnC,GAwChC,GAvCIiC,GAAKC,EAAO9vB,KAAK,MACrB4tB,EAAMN,SAAWS,EACbA,IAAYA,EAAWpnB,KAAOinB,GAClCG,EAAaH,EACbE,EAAUkC,WAAWpC,EAAM7uB,OAC3B+uB,EAAUmC,MAAMH,GAkCZloB,EAAK6lB,OAAO6B,KAAK1B,EAAM7uB,MAAMC,MAAO,CAGtC,IAFA,IAAI2D,EAAQmrB,EAAUxJ,OAAO9mB,OAEtBmF,KACL,GAEEmrB,EAAUxJ,OAAO3hB,GAAO,GAAG5D,MAAMwwB,OAASvB,KACxCF,EAAUxJ,OAAO3hB,GAAO,GAAGtD,KAC3ByuB,EAAUxJ,OAAO3hB,GAAO,GAAGtD,IAAIkwB,OAASvB,GAI1C,OAcJ,IATA,IAIIkC,EAGA1K,EAPEiJ,EAAmB7mB,EAAK0c,OAAO9mB,OACjCkxB,EAAkBD,EAQfC,KACL,GACsC,SAApC9mB,EAAK0c,OAAOoK,GAAiB,IACY,cAAzC9mB,EAAK0c,OAAOoK,GAAiB,GAAG/tB,KAChC,CACA,GAAIuvB,EAAM,CACR1K,EAAQ5d,EAAK0c,OAAOoK,GAAiB,GAAGrvB,IACxC,KACF,CAEA6wB,GAAO,CACT,CAOF,IAJAvB,EAAeV,GAEftrB,EAAQ8rB,EAED9rB,EAAQiF,EAAK0c,OAAO9mB,QACzBoK,EAAK0c,OAAO3hB,GAAO,GAAGtD,IAAMlE,OAAOuU,OAAO,CAAC,EAAG8V,GAC9C7iB,KAGF2S,EAAAA,GAAAA,GACE1N,EAAK0c,OACLoK,EAAkB,EAClB,EACA9mB,EAAK0c,OAAOlkB,MAAMquB,IAGpB7mB,EAAK0c,OAAO9mB,OAASmF,CACvB,CACF,CAMA,SAASgsB,EAAe7nB,GAGtB,IAFA,IAAInE,EAAQmjB,EAAMtoB,OAEXmF,KAAUmE,GAAM,CACrB,IAAMilB,EAAQjG,EAAMnjB,GACpBiF,EAAKumB,eAAiBpC,EAAM,GAC5BA,EAAM,GAAGtK,KAAK3lB,KAAK8L,EAAM+Y,EAC3B,CAEAmF,EAAMtoB,OAASsJ,CACjB,CAEA,SAAS0nB,IACPV,EAAUmC,MAAM,CAAC,OACjBlC,OAAa7qB,EACb4qB,OAAY5qB,EACZ0E,EAAKumB,eAAeI,gBAAarrB,CACnC,CACF,GAjVMisB,GAAqB,CACzBzO,SAmVF,SAA2BC,EAASC,EAAIC,GACtC,OAAOC,EAAAA,GAAAA,GACLH,EACAA,EAAQ6M,QAAQpuB,KAAKquB,OAAOnK,WAAW3O,SAAUiM,EAAIC,GACrD,aACAzhB,KAAKquB,OAAOnK,WAAW6M,QAAQC,KAAK3L,SAAS,qBAAkBvhB,EAAY,EAE/E,kBCvWO,SAASmtB,GAAY/L,GA0B1B,IAxBA,IAIIgM,EAGAC,EAGAC,EAGAC,EAGAhO,EAGAiO,EAGAC,EAtBEC,EAAQ,CAAC,EACXjuB,GAAS,IAuBJA,EAAQ2hB,EAAO9mB,QAAQ,CAC9B,KAAOmF,KAASiuB,GACdjuB,EAAQiuB,EAAMjuB,GAMhB,GAHA2tB,EAAQhM,EAAO3hB,GAIbA,GACkB,cAAlB2tB,EAAM,GAAG3vB,MACqB,mBAA9B2jB,EAAO3hB,EAAQ,GAAG,GAAGhC,QAGrB6vB,EAAa,IADbE,EAAYJ,EAAM,GAAGZ,WAAWpL,QAIP9mB,QACW,oBAAlCkzB,EAAUF,GAAY,GAAG7vB,OAEzB6vB,GAAc,GAIdA,EAAaE,EAAUlzB,QACW,YAAlCkzB,EAAUF,GAAY,GAAG7vB,MAEzB,OAAS6vB,EAAaE,EAAUlzB,QACQ,YAAlCkzB,EAAUF,GAAY,GAAG7vB,MAIS,cAAlC+vB,EAAUF,GAAY,GAAG7vB,OAC3B+vB,EAAUF,GAAY,GAAGK,6BAA8B,EACvDL,KAMR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAGzC,cACX1yB,OAAOuU,OAAOkhB,EAAOE,GAAWxM,EAAQ3hB,IACxCA,EAAQiuB,EAAMjuB,GACdguB,GAAO,QAGN,GAAIL,EAAM,GAAGS,WAAY,CAI5B,IAHAP,EAAa7tB,EACb4tB,OAAYrtB,EAELstB,MAIoB,gBAHzBC,EAAanM,EAAOkM,IAGP,GAAG7vB,MACS,oBAAvB8vB,EAAW,GAAG9vB,OAEQ,UAAlB8vB,EAAW,KACTF,IACFjM,EAAOiM,GAAW,GAAG5vB,KAAO,mBAG9B8vB,EAAW,GAAG9vB,KAAO,aACrB4vB,EAAYC,GAOdD,IAEFD,EAAM,GAAGjxB,IAAMlE,OAAOuU,OAAO,CAAC,EAAG4U,EAAOiM,GAAW,GAAGxxB,QAEtD0jB,EAAa6B,EAAOlkB,MAAMmwB,EAAW5tB,IAC1BigB,QAAQ0N,IACnBhb,EAAAA,GAAAA,GAAOgP,EAAQiM,EAAW5tB,EAAQ4tB,EAAY,EAAG9N,GAErD,CACF,CAEA,OAAQkO,CACV,CASA,SAASG,GAAWxM,EAAQ0M,GA+B1B,IA9BA,IAiBIlB,EAGAxC,EApBEM,EAAQtJ,EAAO0M,GAAY,GAC3BzM,EAAUD,EAAO0M,GAAY,GAC/BC,EAAgBD,EAAa,EAG3BE,EAAiB,GACjBC,EACJvD,EAAM8B,YAAcnL,EAAQkJ,OAAOG,EAAMC,aAAaD,EAAM7uB,OACxDqyB,EAAcD,EAAU7M,OAGxBsM,EAAQ,GAGRS,EAAO,CAAC,EAOV1uB,GAAS,EAGT+N,EAAUkd,EACV0D,EAAS,EACTvyB,EAAQ,EACNwyB,EAAS,CAACxyB,GAGT2R,GAAS,CAEd,KAAO4T,IAAS2M,GAAe,KAAOvgB,IAItCwgB,EAAelxB,KAAKixB,GAEfvgB,EAAQgf,aACXI,EAASvL,EAAQwL,YAAYrf,GAExBA,EAAQ/J,MACXmpB,EAAO9vB,KAAK,MAGVstB,GACF6D,EAAUnB,WAAWtf,EAAQ3R,OAG3B2R,EAAQmgB,8BACVM,EAAUK,oCAAqC,GAGjDL,EAAUlB,MAAMH,GAEZpf,EAAQmgB,8BACVM,EAAUK,wCAAqCtuB,IAInDoqB,EAAW5c,EACXA,EAAUA,EAAQ/J,IACpB,CAKA,IAFA+J,EAAUkd,IAEDjrB,EAAQyuB,EAAY5zB,QAGC,SAA1B4zB,EAAYzuB,GAAO,IACW,UAA9ByuB,EAAYzuB,EAAQ,GAAG,IACvByuB,EAAYzuB,GAAO,GAAGhC,OAASywB,EAAYzuB,EAAQ,GAAG,GAAGhC,MACzDywB,EAAYzuB,GAAO,GAAG5D,MAAMC,OAASoyB,EAAYzuB,GAAO,GAAGtD,IAAIL,OAE/DD,EAAQ4D,EAAQ,EAChB4uB,EAAOvxB,KAAKjB,GAEZ2R,EAAQgf,gBAAaxsB,EACrBwN,EAAQ4c,cAAWpqB,EACnBwN,EAAUA,EAAQ/J,MAmBtB,IAfAwqB,EAAU7M,OAAS,GAIf5T,GAEFA,EAAQgf,gBAAaxsB,EACrBwN,EAAQ4c,cAAWpqB,GAEnBquB,EAAO7G,MAIT/nB,EAAQ4uB,EAAO/zB,OAERmF,KAAS,CACd,IAAMvC,EAAQgxB,EAAYhxB,MAAMmxB,EAAO5uB,GAAQ4uB,EAAO5uB,EAAQ,IACxD5D,EAAQmyB,EAAexG,MAC7BkG,EAAMhO,QAAQ,CAAC7jB,EAAOA,EAAQqB,EAAM5C,OAAS,KAC7C8X,EAAAA,GAAAA,GAAOgP,EAAQvlB,EAAO,EAAGqB,EAC3B,CAIA,IAFAuC,GAAS,IAEAA,EAAQiuB,EAAMpzB,QACrB6zB,EAAKC,EAASV,EAAMjuB,GAAO,IAAM2uB,EAASV,EAAMjuB,GAAO,GACvD2uB,GAAUV,EAAMjuB,GAAO,GAAKiuB,EAAMjuB,GAAO,GAAK,EAGhD,OAAO0uB,CACT,CCvOO,IAAM9xB,GAAU,CACrBmhB,SAsBF,SAAyBC,EAASC,GAEhC,IAAI0M,EACJ,OAGA,SAAeviB,GAKb,OAJA4V,EAAQW,MAAM,WACdgM,EAAW3M,EAAQW,MAAM,eAAgB,CACvCuM,YAAa,YAERnnB,EAAKqE,EACd,EAGA,SAASrE,EAAKqE,GACZ,OAAa,OAATA,EACK0mB,EAAW1mB,IAGhBgW,EAAAA,GAAAA,IAAmBhW,GACd4V,EAAQuO,MACbwC,GACAC,EACAF,EAHK9Q,CAIL5V,IAGJ4V,EAAQa,QAAQzW,GACTrE,EACT,CAGA,SAAS+qB,EAAW1mB,GAGlB,OAFA4V,EAAQc,KAAK,gBACbd,EAAQc,KAAK,WACNb,EAAG7V,EACZ,CAGA,SAAS4mB,EAAgB5mB,GAQvB,OAPA4V,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,gBACb6L,EAAS3mB,KAAOga,EAAQW,MAAM,eAAgB,CAC5CuM,YAAa,UACbP,SAAAA,IAEFA,EAAWA,EAAS3mB,KACbD,CACT,CACF,EAvEEV,QAeF,SAAwBse,GAEtB,OADA+L,GAAY/L,GACLA,CACT,GAdMoN,GAAwB,CAC5BhR,SAqEF,SAA8BC,EAASC,EAAIC,GACzC,IAAMjZ,EAAOxI,KACb,OAGA,SAAwB2L,GAKtB,OAJA4V,EAAQc,KAAK,gBACbd,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAASiR,EAAU,aACzC,EAGA,SAASA,EAAS7mB,GAChB,GAAa,OAATA,IAAiBgW,EAAAA,GAAAA,IAAmBhW,GACtC,OAAO8V,EAAI9V,GAGb,IAAM8mB,EAAOjqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAE9C,OACGoK,EAAK6lB,OAAOnK,WAAW6M,QAAQC,KAAK3L,SAAS,iBAC9CoN,GACiB,eAAjBA,EAAK,GAAGlxB,MACRkxB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMr0B,QAAU,EAEzCojB,EAAG7V,GAGL4V,EAAQqO,UAAUpnB,EAAK6lB,OAAOnK,WAAWmM,KAAM5O,EAAKD,EAApDD,CAAwD5V,EACjE,CACF,EApGEiW,SAAS,GCbJ,IAAMyO,GAAO,CAClB/O,SAIF,SAAwBC,GACtB,IAAM/Y,EAAOxI,KACP2yB,EAAUpR,EAAQ6M,QAEtB/M,GAAAA,GAmBF,SAAuB1V,GACrB,GAAa,OAATA,EAEF,YADA4V,EAAQa,QAAQzW,GAQlB,OAJA4V,EAAQW,MAAM,mBACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,mBACb7Z,EAAKinB,sBAAmB3rB,EACjB6uB,CACT,GA5BEpR,EAAQ6M,QACNpuB,KAAKquB,OAAOnK,WAAW0O,YACvBC,GACAnR,EAAAA,GAAAA,GACEH,EACAA,EAAQ6M,QACNpuB,KAAKquB,OAAOnK,WAAWmM,KACvBwC,EACAtR,EAAQ6M,QAAQjuB,GAAS0yB,IAE3B,gBAIN,OAAOF,EAiBP,SAASE,EAAelnB,GACtB,GAAa,OAATA,EASJ,OAJA4V,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,cACb7Z,EAAKinB,sBAAmB3rB,EACjB6uB,EARLpR,EAAQa,QAAQzW,EASpB,CACF,GCxDO,IAAMmnB,GAAW,CACtB7N,WAAY8N,MAEDvvB,GAASwvB,GAAkB,UAC3BC,GAAOD,GAAkB,QAMtC,SAASA,GAAkBE,GACzB,MAAO,CACL5R,SAOF,SAAwBC,GACtB,IAAM/Y,EAAOxI,KACPkkB,EAAalkB,KAAKquB,OAAOnK,WAAWgP,GACpCD,EAAO1R,EAAQ6M,QAAQlK,EAAYvkB,EAAOwzB,GAChD,OAAOxzB,EAGP,SAASA,EAAMgM,GACb,OAAOynB,EAAQznB,GAAQsnB,EAAKtnB,GAAQwnB,EAAQxnB,EAC9C,CAGA,SAASwnB,EAAQxnB,GACf,GAAa,OAATA,EAOJ,OAFA4V,EAAQW,MAAM,QACdX,EAAQa,QAAQzW,GACTrE,EANLia,EAAQa,QAAQzW,EAOpB,CAGA,SAASrE,EAAKqE,GACZ,OAAIynB,EAAQznB,IACV4V,EAAQc,KAAK,QACN4Q,EAAKtnB,KAGd4V,EAAQa,QAAQzW,GACTrE,EACT,CAMA,SAAS8rB,EAAQznB,GACf,GAAa,OAATA,EACF,OAAO,EAGT,IAAMuX,EAAOgB,EAAWvY,GACpBpI,GAAS,EAEb,GAAI2f,EACF,OAAS3f,EAAQ2f,EAAK9kB,QAAQ,CAC5B,IAAM0wB,EAAO5L,EAAK3f,GAElB,IAAKurB,EAAKZ,UAAYY,EAAKZ,SAASxxB,KAAK8L,EAAMA,EAAK0lB,UAClD,OAAO,CAEX,CAGF,OAAO,CACT,CACF,EAhEEjJ,WAAY8N,GACA,SAAVG,EAAmBG,QAAyBvvB,GAgElD,CAMA,SAASivB,GAAeO,GACtB,OAGA,SAAwBpO,EAAQC,GAC9B,IAGIjD,EAHA3e,GAAS,EAMb,OAASA,GAAS2hB,EAAO9mB,aACT0F,IAAVoe,EACEgD,EAAO3hB,IAAoC,SAA1B2hB,EAAO3hB,GAAO,GAAGhC,OACpC2gB,EAAQ3e,EACRA,KAEQ2hB,EAAO3hB,IAAoC,SAA1B2hB,EAAO3hB,GAAO,GAAGhC,OAExCgC,IAAU2e,EAAQ,IACpBgD,EAAOhD,GAAO,GAAGjiB,IAAMilB,EAAO3hB,EAAQ,GAAG,GAAGtD,IAC5CilB,EAAOhP,OAAOgM,EAAQ,EAAG3e,EAAQ2e,EAAQ,GACzC3e,EAAQ2e,EAAQ,GAGlBA,OAAQpe,GAIZ,OAAOwvB,EAAgBA,EAAcpO,EAAQC,GAAWD,CAC1D,CACF,CAaA,SAASmO,GAAuBnO,EAAQC,GAGtC,IAFA,IAAIyM,EAAa,IAERA,GAAc1M,EAAO9mB,QAC5B,IACGwzB,IAAe1M,EAAO9mB,QACU,eAA/B8mB,EAAO0M,GAAY,GAAGrwB,OACW,SAAnC2jB,EAAO0M,EAAa,GAAG,GAAGrwB,KAC1B,CAUA,IATA,IAAM+F,EAAO4d,EAAO0M,EAAa,GAAG,GAC9B2B,EAASpO,EAAQwL,YAAYrpB,GAC/B/D,EAAQgwB,EAAOn1B,OACfo1B,GAAe,EACf9rB,EAAO,EAGP+rB,OAAI,EAEDlwB,KAAS,CACd,IAAMmwB,EAAQH,EAAOhwB,GAErB,GAAqB,kBAAVmwB,EAAoB,CAG7B,IAFAF,EAAcE,EAAMt1B,OAEyB,KAAtCs1B,EAAMtS,WAAWoS,EAAc,IACpC9rB,IACA8rB,IAGF,GAAIA,EAAa,MACjBA,GAAe,CACjB,MACK,IAAe,IAAXE,EACPD,GAAO,EACP/rB,SACK,IAAe,IAAXgsB,EAEJ,CAELnwB,IACA,KACF,CACF,CAEA,GAAImE,EAAM,CACR,IAAM8mB,EAAQ,CACZjtB,KACEqwB,IAAe1M,EAAO9mB,QAAUq1B,GAAQ/rB,EAAO,EAC3C,aACA,oBACN/H,MAAO,CACLC,KAAM0H,EAAKrH,IAAIL,KACfP,OAAQiI,EAAKrH,IAAIZ,OAASqI,EAC1ByoB,OAAQ7oB,EAAKrH,IAAIkwB,OAASzoB,EAC1BisB,OAAQrsB,EAAK3H,MAAMg0B,OAASpwB,EAC5BqwB,aAAcrwB,EACViwB,EACAlsB,EAAK3H,MAAMi0B,aAAeJ,GAEhCvzB,IAAKlE,OAAOuU,OAAO,CAAC,EAAGhJ,EAAKrH,MAE9BqH,EAAKrH,IAAMlE,OAAOuU,OAAO,CAAC,EAAGke,EAAM7uB,OAE/B2H,EAAK3H,MAAMwwB,SAAW7oB,EAAKrH,IAAIkwB,OACjCp0B,OAAOuU,OAAOhJ,EAAMknB,IAEpBtJ,EAAOhP,OACL0b,EACA,EACA,CAAC,QAASpD,EAAOrJ,GACjB,CAAC,OAAQqJ,EAAOrJ,IAElByM,GAAc,EAElB,CAEAA,GACF,CAGF,OAAO1M,CACT,gBC9KO,SAAS2O,GAAgBxF,EAAQyF,EAAYvQ,GAElD,IAAI6C,EAAQrqB,OAAOuU,OACjBiT,EACIxnB,OAAOuU,OAAO,CAAC,EAAGiT,GAClB,CACE3jB,KAAM,EACNP,OAAQ,EACR8wB,OAAQ,GAEd,CACEwD,OAAQ,EACRC,cAAe,IAKbG,EAAc,CAAC,EAGfC,EAAuB,GAGzBT,EAAS,GAGT7M,EAAQ,GAUNnF,EAAU,CACda,QA2IF,SAAiBzW,IACXgW,EAAAA,GAAAA,IAAmBhW,IACrBya,EAAMxmB,OACNwmB,EAAM/mB,OAAS,EACf+mB,EAAM+J,SAAoB,IAAVxkB,EAAc,EAAI,EAClCsoB,MACmB,IAAVtoB,IACTya,EAAM/mB,SACN+mB,EAAM+J,UAGJ/J,EAAMwN,aAAe,EACvBxN,EAAMuN,UAENvN,EAAMwN,eAIFxN,EAAMwN,eAAiBL,EAAOnN,EAAMuN,QAAQv1B,SAC9CgoB,EAAMwN,cAAgB,EACtBxN,EAAMuN,WAIVxO,EAAQ+I,SAAWviB,GAER,CACb,EArKEuW,MAwKF,SAAe3gB,EAAM2yB,GAGnB,IAAM1F,EAAQ0F,GAAU,CAAC,EAKzB,OAJA1F,EAAMjtB,KAAOA,EACbitB,EAAM7uB,MAAQiT,IACduS,EAAQD,OAAOtkB,KAAK,CAAC,QAAS4tB,EAAOrJ,IACrCuB,EAAM9lB,KAAK4tB,GACJA,CACT,EAhLEnM,KAmLF,SAAc9gB,GACZ,IAAMitB,EAAQ9H,EAAM4E,MAGpB,OAFAkD,EAAMvuB,IAAM2S,IACZuS,EAAQD,OAAOtkB,KAAK,CAAC,OAAQ4tB,EAAOrJ,IAC7BqJ,CACT,EAvLEJ,QAAS+F,GA8LX,SAA+BvO,EAAWwO,GACxCC,EAAUzO,EAAWwO,EAAK7Q,KAC5B,IA/LEuM,MAAOqE,EAAiBG,GACxB1E,UAAWuE,EAAiBG,EAAmB,CAC7C1E,WAAW,KASTzK,EAAU,CACd+I,SAAU,KACVviB,KAAM,KACNojB,eAAgB,CAAC,EACjB7J,OAAQ,GACRmJ,OAAAA,EACAsC,YAAAA,EACA+B,eA6CF,SAAwBlE,EAAO+F,GAC7B,OAsYJ,SAAyBhB,EAAQgB,GAC/B,IAMIC,EANAjxB,GAAS,EAGPJ,EAAS,GAKf,OAASI,EAAQgwB,EAAOn1B,QAAQ,CAC9B,IAAMs1B,EAAQH,EAAOhwB,GAGjBhG,OAAK,EAET,GAAqB,kBAAVm2B,EACTn2B,EAAQm2B,OAER,OAAQA,GACN,KAAM,EACJn2B,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,OACR,MAGF,KAAM,EACJA,EAAQg3B,EAAa,IAAM,KAC3B,MAGF,KAAM,EACJ,IAAKA,GAAcC,EAAO,SAC1Bj3B,EAAQ,IACR,MAGF,QAEEA,EAAQ6F,OAAOoI,aAAakoB,GAIlCc,GAAmB,IAAXd,EACRvwB,EAAOvC,KAAKrD,EACd,CAEA,OAAO4F,EAAOoG,KAAK,GACrB,CA9bWkrB,CAAgB9D,EAAYnC,GAAQ+F,EAC7C,EA9CE3hB,IAAAA,EACAge,WA0DF,SAAoBrzB,GAClBw2B,EAAYx2B,EAAMqC,MAAQrC,EAAM8B,OAChC40B,GACF,EA5DEpD,MAwBF,SAAe7vB,GAIb,GAHAuyB,GAAS3yB,EAAAA,GAAAA,GAAK2yB,EAAQvyB,GACtB0zB,IAEkC,OAA9BnB,EAAOA,EAAOn1B,OAAS,GACzB,MAAO,GAMT,OAHAi2B,EAAUP,EAAY,GAEtB3O,EAAQD,QAASD,EAAAA,GAAAA,GAAW+O,EAAsB7O,EAAQD,OAAQC,GAC3DA,EAAQD,MACjB,GA5BIrF,EAAQiU,EAAWxS,SAAS5kB,KAAKyoB,EAAS5D,GAa9C,OAJIuS,EAAW7O,YACb+O,EAAqBpzB,KAAKkzB,GAGrB3O,EA0BP,SAASwL,EAAYnC,GACnB,OA6VJ,SAAqB+E,EAAQ/E,GAC3B,IAMImG,EANEC,EAAapG,EAAM7uB,MAAMg0B,OACzBkB,EAAmBrG,EAAM7uB,MAAMi0B,aAC/BkB,EAAWtG,EAAMvuB,IAAI0zB,OACrBoB,EAAiBvG,EAAMvuB,IAAI2zB,aAK7BgB,IAAeE,EAEjBH,EAAO,CAACpB,EAAOqB,GAAY5zB,MAAM6zB,EAAkBE,KAEnDJ,EAAOpB,EAAOvyB,MAAM4zB,EAAYE,GAE5BD,GAAoB,IAEtBF,EAAK,GAAKA,EAAK,GAAG3zB,MAAM6zB,IAGtBE,EAAiB,GAEnBJ,EAAK/zB,KAAK2yB,EAAOuB,GAAU9zB,MAAM,EAAG+zB,KAIxC,OAAOJ,CACT,CAxXWK,CAAYzB,EAAQ/E,EAC7B,CAGA,SAAS5b,IACP,OAAO7W,OAAOuU,OAAO,CAAC,EAAG8V,EAC3B,CAqBA,SAASsO,IAIP,IAFA,IAAIO,EAEG7O,EAAMuN,OAASJ,EAAOn1B,QAAQ,CACnC,IAAMs1B,EAAQH,EAAOnN,EAAMuN,QAE3B,GAAqB,kBAAVD,EAOT,IANAuB,EAAa7O,EAAMuN,OAEfvN,EAAMwN,aAAe,IACvBxN,EAAMwN,aAAe,GAIrBxN,EAAMuN,SAAWsB,GACjB7O,EAAMwN,aAAeF,EAAMt1B,QAE3B82B,EAAGxB,EAAMtS,WAAWgF,EAAMwN,oBAG5BsB,EAAGxB,EAEP,CACF,CAQA,SAASwB,EAAGvpB,QACC7H,EACI6H,EACfkU,EAAQA,EAAMlU,EAChB,CAkEA,SAAS2oB,EAAkBa,EAAGf,GAC5BA,EAAKgB,SACP,CAQA,SAASjB,EAAiBkB,EAAUnB,GAClC,OAWA,SAAchQ,EAAYoR,EAAaC,GAErC,IAAIC,EAGAC,EAGAhG,EAGA2E,EACJ,OAAO33B,MAAMF,QAAQ2nB,GAEjBwR,EAAuBxR,GACvB,aAAcA,EACdwR,EAAuB,CAACxR,IAS5B,SAA+Bzc,GAC7B,OAAO9H,EAGP,SAASA,EAAMgM,GACb,IAAMgqB,EAAe,OAAThqB,GAAiBlE,EAAIkE,GAC3BiY,EAAe,OAATjY,GAAiBlE,EAAIupB,KAQjC,OAAO0E,EAPM,GAAH,eAIJj5B,MAAMF,QAAQo5B,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAAE,OAC3Cl5B,MAAMF,QAAQqnB,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAExC8R,CAA6B/pB,EACtC,CACF,CAxBIiqB,CAAsB1R,GAgC1B,SAASwR,EAAuBxS,GAI9B,OAHAsS,EAAmBtS,EACnBuS,EAAiB,EAEG,IAAhBvS,EAAK9kB,OACAm3B,EAGFM,EAAgB3S,EAAKuS,GAC9B,CAQA,SAASI,EAAgBjQ,GACvB,OAGA,SAAeja,GAKbyoB,EA4ER,WACE,IAAM0B,EAAaljB,IACbmjB,EAAgB5Q,EAAQ+I,SACxB8H,EAAwB7Q,EAAQsK,iBAChCwG,EAAmB9Q,EAAQD,OAAO9mB,OAClC83B,EAAaz5B,MAAM8mB,KAAKmD,GAC9B,MAAO,CACL0O,QAAAA,EACA7R,KAAM0S,GAQR,SAASb,IACPhP,EAAQ0P,EACR3Q,EAAQ+I,SAAW6H,EACnB5Q,EAAQsK,iBAAmBuG,EAC3B7Q,EAAQD,OAAO9mB,OAAS63B,EACxBvP,EAAQwP,EACRjC,GACF,CACF,CApGekC,GACP1G,EAAmB7J,EAEdA,EAAUhE,UACbuD,EAAQsK,iBAAmB7J,GAG7B,GACEA,EAAUxoB,MACV+nB,EAAQkJ,OAAOnK,WAAW6M,QAAQC,KAAK3L,SAASO,EAAUxoB,MAE1D,OAAOqkB,EAAI9V,GAGb,OAAOia,EAAUtE,SAAS5kB,KAIxBw3B,EAASn4B,OAAOuU,OAAOvU,OAAOge,OAAOoL,GAAU+O,GAAU/O,EACzD5D,EACAC,EACAC,EAPKmE,CAQLja,EACJ,CACF,CAGA,SAAS6V,EAAG7V,GAGV,OAFW,EACX0pB,EAAS5F,EAAkB2E,GACpBkB,CACT,CAGA,SAAS7T,EAAI9V,GAIX,OAHW,EACXyoB,EAAKgB,YAECK,EAAiBD,EAAiBp3B,OAC/By3B,EAAgBL,EAAiBC,IAGnCF,CACT,CACF,CACF,CAOA,SAASlB,EAAUzO,EAAWrC,GACxBqC,EAAUX,aAAe+O,EAAqB3O,SAASO,IACzDoO,EAAqBpzB,KAAKglB,GAGxBA,EAAUhf,UACZsP,EAAAA,GAAAA,GACEiP,EAAQD,OACR3B,EACA4B,EAAQD,OAAO9mB,OAASmlB,EACxBqC,EAAUhf,QAAQue,EAAQD,OAAOlkB,MAAMuiB,GAAO4B,IAI9CS,EAAUwQ,YACZjR,EAAQD,OAASU,EAAUwQ,UAAUjR,EAAQD,OAAQC,GAEzD,CAuCA,SAAS8O,IACH7N,EAAMxmB,QAAQm0B,GAAe3N,EAAM/mB,OAAS,IAC9C+mB,EAAM/mB,OAAS00B,EAAY3N,EAAMxmB,MACjCwmB,EAAM+J,QAAU4D,EAAY3N,EAAMxmB,MAAQ,EAE9C,CACF,gBCneay2B,GAAgB,CAC3Bj5B,KAAM,gBACNkkB,SAIF,SAA+BC,EAASC,EAAIC,GAC1C,IAGI6U,EAHA5uB,EAAO,EAIX,OAGA,SAAeiE,GAGb,OAFA4V,EAAQW,MAAM,iBACdoU,EAAS3qB,EACFynB,EAAQznB,EACjB,EAGA,SAASynB,EAAQznB,GACf,OAAIA,IAAS2qB,GACX/U,EAAQW,MAAM,yBACPqU,EAAS5qB,KAGdsW,EAAAA,GAAAA,IAActW,IACT+V,EAAAA,GAAAA,GAAaH,EAAS6R,EAAS,aAA/B1R,CAA6C/V,GAGlDjE,EAAO,GAAe,OAATiE,KAAkBgW,EAAAA,GAAAA,IAAmBhW,GAC7C8V,EAAI9V,IAGb4V,EAAQc,KAAK,iBACNb,EAAG7V,GACZ,CAGA,SAAS4qB,EAAS5qB,GAChB,OAAIA,IAAS2qB,GACX/U,EAAQa,QAAQzW,GAChBjE,IACO6uB,IAGThV,EAAQc,KAAK,yBACN+Q,EAAQznB,GACjB,CACF,GCzCO,IAAMuX,GAAO,CAClB9lB,KAAM,OACNkkB,SAuBF,SAA2BC,EAASC,EAAIC,GACtC,IAAMjZ,EAAOxI,KACPyyB,EAAOjqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAC1Co4B,EACF/D,GAAyB,eAAjBA,EAAK,GAAGlxB,KACZkxB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMr0B,OACtC,EACFsJ,EAAO,EACX,OAGA,SAAeiE,GACb,IAAM8qB,EACJjuB,EAAKumB,eAAextB,OACV,KAAToK,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAAT8qB,GACKjuB,EAAKumB,eAAeuH,QAAU3qB,IAASnD,EAAKumB,eAAeuH,QAC5D9T,EAAAA,GAAAA,IAAW7W,GACf,CAQA,GAPKnD,EAAKumB,eAAextB,OACvBiH,EAAKumB,eAAextB,KAAOk1B,EAC3BlV,EAAQW,MAAMuU,EAAM,CAClB9E,YAAY,KAIH,kBAAT8E,EAEF,OADAlV,EAAQW,MAAM,kBACE,KAATvW,GAAwB,KAATA,EAClB4V,EAAQuO,MAAMuG,GAAe5U,EAAKiV,EAAlCnV,CAA4C5V,GAC5C+qB,EAAS/qB,GAGf,IAAKnD,EAAKonB,WAAsB,KAATjkB,EAGrB,OAFA4V,EAAQW,MAAM,kBACdX,EAAQW,MAAM,iBACPyU,EAAOhrB,EAElB,CAEA,OAAO8V,EAAI9V,EACb,EAGA,SAASgrB,EAAOhrB,GACd,OAAI6W,EAAAA,GAAAA,IAAW7W,MAAWjE,EAAO,IAC/B6Z,EAAQa,QAAQzW,GACTgrB,KAILnuB,EAAKonB,WAAaloB,EAAO,KAC1Bc,EAAKumB,eAAeuH,OACjB3qB,IAASnD,EAAKumB,eAAeuH,OACpB,KAAT3qB,GAAwB,KAATA,IAEnB4V,EAAQc,KAAK,iBACNqU,EAAS/qB,IAGX8V,EAAI9V,EACb,CAKA,SAAS+qB,EAAS/qB,GAKhB,OAJA4V,EAAQW,MAAM,kBACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,kBACb7Z,EAAKumB,eAAeuH,OAAS9tB,EAAKumB,eAAeuH,QAAU3qB,EACpD4V,EAAQuO,MACbzO,GAAAA,EACA7Y,EAAKonB,UAAYnO,EAAMmV,EACvBrV,EAAQ6M,QACNyI,GACAC,EACAC,GAGN,CAGA,SAASH,EAAQjrB,GAGf,OAFAnD,EAAKumB,eAAeiI,kBAAmB,EACvCR,IACOM,EAAYnrB,EACrB,CAGA,SAASorB,EAAYprB,GACnB,OAAIsW,EAAAA,GAAAA,IAActW,IAChB4V,EAAQW,MAAM,4BACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,4BACNyU,GAGFrV,EAAI9V,EACb,CAGA,SAASmrB,EAAYnrB,GAInB,OAHAnD,EAAKumB,eAAernB,KAClB8uB,EACAhuB,EAAKkqB,eAAenR,EAAQc,KAAK,mBAAmB,GAAMjkB,OACrDojB,EAAG7V,EACZ,CACF,EAtIEqjB,aAAc,CACZ1N,SA2IJ,SAAkCC,EAASC,EAAIC,GAC7C,IAAMjZ,EAAOxI,KAEb,OADAwI,EAAKumB,eAAeI,gBAAarrB,EAC1Byd,EAAQuO,MAAMzO,GAAAA,GAGrB,SAAiB1V,GAMf,OALAnD,EAAKumB,eAAekI,kBAClBzuB,EAAKumB,eAAekI,mBACpBzuB,EAAKumB,eAAeiI,kBAGftV,EAAAA,GAAAA,GACLH,EACAC,EACA,iBACAhZ,EAAKumB,eAAernB,KAAO,EAJtBga,CAKL/V,EACJ,IAGA,SAAkBA,GAChB,GAAInD,EAAKumB,eAAekI,qBAAsBhV,EAAAA,GAAAA,IAActW,GAG1D,OAFAnD,EAAKumB,eAAekI,uBAAoBnzB,EACxC0E,EAAKumB,eAAeiI,sBAAmBlzB,EAChCozB,EAAiBvrB,GAK1B,OAFAnD,EAAKumB,eAAekI,uBAAoBnzB,EACxC0E,EAAKumB,eAAeiI,sBAAmBlzB,EAChCyd,EAAQ6M,QAAQ+I,GAAiB3V,EAAI0V,EAArC3V,CAAuD5V,EAChE,IAGA,SAASurB,EAAiBvrB,GAKxB,OAHAnD,EAAKumB,eAAeI,YAAa,EAEjC3mB,EAAKonB,eAAY9rB,GACV4d,EAAAA,GAAAA,GACLH,EACAA,EAAQ6M,QAAQlL,GAAM1B,EAAIC,GAC1B,aACAjZ,EAAK6lB,OAAOnK,WAAW6M,QAAQC,KAAK3L,SAAS,qBACzCvhB,EACA,EANC4d,CAOL/V,EACJ,CACF,GAzLE0W,KAuNF,SAAyBd,GACvBA,EAAQc,KAAKriB,KAAK+uB,eAAextB,KACnC,GArNMs1B,GAAoC,CACxCvV,SA0NF,SAA0CC,EAASC,EAAIC,GACrD,IAAMjZ,EAAOxI,KACb,OAAO0hB,EAAAA,GAAAA,GACLH,GASF,SAAqB5V,GACnB,IAAM8mB,EAAOjqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAC9C,QAAQ6jB,EAAAA,GAAAA,IAActW,IACpB8mB,GACiB,6BAAjBA,EAAK,GAAGlxB,KACNigB,EAAG7V,GACH8V,EAAI9V,EACV,GAdE,2BACAnD,EAAK6lB,OAAOnK,WAAW6M,QAAQC,KAAK3L,SAAS,qBACzCvhB,EACA,EAYR,EA7OE8d,SAAS,GAILuV,GAAkB,CACtB7V,SAoLF,SAAwBC,EAASC,EAAIC,GACnC,IAAMjZ,EAAOxI,KACb,OAAO0hB,EAAAA,GAAAA,GACLH,GAOF,SAAqB5V,GACnB,IAAM8mB,EAAOjqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAC9C,OAAOq0B,GACY,mBAAjBA,EAAK,GAAGlxB,MACRkxB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMr0B,SAAWoK,EAAKumB,eAAernB,KACnE8Z,EAAG7V,GACH8V,EAAI9V,EACV,GAZE,iBACAnD,EAAKumB,eAAernB,KAAO,EAY/B,EArMEka,SAAS,GC3BJ,IAAMwV,GAAa,CACxBh6B,KAAM,aACNkkB,SAQF,SAAiCC,EAASC,EAAIC,GAC5C,IAAMjZ,EAAOxI,KACb,OAGA,SAAe2L,GACb,GAAa,KAATA,EAAa,CACf,IAAMkU,EAAQrX,EAAKumB,eAanB,OAXKlP,EAAMwX,OACT9V,EAAQW,MAAM,aAAc,CAC1ByP,YAAY,IAEd9R,EAAMwX,MAAO,GAGf9V,EAAQW,MAAM,oBACdX,EAAQW,MAAM,oBACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,oBACNiV,CACT,CAEA,OAAO7V,EAAI9V,EACb,EAGA,SAAS2rB,EAAM3rB,GACb,OAAIsW,EAAAA,GAAAA,IAActW,IAChB4V,EAAQW,MAAM,8BACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,8BACbd,EAAQc,KAAK,oBACNb,IAGTD,EAAQc,KAAK,oBACNb,EAAG7V,GACZ,CACF,EA9CEqjB,aAAc,CACZ1N,SAgDJ,SAAwCC,EAASC,EAAIC,GACnD,OAAOC,EAAAA,GAAAA,GACLH,EACAA,EAAQ6M,QAAQgJ,GAAY5V,EAAIC,GAChC,aACAzhB,KAAKquB,OAAOnK,WAAW6M,QAAQC,KAAK3L,SAAS,qBAAkBvhB,EAAY,EAE/E,GArDEue,KAwDF,SAAcd,GACZA,EAAQc,KAAK,aACf,GCnDO,SAASkV,GACdhW,EACAC,EACAC,EACAlgB,EACAi2B,EACAC,EACAC,EACAC,EACA9V,GAEA,IAAMC,EAAQD,GAAOE,OAAOC,kBACxB4V,EAAU,EACd,OAGA,SAAejsB,GACb,GAAa,KAATA,EAMF,OALA4V,EAAQW,MAAM3gB,GACdggB,EAAQW,MAAMsV,GACdjW,EAAQW,MAAMuV,GACdlW,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAKoV,GACNI,EAGT,GAAa,OAATlsB,GAA0B,KAATA,IAAekX,EAAAA,GAAAA,IAAalX,GAC/C,OAAO8V,EAAI9V,GASb,OANA4V,EAAQW,MAAM3gB,GACdggB,EAAQW,MAAMwV,GACdnW,EAAQW,MAAMyV,GACdpW,EAAQW,MAAM,cAAe,CAC3BuM,YAAa,WAERqJ,EAAensB,EACxB,EAGA,SAASksB,EAA0BlsB,GACjC,OAAa,KAATA,GACF4V,EAAQW,MAAMuV,GACdlW,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAKoV,GACblW,EAAQc,KAAKmV,GACbjW,EAAQc,KAAK9gB,GACNigB,IAGTD,EAAQW,MAAMyV,GACdpW,EAAQW,MAAM,cAAe,CAC3BuM,YAAa,WAERsJ,EAAoBpsB,GAC7B,CAGA,SAASosB,EAAoBpsB,GAC3B,OAAa,KAATA,GACF4V,EAAQc,KAAK,eACbd,EAAQc,KAAKsV,GACNE,EAA0BlsB,IAGtB,OAATA,GAA0B,KAATA,IAAegW,EAAAA,GAAAA,IAAmBhW,GAC9C8V,EAAI9V,IAGb4V,EAAQa,QAAQzW,GACA,KAATA,EAAcqsB,EAA4BD,EACnD,CAGA,SAASC,EAA0BrsB,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC4V,EAAQa,QAAQzW,GACTosB,GAGFA,EAAoBpsB,EAC7B,CAGA,SAASmsB,EAAensB,GACtB,OAAa,KAATA,IACIisB,EAAU9V,EAAcL,EAAI9V,IAClC4V,EAAQa,QAAQzW,GACTmsB,GAGI,KAATnsB,EACGisB,KAQLrW,EAAQa,QAAQzW,GACTmsB,IARLvW,EAAQc,KAAK,eACbd,EAAQc,KAAKsV,GACbpW,EAAQc,KAAKqV,GACbnW,EAAQc,KAAK9gB,GACNigB,EAAG7V,IAOD,OAATA,IAAiBmX,EAAAA,GAAAA,IAA0BnX,GACzCisB,EAAgBnW,EAAI9V,IACxB4V,EAAQc,KAAK,eACbd,EAAQc,KAAKsV,GACbpW,EAAQc,KAAKqV,GACbnW,EAAQc,KAAK9gB,GACNigB,EAAG7V,KAGRkX,EAAAA,GAAAA,IAAalX,GAAc8V,EAAI9V,IACnC4V,EAAQa,QAAQzW,GACA,KAATA,EAAcssB,EAAuBH,EAC9C,CAGA,SAASG,EAAqBtsB,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC4V,EAAQa,QAAQzW,GACTmsB,GAGFA,EAAensB,EACxB,CACF,CCpIO,SAASusB,GAAa3W,EAASC,EAAIC,EAAKlgB,EAAM42B,EAAYR,GAC/D,IAIIrwB,EAJEkB,EAAOxI,KACT0H,EAAO,EAIX,OAGA,SAAeiE,GAMb,OALA4V,EAAQW,MAAM3gB,GACdggB,EAAQW,MAAMiW,GACd5W,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK8V,GACb5W,EAAQW,MAAMyV,GACPvE,CACT,EAGA,SAASA,EAAQznB,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgBrE,GAQP,KAATqE,IACEjE,GACD,2BAA4Bc,EAAK6lB,OAAOnK,YAC1Cxc,EAAO,IAEA+Z,EAAI9V,GAGA,KAATA,GACF4V,EAAQc,KAAKsV,GACbpW,EAAQW,MAAMiW,GACd5W,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK8V,GACb5W,EAAQc,KAAK9gB,GACNigB,IAGLG,EAAAA,GAAAA,IAAmBhW,IACrB4V,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,cACN+Q,IAGT7R,EAAQW,MAAM,cAAe,CAC3BuM,YAAa,WAER2J,EAAMzsB,GACf,CAGA,SAASysB,EAAMzsB,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACAgW,EAAAA,GAAAA,IAAmBhW,IACnBjE,IAAS,KAET6Z,EAAQc,KAAK,eACN+Q,EAAQznB,KAGjB4V,EAAQa,QAAQzW,GAChBrE,EAAOA,KAAS2a,EAAAA,GAAAA,IAActW,GACd,KAATA,EAAc0sB,EAAcD,EACrC,CAGA,SAASC,EAAY1sB,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC4V,EAAQa,QAAQzW,GAChBjE,IACO0wB,GAGFA,EAAMzsB,EACf,CACF,CCzFO,SAAS2sB,GAAa/W,EAASC,EAAIC,EAAKlgB,EAAM42B,EAAYR,GAE/D,IAAIrB,EACJ,OAGA,SAAe3qB,GAMb,OALA4V,EAAQW,MAAM3gB,GACdggB,EAAQW,MAAMiW,GACd5W,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK8V,GACb7B,EAAkB,KAAT3qB,EAAc,GAAKA,EACrB4sB,CACT,EAGA,SAASA,EAAkB5sB,GACzB,OAAIA,IAAS2qB,GACX/U,EAAQW,MAAMiW,GACd5W,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK8V,GACb5W,EAAQc,KAAK9gB,GACNigB,IAGTD,EAAQW,MAAMyV,GACPa,EAAa7sB,GACtB,CAGA,SAAS6sB,EAAa7sB,GACpB,OAAIA,IAAS2qB,GACX/U,EAAQc,KAAKsV,GACNY,EAAkBjC,IAGd,OAAT3qB,EACK8V,EAAI9V,IAGTgW,EAAAA,GAAAA,IAAmBhW,IACrB4V,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAASiX,EAAc,gBAG7CjX,EAAQW,MAAM,cAAe,CAC3BuM,YAAa,WAERha,EAAM9I,GACf,CAGA,SAAS8I,EAAM9I,GACb,OAAIA,IAAS2qB,GAAmB,OAAT3qB,IAAiBgW,EAAAA,GAAAA,IAAmBhW,IACzD4V,EAAQc,KAAK,eACNmW,EAAa7sB,KAGtB4V,EAAQa,QAAQzW,GACA,KAATA,EAAc8sB,EAAchkB,EACrC,CAGA,SAASgkB,EAAY9sB,GACnB,OAAIA,IAAS2qB,GAAmB,KAAT3qB,GACrB4V,EAAQa,QAAQzW,GACT8I,GAGFA,EAAM9I,EACf,CACF,CChFO,SAAS+sB,GAAkBnX,EAASC,GAEzC,IAAIsP,EACJ,OAGA,SAASnxB,EAAMgM,GACb,IAAIgW,EAAAA,GAAAA,IAAmBhW,GAKrB,OAJA4V,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,cACbyO,GAAO,EACAnxB,EAGT,IAAIsiB,EAAAA,GAAAA,IAActW,GAChB,OAAO+V,EAAAA,GAAAA,GACLH,EACA5hB,EACAmxB,EAAO,aAAe,aAHjBpP,CAIL/V,GAGJ,OAAO6V,EAAG7V,EACZ,CACF,eCnBagtB,GAAa,CACxBv7B,KAAM,aACNkkB,SAUF,SAA4BC,EAASC,EAAIC,GACvC,IAGImX,EAHEpwB,EAAOxI,KAIb,OAGA,SAAe2L,GAEb,OADA4V,EAAQW,MAAM,cACPgW,GAAax7B,KAClB8L,EACA+Y,EACAsX,EACApX,EACA,kBACA,wBACA,wBAPKyW,CAQLvsB,EACJ,EAGA,SAASktB,EAAWltB,GAKlB,OAJAitB,GAAa7T,EAAAA,GAAAA,GACXvc,EAAKkqB,eAAelqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAAG,IAAI4C,MAAM,GAAI,IAG3D,KAAT2K,GACF4V,EAAQW,MAAM,oBACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,oBAENqW,GACLnX,EACAgW,GACEhW,EACAA,EAAQ6M,QACN0K,IACApX,EAAAA,GAAAA,GAAaH,EAAS+V,EAAO,eAC7B5V,EAAAA,GAAAA,GAAaH,EAAS+V,EAAO,eAE/B7V,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAI9V,EACb,CAGA,SAAS2rB,EAAM3rB,GACb,OAAa,OAATA,IAAiBgW,EAAAA,GAAAA,IAAmBhW,IACtC4V,EAAQc,KAAK,cAER7Z,EAAK6lB,OAAO0K,QAAQ1T,SAASuT,IAChCpwB,EAAK6lB,OAAO0K,QAAQn4B,KAAKg4B,GAGpBpX,EAAG7V,IAGL8V,EAAI9V,EACb,CACF,GA1EMmtB,GAAiB,CACrBxX,SA4EF,SAAuBC,EAASC,EAAIC,GAClC,OAGA,SAAe9V,GACb,OAAOmX,EAAAA,GAAAA,IAA0BnX,GAC7B+sB,GAAkBnX,EAAS6C,EAA3BsU,CAAmC/sB,GACnC8V,EAAI9V,EACV,EAGA,SAASyY,EAAOzY,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzB2sB,GACL/W,GACAG,EAAAA,GAAAA,GAAaH,EAAS+V,EAAO,cAC7B7V,EACA,kBACA,wBACA,wBANK6W,CAOL3sB,GAGG8V,EAAI9V,EACb,CAGA,SAAS2rB,EAAM3rB,GACb,OAAgB,OAATA,IAAiBgW,EAAAA,GAAAA,IAAmBhW,GAAQ6V,EAAG7V,GAAQ8V,EAAI9V,EACpE,CACF,EAzGEiW,SAAS,GCdJ,IAAMoX,GAAe,CAC1B57B,KAAM,eACNkkB,SAUF,SAA8BC,EAASC,EAAIC,GACzC,IAAMjZ,EAAOxI,KACb,OAGA,SAAe2L,GAEb,OADA4V,EAAQW,MAAM,iBACPR,EAAAA,GAAAA,GAAaH,EAAS0X,EAAkB,aAAc,EAAtDvX,CAA6D/V,EACtE,EAGA,SAASstB,EAAiBttB,GACxB,IAAM8mB,EAAOjqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAC9C,OAAOq0B,GACY,eAAjBA,EAAK,GAAGlxB,MACRkxB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMr0B,QAAU,EAC9C86B,EAAYvtB,GACZ8V,EAAI9V,EACV,CAGA,SAASutB,EAAYvtB,GACnB,OAAa,OAATA,EACK2rB,EAAM3rB,IAGXgW,EAAAA,GAAAA,IAAmBhW,GACd4V,EAAQ6M,QAAQ+K,GAAiBD,EAAa5B,EAA9C/V,CAAqD5V,IAG9D4V,EAAQW,MAAM,iBACP/hB,EAAQwL,GACjB,CAGA,SAASxL,EAAQwL,GACf,OAAa,OAATA,IAAiBgW,EAAAA,GAAAA,IAAmBhW,IACtC4V,EAAQc,KAAK,iBACN6W,EAAYvtB,KAGrB4V,EAAQa,QAAQzW,GACTxL,EACT,CAGA,SAASm3B,EAAM3rB,GAEb,OADA4V,EAAQc,KAAK,gBACNb,EAAG7V,EACZ,CACF,GAxDMwtB,GAAkB,CACtB7X,SA0DF,SAAiCC,EAASC,EAAIC,GAC5C,IAAMjZ,EAAOxI,KACb,OAAOL,EAGP,SAASA,EAAMgM,GAEb,OAAInD,EAAK6lB,OAAO6B,KAAK1nB,EAAKoK,MAAMhT,MACvB6hB,EAAI9V,IAGTgW,EAAAA,GAAAA,IAAmBhW,IACrB4V,EAAQW,MAAM,cACdX,EAAQa,QAAQzW,GAChB4V,EAAQc,KAAK,cACN1iB,IAGF+hB,EAAAA,GAAAA,GAAaH,EAAS2X,EAAa,aAAc,EAAjDxX,CAAwD/V,EACjE,CAGA,SAASutB,EAAYvtB,GACnB,IAAM8mB,EAAOjqB,EAAK0c,OAAO1c,EAAK0c,OAAO9mB,OAAS,GAC9C,OAAOq0B,GACY,eAAjBA,EAAK,GAAGlxB,MACRkxB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMr0B,QAAU,EAC9CojB,EAAG7V,IACHgW,EAAAA,GAAAA,IAAmBhW,GACnBhM,EAAMgM,GACN8V,EAAI9V,EACV,CACF,EAzFEiW,SAAS,GCHJ,IAAMwX,GAAa,CACxBh8B,KAAM,aACNkkB,SA4DF,SAA4BC,EAASC,EAAIC,GACvC,IAAMjZ,EAAOxI,KACT0H,EAAO,EACX,OAGA,SAAeiE,GAGb,OAFA4V,EAAQW,MAAM,cACdX,EAAQW,MAAM,sBACPmX,EAAgB1tB,EACzB,EAGA,SAAS0tB,EAAgB1tB,GACvB,OAAa,KAATA,GAAejE,IAAS,GAC1B6Z,EAAQa,QAAQzW,GACT0tB,GAGI,OAAT1tB,IAAiBmX,EAAAA,GAAAA,IAA0BnX,IAC7C4V,EAAQc,KAAK,sBACN7Z,EAAKonB,UAAYpO,EAAG7V,GAAQ2tB,EAAa3tB,IAG3C8V,EAAI9V,EACb,CAGA,SAAS2tB,EAAa3tB,GACpB,OAAa,KAATA,GACF4V,EAAQW,MAAM,sBACPqU,EAAS5qB,IAGL,OAATA,IAAiBgW,EAAAA,GAAAA,IAAmBhW,IACtC4V,EAAQc,KAAK,cACNb,EAAG7V,KAGRsW,EAAAA,GAAAA,IAActW,IACT+V,EAAAA,GAAAA,GAAaH,EAAS+X,EAAc,aAApC5X,CAAkD/V,IAG3D4V,EAAQW,MAAM,kBACP5a,EAAKqE,GACd,CAGA,SAAS4qB,EAAS5qB,GAChB,OAAa,KAATA,GACF4V,EAAQa,QAAQzW,GACT4qB,IAGThV,EAAQc,KAAK,sBACNiX,EAAa3tB,GACtB,CAGA,SAASrE,EAAKqE,GACZ,OAAa,OAATA,GAA0B,KAATA,IAAemX,EAAAA,GAAAA,IAA0BnX,IAC5D4V,EAAQc,KAAK,kBACNiX,EAAa3tB,KAGtB4V,EAAQa,QAAQzW,GACTrE,EACT,CACF,EA/HEV,QAIF,SAA2Bse,EAAQC,GACjC,IAIIhlB,EAGA8yB,EAPAZ,EAAanN,EAAO9mB,OAAS,EAC7B+vB,EAAe,EAQkB,eAAjCjJ,EAAOiJ,GAAc,GAAG5sB,OAC1B4sB,GAAgB,GAIhBkE,EAAa,EAAIlE,GACc,eAA/BjJ,EAAOmN,GAAY,GAAG9wB,OAEtB8wB,GAAc,GAIiB,uBAA/BnN,EAAOmN,GAAY,GAAG9wB,OACrB4sB,IAAiBkE,EAAa,GAC5BA,EAAa,EAAIlE,GACmB,eAAnCjJ,EAAOmN,EAAa,GAAG,GAAG9wB,QAE9B8wB,GAAclE,EAAe,IAAMkE,EAAa,EAAI,GAGlDA,EAAalE,IACfhuB,EAAU,CACRoB,KAAM,iBACN5B,MAAOulB,EAAOiJ,GAAc,GAAGxuB,MAC/BM,IAAKilB,EAAOmN,GAAY,GAAGpyB,KAE7BgzB,EAAO,CACL1xB,KAAM,YACN5B,MAAOulB,EAAOiJ,GAAc,GAAGxuB,MAC/BM,IAAKilB,EAAOmN,GAAY,GAAGpyB,IAE3BwuB,YAAa,SAEfvY,EAAAA,GAAAA,GAAOgP,EAAQiJ,EAAckE,EAAalE,EAAe,EAAG,CAC1D,CAAC,QAAShuB,EAASglB,GACnB,CAAC,QAAS8N,EAAM9N,GAChB,CAAC,OAAQ8N,EAAM9N,GACf,CAAC,OAAQhlB,EAASglB,MAItB,OAAOD,CACT,GChEO,IAAMqU,GAAkB,CAC7Bn8B,KAAM,kBACNkkB,SA+DF,SAAiCC,EAASC,EAAIC,GAC5C,IAII6U,EAGAkD,EAPEhxB,EAAOxI,KACTuD,EAAQiF,EAAK0c,OAAO9mB,OAQxB,KAAOmF,KAGL,GACiC,eAA/BiF,EAAK0c,OAAO3hB,GAAO,GAAGhC,MACS,eAA/BiH,EAAK0c,OAAO3hB,GAAO,GAAGhC,MACS,YAA/BiH,EAAK0c,OAAO3hB,GAAO,GAAGhC,KACtB,CACAi4B,EAA2C,cAA/BhxB,EAAK0c,OAAO3hB,GAAO,GAAGhC,KAClC,KACF,CAGF,OAGA,SAAeoK,GACb,IAAKnD,EAAK6lB,OAAO6B,KAAK1nB,EAAKoK,MAAMhT,QAAU4I,EAAKonB,WAAa4J,GAI3D,OAHAjY,EAAQW,MAAM,qBACdX,EAAQW,MAAM,6BACdoU,EAAS3qB,EACF8tB,EAAgB9tB,GAGzB,OAAO8V,EAAI9V,EACb,EAGA,SAAS8tB,EAAgB9tB,GACvB,OAAIA,IAAS2qB,GACX/U,EAAQa,QAAQzW,GACT8tB,IAGTlY,EAAQc,KAAK,8BACNX,EAAAA,GAAAA,GAAaH,EAASmY,EAAoB,aAA1ChY,CAAwD/V,GACjE,CAGA,SAAS+tB,EAAmB/tB,GAC1B,OAAa,OAATA,IAAiBgW,EAAAA,GAAAA,IAAmBhW,IACtC4V,EAAQc,KAAK,qBACNb,EAAG7V,IAGL8V,EAAI9V,EACb,CACF,EAvHEyqB,UAIF,SAAkClR,EAAQC,GACxC,IAGIhlB,EAGA8yB,EAGA0F,EATAp1B,EAAQ2hB,EAAO9mB,OAYnB,KAAOmF,KACL,GAAyB,UAArB2hB,EAAO3hB,GAAO,GAAgB,CAChC,GAA8B,YAA1B2hB,EAAO3hB,GAAO,GAAGhC,KAAoB,CACvCpB,EAAUoD,EACV,KACF,CAE8B,cAA1B2hB,EAAO3hB,GAAO,GAAGhC,OACnB0xB,EAAO1vB,EAEX,KAEgC,YAA1B2hB,EAAO3hB,GAAO,GAAGhC,MAEnB2jB,EAAOhP,OAAO3S,EAAO,GAGlBo1B,GAAwC,eAA1BzT,EAAO3hB,GAAO,GAAGhC,OAClCo3B,EAAap1B,GAKnB,IAAMo2B,EAAU,CACdp4B,KAAM,gBACN5B,MAAO5D,OAAOuU,OAAO,CAAC,EAAG4U,EAAO+N,GAAM,GAAGtzB,OACzCM,IAAKlE,OAAOuU,OAAO,CAAC,EAAG4U,EAAOA,EAAO9mB,OAAS,GAAG,GAAG6B,MAGtDilB,EAAO+N,GAAM,GAAG1xB,KAAO,oBAGnBo3B,GACFzT,EAAOhP,OAAO+c,EAAM,EAAG,CAAC,QAAS0G,EAASxU,IAC1CD,EAAOhP,OAAOyiB,EAAa,EAAG,EAAG,CAAC,OAAQzT,EAAO/kB,GAAS,GAAIglB,IAC9DD,EAAO/kB,GAAS,GAAGF,IAAMlE,OAAOuU,OAAO,CAAC,EAAG4U,EAAOyT,GAAY,GAAG14B,MAEjEilB,EAAO/kB,GAAS,GAAKw5B,EAIvB,OADAzU,EAAOtkB,KAAK,CAAC,OAAQ+4B,EAASxU,IACvBD,CACT,GC/DO,IAAM0U,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAaWC,GAAe,CAAC,MAAO,SAAU,QAAS,YClE1CC,GAAW,CACtB18B,KAAM,WACNkkB,SAkCF,SAA0BC,EAASC,EAAIC,GACrC,IAGIgV,EAGAsD,EAGApQ,EAGApmB,EAGA+yB,EAfE9tB,EAAOxI,KAgBb,OAGA,SAAe2L,GAIb,OAHA4V,EAAQW,MAAM,YACdX,EAAQW,MAAM,gBACdX,EAAQa,QAAQzW,GACT0rB,CACT,EAGA,SAASA,EAAK1rB,GACZ,OAAa,KAATA,GACF4V,EAAQa,QAAQzW,GACTquB,GAGI,KAATruB,GACF4V,EAAQa,QAAQzW,GACTsuB,GAGI,KAATtuB,GACF4V,EAAQa,QAAQzW,GAChB8qB,EAAO,EAGAjuB,EAAKonB,UAAYpO,EAAK0Y,IAG3B5X,EAAAA,GAAAA,IAAW3W,IACb4V,EAAQa,QAAQzW,GAChBge,EAASvmB,OAAOoI,aAAaG,GAC7BouB,GAAW,EACJhoB,GAGF0P,EAAI9V,EACb,CAGA,SAASquB,EAAiBruB,GACxB,OAAa,KAATA,GACF4V,EAAQa,QAAQzW,GAChB8qB,EAAO,EACA0D,GAGI,KAATxuB,GACF4V,EAAQa,QAAQzW,GAChB8qB,EAAO,EACP9M,EAAS,SACTpmB,EAAQ,EACD62B,IAGL9X,EAAAA,GAAAA,IAAW3W,IACb4V,EAAQa,QAAQzW,GAChB8qB,EAAO,EACAjuB,EAAKonB,UAAYpO,EAAK0Y,GAGxBzY,EAAI9V,EACb,CAGA,SAASwuB,EAAkBxuB,GACzB,OAAa,KAATA,GACF4V,EAAQa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Ae,KACfC,QAAS7b,GACT8b,gBAAiB9b,GACjB+b,UAAW,KACXC,QAAS,KACTC,IAAK,KACLC,QAASlc,GACTiV,iBAAkB,KAClBnO,SAAUjH,GACVsc,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAWvc,GACXkV,iBAAkB,KAClBpiD,IAAK,KACLixB,MAAO,KACPy4B,SAAUxc,GACVyc,0BAA2B,KAC3BC,KAAM,KACNvH,YAAanV,GACboV,SAAU,KACV50C,OAAQ,KACRm8C,UAAW,KACXC,YAAa,KACbvH,WAAY,KACZC,aAAc,KACduH,UAAW,KACXC,eAAgB,KAChBvH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZ91C,OAAQ,KACRg9C,GAAI,KACJ3mC,KAAM,KACN4mC,GAAI,KACJC,GAAI,KACJC,GAAIjd,GACJkd,GAAIld,GACJ6V,UAAW7V,GACX8V,2BAA4B,KAC5BC,yBAA0B,KAC1BoH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACf/kB,QAAS,KACTglB,QAASvd,GACTwd,kBAAmB,KACnBC,WAAY,KACZhW,OAAQ,KACR5rB,KAAM,KACN+rB,SAAU,KACVqO,UAAWjW,GACXkW,aAAclW,GACdmW,aAAcnW,GACdl6B,GAAI,KACJ43C,YAAa1d,GACboW,eAAgB,KAChBuH,kBAAmB,KACnBC,GAAI,KACJC,IAAK,KACLC,UAAW9d,GACXphC,EAAGohC,GACH+d,GAAI/d,GACJge,GAAIhe,GACJie,GAAIje,GACJke,GAAIle,GACJme,aAAche,GACdie,iBAAkB,KAClBC,UAAW,KACXC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTtlB,KAAM,KACNulB,aAAc,KACdpI,cAAe,KACfC,cAAe,KACfoI,kBAAmB1e,GACnB2e,MAAO,KACPpI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbmI,aAAc,KACdC,YAAa,KACbC,YAAa,KACbre,KAAM,KACNse,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACdvqC,IAAK,KACLmb,MAAO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AAa,wBACbC,UAAW,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,SAElE,CACEh5D,KAAM,WACN6O,MAAO,eACPoK,KAAM,CAAC,SACP8/C,YAAa,yBACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACEh5D,KAAM,MACN6O,MAAO,eACPoK,KAAM,CAAC,SACP8/C,YAAa,yBACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACEh5D,KAAM,UACN6O,MAAO,eACPoK,KAAM,GACN8/C,YAAa,eACbC,UAAW,CAAC,KAAM,MAAO,KAAM,QAEjC,CACEh5D,KAAM,WACN6O,MAAO,eACPoK,KAAM,CAAC,QAAS,QAChB8/C,YAAa,0BACbC,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,QAGJ,CACEh5D,KAAM,MACN6O,MAAO,eACPoK,KAAM,CAAC,WAAY,SAAU,OAC7B8/C,YAAa,MACbC,UAAW,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,QAExE,CACEh5D,KAAM,eACN6O,MAAO,eACPoK,KAAM,CAAC,OACP8/C,YAAa,eACbC,UAAW,CAAC,KAAM,MAAO,KAAM,QAEjC,CACEh5D,KAAM,WACN6O,MAAO,eACPoK,KAAM,CAAC,OAAQ,WACf8/C,YAAa,qBACbC,UAAW,CAAC,OAEd,CACEh5D,KAAM,aACN6O,MAAO,eACPoK,KAAM,CAAC,WAAY,YAAa,OAChC8/C,YAAa,uBACbC,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MACA,QAGJ,CACEh5D,KAAM,OACN6O,MAAO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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_baseValues.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hasUnicode.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_iteratorToArray.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_root.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_unicodeToArray.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isString.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/keys.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/toArray.js","../node_modules/lodash/values.js","../node_modules/node-emoji/index.js","../node_modules/node-emoji/lib/emoji.js","../node_modules/react-helmet/es/Helmet.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/react-side-effect/lib/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/emoticon/index.js","../node_modules/remark-emoji/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-gfm-footnote/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nmodule.exports = iteratorToArray;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var Symbol = require('./_Symbol'),\n    copyArray = require('./_copyArray'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    iteratorToArray = require('./_iteratorToArray'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray'),\n    stringToArray = require('./_stringToArray'),\n    values = require('./values');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nmodule.exports = toArray;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","module.exports = require('./lib/emoji');","/*jslint node: true*/\nvar toArray = require('lodash/toArray');\nvar emojiByName = require('./emoji.json');\n\n\"use strict\";\n\n/**\n * regex to parse emoji in a string - finds emoji, e.g. :coffee:\n */\nvar emojiNameRegex = /:([a-zA-Z0-9_\\-\\+]+):/g;\n\n/**\n * regex to trim whitespace\n * use instead of String.prototype.trim() for IE8 support\n */\nvar trimSpaceRegex = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n/**\n * Removes colons on either side\n * of the string if present\n * @param  {string} str\n * @return {string}\n */\nfunction stripColons (str) {\n  var colonIndex = str.indexOf(':');\n  if (colonIndex > -1) {\n    // :emoji: (http://www.emoji-cheat-sheet.com/)\n    if (colonIndex === str.length - 1) {\n      str = str.substring(0, colonIndex);\n      return stripColons(str);\n    } else {\n      str = str.substr(colonIndex + 1);\n      return stripColons(str);\n    }\n  }\n\n  return str;\n}\n\n/**\n * Adds colons to either side\n * of the string\n * @param {string} str\n * @return {string}\n */\nfunction wrapColons (str) {\n  return (typeof str === 'string' && str.length > 0) ? ':' + str + ':' : str;\n}\n\n/**\n * Ensure that the word is wrapped in colons\n * by only adding them, if they are not there.\n * @param {string} str\n * @return {string}\n */\nfunction ensureColons (str) {\n  return (typeof str === 'string' && str[0] !== ':') ? wrapColons(str) : str;\n}\n\n// Non spacing mark, some emoticons have them. It's the 'Variant Form',\n// which provides more information so that emoticons can be rendered as\n// more colorful graphics. FE0E is a unicode text version, where as FE0F\n// should be rendered as a graphical version. The code gracefully degrades.\nvar NON_SPACING_MARK = String.fromCharCode(65039); // 65039 - '️' - 0xFE0F;\nvar nonSpacingRegex = new RegExp(NON_SPACING_MARK, 'g')\n\n// Remove the non-spacing-mark from the code, never send a stripped version\n// to the client, as it kills graphical emoticons.\nfunction stripNSB (code) {\n  return code.replace(nonSpacingRegex, '');\n};\n\n// Reversed hash table, where as emojiByName contains a { heart: '❤' }\n// dictionary emojiByCode contains { ❤: 'heart' }. The codes are normalized\n// to the text version.\nvar emojiByCode = Object.keys(emojiByName).reduce(function(h,k) {\n  h[stripNSB(emojiByName[k])] = k;\n  return h;\n}, {});\n\n/**\n * Emoji namespace\n */\nvar Emoji = {\n  emoji: emojiByName,\n};\n\n/**\n * get emoji code from name. return emoji code back if code is passed in.\n * @param  {string} emoji\n * @return {string}\n */\nEmoji._get = function _get (emoji) {\n  if (emojiByCode[stripNSB(emoji)]) {\n    return emoji;\n  } else if (emojiByName.hasOwnProperty(emoji)) {\n    return emojiByName[emoji];\n  }\n\n  return ensureColons(emoji);\n};\n\n/**\n * get emoji code from :emoji: string or name\n * @param  {string} emoji\n * @return {string}\n */\nEmoji.get = function get (emoji) {\n  emoji = stripColons(emoji);\n\n  return Emoji._get(emoji);\n};\n\n/**\n * find the emoji by either code or name\n * @param {string} nameOrCode The emoji to find, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\nEmoji.find = function find (nameOrCode) {\n  return Emoji.findByName(nameOrCode) || Emoji.findByCode(nameOrCode);\n};\n\n/**\n * find the emoji by name\n * @param {string} name The emoji to find either `coffee` or `:coffee:`;\n * @return {object}\n */\nEmoji.findByName = function findByName (name) {\n  var stripped = stripColons(name);\n  var emoji = emojiByName[stripped];\n\n  return emoji ? ({ emoji: emoji, key: stripped }) : undefined;\n};\n\n/**\n * find the emoji by code (emoji)\n * @param {string} code The emoji to find; for example `☕` or `☔`\n * @return {object}\n */\nEmoji.findByCode = function findByCode (code) {\n  var stripped = stripNSB(code);\n  var name = emojiByCode[stripped];\n\n  // lookup emoji to ensure the Variant Form is returned\n  return name ? ({ emoji: emojiByName[name], key: name }) : undefined;\n};\n\n\n/**\n * Check if an emoji is known by this library\n * @param {string} nameOrCode The emoji to validate, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\nEmoji.hasEmoji = function hasEmoji (nameOrCode) {\n  return Emoji.hasEmojiByName(nameOrCode) || Emoji.hasEmojiByCode(nameOrCode);\n};\n\n/**\n * Check if an emoji with given name is known by this library\n * @param {string} name The emoji to validate either `coffee` or `:coffee:`;\n * @return {object}\n */\nEmoji.hasEmojiByName = function hasEmojiByName (name) {\n  var result = Emoji.findByName(name);\n  return !!result && result.key === stripColons(name);\n};\n\n/**\n * Check if a given emoji is known by this library\n * @param {string} code The emoji to validate; for example `☕` or `☔`\n * @return {object}\n */\nEmoji.hasEmojiByCode = function hasEmojiByCode (code) {\n  var result = Emoji.findByCode(code);\n  return !!result && stripNSB(result.emoji) === stripNSB(code);\n};\n\n/**\n * get emoji name from code\n * @param  {string} emoji\n * @param  {boolean} includeColons should the result include the ::\n * @return {string}\n */\nEmoji.which = function which (emoji_code, includeColons) {\n  var code = stripNSB(emoji_code);\n  var word = emojiByCode[code];\n\n  return includeColons ? wrapColons(word) : word;\n};\n\n/**\n * emojify a string (replace :emoji: with an emoji)\n * @param  {string} str\n * @param  {function} on_missing (gets emoji name without :: and returns a proper emoji if no emoji was found)\n * @param  {function} format (wrap the returned emoji in a custom element)\n * @return {string}\n */\nEmoji.emojify = function emojify (str, on_missing, format) {\n  if (!str) return '';\n\n  return str.split(emojiNameRegex) // parse emoji via regex\n            .map(function parseEmoji(s, i) {\n              // every second element is an emoji, e.g. \"test :fast_forward:\" -> [ \"test \", \"fast_forward\" ]\n              if (i % 2 === 0) return s;\n              var emoji = Emoji._get(s);\n              var isMissing = emoji.indexOf(':') > -1;\n\n              if (isMissing && typeof on_missing === 'function') {\n                return on_missing(s);\n              }\n\n              if (!isMissing && typeof format === 'function') {\n                return format(emoji, s);\n              }\n\n              return emoji;\n            })\n            .join('') // convert back to string\n  ;\n};\n\n/**\n * return a random emoji\n * @return {string}\n */\nEmoji.random = function random () {\n  var emojiKeys = Object.keys(emojiByName);\n  var randomIndex = Math.floor(Math.random() * emojiKeys.length);\n  var key = emojiKeys[randomIndex];\n  var emoji = Emoji._get(key);\n  return { key: key, emoji: emoji };\n}\n\n/**\n *  return an collection of potential emoji matches\n *  @param {string} str\n *  @return {Array.<Object>}\n */\nEmoji.search = function search (str) {\n  var emojiKeys = Object.keys(emojiByName);\n  var matcher = stripColons(str)\n  var matchingKeys = emojiKeys.filter(function(key) {\n    return key.toString().indexOf(matcher) === 0;\n  });\n  return matchingKeys.map(function(key) {\n    return {\n      key: key,\n      emoji: Emoji._get(key),\n    };\n  });\n}\n\n/**\n * unemojify a string (replace emoji with :emoji:)\n * @param  {string} str\n * @return {string}\n */\nEmoji.unemojify = function unemojify (str) {\n  if (!str) return '';\n  var words = toArray(str);\n\n  return words.map(function(word) {\n    return Emoji.which(word, true) || word;\n  }).join('');\n};\n\n/**\n * replace emojis with replacement value\n * @param {string} str\n * @param {function|string} the string or callback function to replace the emoji with\n * @param {boolean} should trailing whitespaces be cleaned? Defaults false\n * @return {string}\n */\nEmoji.replace = function replace (str, replacement, cleanSpaces) {\n  if (!str) return '';\n\n  var replace = typeof replacement === 'function' ? replacement : function() { return replacement; };\n  var words = toArray(str);\n\n  var replaced = words.map(function(word, idx) {\n    var emoji = Emoji.findByCode(word);\n\n    if (emoji && cleanSpaces && words[idx + 1] === ' ') {\n      words[idx + 1] = '';\n    }\n\n    return emoji ? replace(emoji) : word;\n  }).join('');\n\n  return cleanSpaces ? replaced.replace(trimSpaceRegex, '') : replaced;\n};\n\n\n/**\n * remove all emojis from a string\n * @param {string} str\n * @return {string}\n */\nEmoji.strip = function strip (str) {\n  return Emoji.replace(str, '', true);\n};\n\nmodule.exports = Emoji;\n","import PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport React from 'react';\nimport objectAssign from 'object-assign';\n\nvar ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\",\n    TARGET: \"target\"\n};\n\nvar REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = \"data-react-helmet\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return Array.isArray(innermostTitle) ? innermostTitle.join(\"\") : innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === TAG_PROPERTIES.INNER_HTML || attributeKey === TAG_PROPERTIES.CSS_TEXT || attributeKey === TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = objectAssign({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF, TAG_PROPERTIES.TARGET], propsList),\n        bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(TAG_NAMES.LINK, [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(TAG_NAMES.META, [TAG_PROPERTIES.NAME, TAG_PROPERTIES.CHARSET, TAG_PROPERTIES.HTTPEQUIV, TAG_PROPERTIES.PROPERTY, TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(TAG_NAMES.SCRIPT, [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [React.createElement(TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === TAG_PROPERTIES.INNER_HTML || mappedAttribute === TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return React.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case ATTRIBUTE_NAMES.BODY:\n        case ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            classCallCheck(this, HelmetWrapper);\n            return possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !isEqual(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case TAG_NAMES.SCRIPT:\n                case TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _babelHelpers$extends;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_babelHelpers$extends = {}, _babelHelpers$extends[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _babelHelpers$extends));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _babelHelpers$extends2, _babelHelpers$extends3;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_babelHelpers$extends2 = {}, _babelHelpers$extends2[child.type] = nestedChildren, _babelHelpers$extends2.titleAttributes = _extends({}, newChildProps), _babelHelpers$extends2));\n\n                case TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_babelHelpers$extends3 = {}, _babelHelpers$extends3[child.type] = _extends({}, newChildProps), _babelHelpers$extends3));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _babelHelpers$extends4;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_babelHelpers$extends4 = {}, _babelHelpers$extends4[arrayChildName] = arrayTypeChildren[arrayChildName], _babelHelpers$extends4));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return warn(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return warn(\"Only elements types \" + VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            React.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = convertReactPropstoHtmlAttributes(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case TAG_NAMES.LINK:\n                    case TAG_NAMES.META:\n                    case TAG_NAMES.NOSCRIPT:\n                    case TAG_NAMES.SCRIPT:\n                    case TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return React.createElement(Component, newProps);\n        };\n\n        createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n             * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n             * @param {Object} bodyAttributes: {\"className\": \"root\"}\n             * @param {String} defaultTitle: \"Default Title\"\n             * @param {Boolean} defer: true\n             * @param {Boolean} encodeSpecialCharacters: true\n             * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n             * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n             * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n             * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n             * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n             * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n             * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n             * @param {String} title: \"Title\"\n             * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n             * @param {String} titleTemplate: \"MySite.com - %s\"\n             */\n            set: function set$$1(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n        return HelmetWrapper;\n    }(React.Component), _class.propTypes = {\n        base: PropTypes.object,\n        bodyAttributes: PropTypes.object,\n        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n        defaultTitle: PropTypes.string,\n        defer: PropTypes.bool,\n        encodeSpecialCharacters: PropTypes.bool,\n        htmlAttributes: PropTypes.object,\n        link: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.arrayOf(PropTypes.object),\n        noscript: PropTypes.arrayOf(PropTypes.object),\n        onChangeClientState: PropTypes.func,\n        script: PropTypes.arrayOf(PropTypes.object),\n        style: PropTypes.arrayOf(PropTypes.object),\n        title: PropTypes.string,\n        titleAttributes: PropTypes.object,\n        titleTemplate: PropTypes.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = mapStateOnServer({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = withSideEffect(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexport default HelmetExport;\nexport { HelmetExport as Helmet };\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect =\n    /*#__PURE__*/\n    function (_PureComponent) {\n      _inheritsLoose(SideEffect, _PureComponent);\n\n      function SideEffect() {\n        return _PureComponent.apply(this, arguments) || this;\n      }\n\n      // Try to use displayName of wrapped component\n      // Expose canUseDOM so tests can monkeypatch it\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      var _proto = SideEffect.prototype;\n\n      _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      _proto.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.PureComponent);\n\n    _defineProperty(SideEffect, \"displayName\", \"SideEffect(\" + getDisplayName(WrappedComponent) + \")\");\n\n    _defineProperty(SideEffect, \"canUseDOM\", canUseDOM);\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef Emoticon\n *   Info on an emoticon.\n * @property {string} name\n *   Name of an emoticon (preferred name from `wooorm/gemoji`).\n * @property {string} emoji\n *   Corresponding emoji.\n * @property {Array<string>} tags\n *   Associated tags (from `wooorm/gemoji`).\n * @property {string} description\n *   Associated description (from `wooorm/gemoji`).\n * @property {Array<string>} emoticons\n *   ASCII emoticons.\n */\n\n/**\n * List of emoticons.\n *\n * @type {Array<Emoticon>}\n */\nexport const emoticon = [\n  {\n    name: 'angry',\n    emoji: '😠',\n    tags: ['mad', 'annoyed'],\n    description: 'angry face',\n    emoticons: ['>:(', '>:[', '>:-(', '>:-[', '>=(', '>=[', '>=-(', '>=-[']\n  },\n  {\n    name: 'blush',\n    emoji: '😊',\n    tags: ['proud'],\n    description: 'smiling face with smiling eyes',\n    emoticons: [\n      ':\")',\n      ':\"]',\n      ':\"D',\n      ':-\")',\n      ':-\"]',\n      ':-\"D',\n      '=\")',\n      '=\"]',\n      '=\"D',\n      '=-\")',\n      '=-\"]',\n      '=-\"D'\n    ]\n  },\n  {\n    name: 'broken_heart',\n    emoji: '💔',\n    tags: [],\n    description: 'broken heart',\n    emoticons: ['<\\\\3', '</3']\n  },\n  {\n    name: 'confused',\n    emoji: '😕',\n    tags: [],\n    description: 'confused face',\n    emoticons: [':/', ':\\\\', ':-/', ':-\\\\', '=/', '=\\\\', '=-/', '=-\\\\']\n  },\n  {\n    name: 'cry',\n    emoji: '😢',\n    tags: ['sad', 'tear'],\n    description: 'crying face',\n    emoticons: [\n      ':,(',\n      ':,[',\n      ':,|',\n      ':,-(',\n      ':,-[',\n      ':,-|',\n      \":'(\",\n      \":'[\",\n      \":'|\",\n      \":'-(\",\n      \":'-[\",\n      \":'-|\",\n      '=,(',\n      '=,[',\n      '=,|',\n      '=,-(',\n      '=,-[',\n      '=,-|',\n      \"='(\",\n      \"='[\",\n      \"='|\",\n      \"='-(\",\n      \"='-[\",\n      \"='-|\"\n    ]\n  },\n  {\n    name: 'frowning',\n    emoji: '😦',\n    tags: [],\n    description: 'frowning face with open mouth',\n    emoticons: [':(', ':[', ':-(', ':-[', '=(', '=[', '=-(', '=-[']\n  },\n  {\n    name: 'heart',\n    emoji: '❤️',\n    tags: ['love'],\n    description: 'red heart',\n    emoticons: ['<3']\n  },\n  {\n    name: 'imp',\n    emoji: '👿',\n    tags: ['angry', 'devil', 'evil', 'horns'],\n    description: 'angry face with horns',\n    emoticons: [']:(', ']:[', ']:-(', ']:-[', ']=(', ']=[', ']=-(', ']=-[']\n  },\n  {\n    name: 'innocent',\n    emoji: '😇',\n    tags: ['angel'],\n    description: 'smiling face with halo',\n    emoticons: [\n      'o:)',\n      'o:]',\n      'o:D',\n      'o:-)',\n      'o:-]',\n      'o:-D',\n      'o=)',\n      'o=]',\n      'o=D',\n      'o=-)',\n      'o=-]',\n      'o=-D',\n      'O:)',\n      'O:]',\n      'O:D',\n      'O:-)',\n      'O:-]',\n      'O:-D',\n      'O=)',\n      'O=]',\n      'O=D',\n      'O=-)',\n      'O=-]',\n      'O=-D',\n      '0:)',\n      '0:]',\n      '0:D',\n      '0:-)',\n      '0:-]',\n      '0:-D',\n      '0=)',\n      '0=]',\n      '0=D',\n      '0=-)',\n      '0=-]',\n      '0=-D'\n    ]\n  },\n  {\n    name: 'joy',\n    emoji: '😂',\n    tags: ['tears'],\n    description: 'face with tears of joy',\n    emoticons: [\n      ':,)',\n      ':,]',\n      ':,D',\n      ':,-)',\n      ':,-]',\n      ':,-D',\n      \":')\",\n      \":']\",\n      \":'D\",\n      \":'-)\",\n      \":'-]\",\n      \":'-D\",\n      '=,)',\n      '=,]',\n      '=,D',\n      '=,-)',\n      '=,-]',\n      '=,-D',\n      \"=')\",\n      \"=']\",\n      \"='D\",\n      \"='-)\",\n      \"='-]\",\n      \"='-D\"\n    ]\n  },\n  {\n    name: 'kissing',\n    emoji: '😗',\n    tags: [],\n    description: 'kissing face',\n    emoticons: [':*', ':-*', '=*', '=-*']\n  },\n  {\n    name: 'laughing',\n    emoji: '😆',\n    tags: ['happy', 'haha'],\n    description: 'grinning squinting face',\n    emoticons: [\n      'x)',\n      'x]',\n      'xD',\n      'x-)',\n      'x-]',\n      'x-D',\n      'X)',\n      'X]',\n      'X-)',\n      'X-]',\n      'X-D'\n    ]\n  },\n  {\n    name: 'man',\n    emoji: '👨',\n    tags: ['mustache', 'father', 'dad'],\n    description: 'man',\n    emoticons: [':3', ':-3', '=3', '=-3', ';3', ';-3', 'x3', 'x-3', 'X3', 'X-3']\n  },\n  {\n    name: 'neutral_face',\n    emoji: '😐',\n    tags: ['meh'],\n    description: 'neutral face',\n    emoticons: [':|', ':-|', '=|', '=-|']\n  },\n  {\n    name: 'no_mouth',\n    emoji: '😶',\n    tags: ['mute', 'silence'],\n    description: 'face without mouth',\n    emoticons: [':-']\n  },\n  {\n    name: 'open_mouth',\n    emoji: '😮',\n    tags: ['surprise', 'impressed', 'wow'],\n    description: 'face with open mouth',\n    emoticons: [\n      ':o',\n      ':O',\n      ':0',\n      ':-o',\n      ':-O',\n      ':-0',\n      '=o',\n      '=O',\n      '=0',\n      '=-o',\n      '=-O',\n      '=-0'\n    ]\n  },\n  {\n    name: 'rage',\n    emoji: '😡',\n    tags: ['angry'],\n    description: 'pouting face',\n    emoticons: [':@', ':-@', '=@', '=-@']\n  },\n  {\n    name: 'smile',\n    emoji: '😄',\n    tags: ['happy', 'joy', 'laugh', 'pleased'],\n    description: 'grinning face with smiling eyes',\n    emoticons: [':D', ':-D', '=D', '=-D']\n  },\n  {\n    name: 'smiley',\n    emoji: '😃',\n    tags: ['happy', 'joy', 'haha'],\n    description: 'grinning face with big eyes',\n    emoticons: [':)', ':]', ':-)', ':-]', '=)', '=]', '=-)', '=-]']\n  },\n  {\n    name: 'smiling_imp',\n    emoji: '😈',\n    tags: ['devil', 'evil', 'horns'],\n    description: 'smiling face with horns',\n    emoticons: [\n      ']:)',\n      ']:]',\n      ']:D',\n      ']:-)',\n      ']:-]',\n      ']:-D',\n      ']=)',\n      ']=]',\n      ']=D',\n      ']=-)',\n      ']=-]',\n      ']=-D'\n    ]\n  },\n  {\n    name: 'sob',\n    emoji: '😭',\n    tags: ['sad', 'cry', 'bawling'],\n    description: 'loudly crying face',\n    emoticons: [\n      \":,'(\",\n      \":,'[\",\n      \":,'-(\",\n      \":,'-[\",\n      \":',(\",\n      \":',[\",\n      \":',-(\",\n      \":',-[\",\n      \"=,'(\",\n      \"=,'[\",\n      \"=,'-(\",\n      \"=,'-[\",\n      \"=',(\",\n      \"=',[\",\n      \"=',-(\",\n      \"=',-[\"\n    ]\n  },\n  {\n    name: 'stuck_out_tongue',\n    emoji: '😛',\n    tags: [],\n    description: 'face with tongue',\n    emoticons: [\n      ':p',\n      ':P',\n      ':d',\n      ':-p',\n      ':-P',\n      ':-d',\n      '=p',\n      '=P',\n      '=d',\n      '=-p',\n      '=-P',\n      '=-d'\n    ]\n  },\n  {\n    name: 'stuck_out_tongue_closed_eyes',\n    emoji: '😝',\n    tags: ['prank'],\n    description: 'squinting face with tongue',\n    emoticons: ['xP', 'x-p', 'x-P', 'x-d', 'Xp', 'Xd', 'X-p', 'X-P', 'X-d']\n  },\n  {\n    name: 'stuck_out_tongue_winking_eye',\n    emoji: '😜',\n    tags: ['prank', 'silly'],\n    description: 'winking face with tongue',\n    emoticons: [';p', ';P', ';d', ';-p', ';-P', ';-d']\n  },\n  {\n    name: 'sunglasses',\n    emoji: '😎',\n    tags: ['cool'],\n    description: 'smiling face with sunglasses',\n    emoticons: [\n      '8)',\n      '8]',\n      '8D',\n      '8-)',\n      '8-]',\n      '8-D',\n      'B)',\n      'B]',\n      'B-)',\n      'B-]',\n      'B-D'\n    ]\n  },\n  {\n    name: 'sweat',\n    emoji: '😓',\n    tags: [],\n    description: 'downcast face with sweat',\n    emoticons: [\n      ',:(',\n      ',:[',\n      ',:-(',\n      ',:-[',\n      ',=(',\n      ',=[',\n      ',=-(',\n      ',=-[',\n      \"':(\",\n      \"':[\",\n      \"':-(\",\n      \"':-[\",\n      \"'=(\",\n      \"'=[\",\n      \"'=-(\",\n      \"'=-[\"\n    ]\n  },\n  {\n    name: 'sweat_smile',\n    emoji: '😅',\n    tags: ['hot'],\n    description: 'grinning face with sweat',\n    emoticons: [\n      ',:)',\n      ',:]',\n      ',:D',\n      ',:-)',\n      ',:-]',\n      ',:-D',\n      ',=)',\n      ',=]',\n      ',=D',\n      ',=-)',\n      ',=-]',\n      ',=-D',\n      \"':)\",\n      \"':]\",\n      \"':D\",\n      \"':-)\",\n      \"':-]\",\n      \"':-D\",\n      \"'=)\",\n      \"'=]\",\n      \"'=D\",\n      \"'=-)\",\n      \"'=-]\",\n      \"'=-D\"\n    ]\n  },\n  {\n    name: 'unamused',\n    emoji: '😒',\n    tags: ['meh'],\n    description: 'unamused face',\n    emoticons: [\n      ':$',\n      ':s',\n      ':z',\n      ':S',\n      ':Z',\n      ':-$',\n      ':-s',\n      ':-z',\n      ':-S',\n      ':-Z',\n      '=$',\n      '=s',\n      '=z',\n      '=S',\n      '=Z',\n      '=-$',\n      '=-s',\n      '=-z',\n      '=-S',\n      '=-Z'\n    ]\n  },\n  {\n    name: 'wink',\n    emoji: '😉',\n    tags: ['flirt'],\n    description: 'winking face',\n    emoticons: [';)', ';]', ';D', ';-)', ';-]', ';-D']\n  }\n]\n","import { visit } from 'unist-util-visit';\nimport emoji from 'node-emoji';\nimport { emoticon } from 'emoticon';\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\nconst RE_UNDERSTORE = /_/g;\n\nconst DEFAULT_SETTINGS = {\n    padSpaceAfter: false,\n    emoticon: false,\n};\n\nexport default function plugin(options) {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n\n    function getEmojiByShortCode(match) {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-),\n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const trimmedChar = iconPart ? match.slice(-1) : '';\n        const addPad = pad ? ' ' : '';\n        let icon = iconFull ? iconFull.emoji + addPad : iconPart && iconPart.emoji + addPad + trimmedChar;\n        return icon || match;\n    }\n\n    function getEmoji(match) {\n        let got = emoji.get(match);\n\n        // Workaround for #19\n        if (match.endsWith('_man:') && got === match) {\n            // :foo_bar_man: -> man-foo-bar\n            const old = 'man-' + match.slice(1, -5).replace(RE_UNDERSTORE, '-');\n            const s = emoji.get(old);\n            if (s !== old) {\n                got = s;\n            }\n        } else if (match.endsWith('_woman:') && got === match) {\n            // :foo_bar_woman: -> woman-foo-bar\n            const old = 'woman-' + match.slice(1, -7).replace(RE_UNDERSTORE, '-');\n            const s = emoji.get(old);\n            if (s !== old) {\n                got = s;\n            }\n        }\n\n        if (pad && got !== match) {\n            return got + ' ';\n        }\n        return got;\n    }\n\n    function transformer(tree) {\n        visit(tree, 'text', function (node) {\n            node.value = node.value.replace(RE_EMOJI, getEmoji);\n            if (emoticonEnable) {\n                node.value = node.value.replace(RE_SHORT, getEmojiByShortCode);\n            }\n        });\n    }\n\n    return transformer;\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethroughs. So they sort of cancel each other out.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/c47743b/lib/unsafe.js#L11>\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","DataView","require","getNative","Map","Promise","Set","Symbol","WeakMap","baseTimes","isArguments","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","result","String","array","iteratee","index","string","split","getRawTag","objectToString","symToStringTag","toStringTag","undefined","baseGetTag","isObjectLike","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","reIsNative","RegExp","test","isLength","typedArrayTags","isPrototype","nativeKeys","object","n","func","arrayMap","props","coreJsData","freeGlobal","global","baseIsNative","getValue","nativeObjectToString","isOwn","tag","unmasked","e","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","Ctor","ctorString","reHasUnicode","reIsUint","maskSrcKey","uid","keys","IE_PROTO","iterator","data","next","done","map","size","forEach","overArg","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","binding","transform","arg","freeSelf","self","root","set","asciiToArray","hasUnicode","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","join","rsSymbol","reUnicode","baseIsArguments","propertyIsEnumerable","stubFalse","Buffer","baseIsTypedArray","baseUnary","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","copyArray","isString","iteratorToArray","mapToArray","setToArray","stringToArray","values","symIterator","baseValues","toArray","emojiByName","emojiNameRegex","trimSpaceRegex","stripColons","colonIndex","indexOf","substring","substr","wrapColons","NON_SPACING_MARK","fromCharCode","nonSpacingRegex","stripNSB","code","emojiByCode","reduce","h","k","Emoji","emoji","_get","get","find","nameOrCode","findByName","findByCode","stripped","hasEmoji","hasEmojiByName","hasEmojiByCode","which","emoji_code","includeColons","word","emojify","on_missing","format","s","isMissing","random","emojiKeys","Math","floor","search","matcher","filter","unemojify","replacement","cleanSpaces","words","replaced","idx","strip","ATTRIBUTE_NAMES","TAG_NAMES","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","TAG_PROPERTIES","REACT_TAG_MAP","accesskey","charset","class","contenteditable","contextmenu","itemprop","tabindex","HELMET_PROPS","HTML_TAG_MAP","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","_typeof","classCallCheck","instance","Constructor","createClass","defineProperties","descriptor","protoProps","staticProps","_extends","assign","objectWithoutProperties","possibleConstructorReturn","ReferenceError","encodeSpecialCharacters","encode","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","lowerCaseAttributeKey","toLowerCase","concat","getTagsFromPropsList","tagName","approvedSeenTags","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","tagUnion","objectAssign","rafPolyfill","clock","Date","now","callback","currentTime","setTimeout","cafPolyfill","id","clearTimeout","requestAnimationFrame","window","bind","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","console","_helmetCallback","commitTagChanges","newState","cb","baseTag","bodyAttributes","htmlAttributes","linkTags","metaTags","noscriptTags","onChangeClientState","scriptTags","styleTags","title","titleAttributes","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","attributes","document","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","splice","_i","removeAttribute","tags","headElement","head","querySelector","tagNodes","querySelectorAll","indexToDelete","newElement","createElement","innerHTML","styleSheet","cssText","appendChild","createTextNode","some","existingTag","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","attr","convertElementAttributestoReactProps","initProps","getMethodsForTag","toComponent","_initProps","React","generateTitleAsReactComponent","attributeString","flattenedTitle","generateTitleAsString","_mappedTag","mappedTag","mappedAttribute","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","tagContent","isSelfClosing","generateTagsAsString","mapStateOnServer","_ref","_ref$title","base","link","meta","noscript","script","HelmetExport","Component","_class","_temp","_React$Component","HelmetWrapper","apply","subClass","superClass","create","setPrototypeOf","__proto__","inherits","shouldComponentUpdate","nextProps","isEqual","mapNestedChildrenToProps","child","nestedChildren","flattenArrayTypeChildren","_babelHelpers$extends","arrayTypeChildren","newChildProps","mapObjectTypeChildren","_ref2","_babelHelpers$extends2","_babelHelpers$extends3","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","_babelHelpers$extends4","warnOnInvalidChildren","mapChildrenToProps","children","_this2","_child$props","initAttributes","convertReactPropstoHtmlAttributes","render","_props","canUseDOM","propTypes","PropTypes","defaultTitle","defer","titleTemplate","defaultProps","peek","rewind","mappedState","Helmet","withSideEffect","renderStatic","u","b","for","d","f","g","l","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","ex","React__default","_defineProperty","reducePropsToState","handleStateChangeOnClient","WrappedComponent","state","mountedInstances","emitChange","SideEffect","_PureComponent","recordedState","_proto","UNSAFE_componentWillMount","componentDidUpdate","componentWillUnmount","PureComponent","displayName","getDisplayName","parse","output","hasIterator","len","_objectDestructuringEmpty","element","decodeNamedCharacterReference","characterReference","char","textContent","charCodeAt","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","Number","POSITIVE_INFINITY","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","list","remove","items","parameters","chunkStart","from","unshift","classifyCharacter","combineExtensions","extensions","all","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","hex","normalizeIdentifier","toUpperCase","resolveAll","events","context","called","includes","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","_wrapNativeSuper","_cache","fn","has","Wrapper","getPrototypeOf","stringifyPosition","point","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","history","stored","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","wrap","middleware","fnExpectsCallback","exception","then","unified","frozen","transformers","fns","pipeline","run","middlewareIndex","pop","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","settings","addPlugin","addList","addPreset","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","tree","runSync","complete","assertDone","processSync","destination","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","fromMarkdown","config","configure","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","lastIndex","ceil","preprocess","combined","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","properties","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","visit","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","DefinedInfo","mask","mark","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","uri","first","colon","emoticon","description","emoticons","RE_EMOJI","RE_SHORT","RE_UNDERSTORE","DEFAULT_SETTINGS","padSpaceAfter","pad","emoticonEnable","getEmojiByShortCode","iconFull","iconPart","trimmedChar","addPad","getEmoji","got","endsWith","old","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","ignored","convert","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","visitor","parents","grandparent","change","matchObject","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","whole","gfmFootnoteToMarkdown","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","castFactory","typeFactory","anyFactory","propsFactory","tests","subresult","grandparents","toResult"],"sourceRoot":""}