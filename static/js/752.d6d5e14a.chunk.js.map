{"version":3,"file":"static/js/752.d6d5e14a.chunk.js","mappings":";qGAEA,IAAIA,EAASC,OAAOC,UAAUC,eAC1BC,EAAQH,OAAOC,UAAUG,SACzBC,EAAiBL,OAAOK,eACxBC,EAAON,OAAOO,yBAEdC,EAAU,SAAiBC,GAC9B,MAA6B,oBAAlBC,MAAMF,QACTE,MAAMF,QAAQC,GAGK,mBAApBN,EAAMQ,KAAKF,EACnB,EAEIG,EAAgB,SAAuBC,GAC1C,IAAKA,GAA2B,oBAApBV,EAAMQ,KAAKE,GACtB,OAAO,EAGR,IASIC,EATAC,EAAoBhB,EAAOY,KAAKE,EAAK,eACrCG,EAAmBH,EAAII,aAAeJ,EAAII,YAAYhB,WAAaF,EAAOY,KAAKE,EAAII,YAAYhB,UAAW,iBAE9G,GAAIY,EAAII,cAAgBF,IAAsBC,EAC7C,OAAO,EAMR,IAAKF,KAAOD,GAEZ,MAAsB,qBAARC,GAAuBf,EAAOY,KAAKE,EAAKC,EACvD,EAGII,EAAc,SAAqBC,EAAQC,GAC1Cf,GAAmC,cAAjBe,EAAQC,KAC7BhB,EAAec,EAAQC,EAAQC,KAAM,CACpCC,YAAY,EACZC,cAAc,EACdC,MAAOJ,EAAQK,SACfC,UAAU,IAGXP,EAAOC,EAAQC,MAAQD,EAAQK,QAEjC,EAGIE,EAAc,SAAqBd,EAAKQ,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAKtB,EAAOY,KAAKE,EAAKQ,GACrB,OACM,GAAIf,EAGV,OAAOA,EAAKO,EAAKQ,GAAMG,KAEzB,CAEA,OAAOX,EAAIQ,EACZ,EAEAO,EAAOC,QAAU,SAASC,IACzB,IAAIV,EAASC,EAAMU,EAAKC,EAAMC,EAAaC,EACvCf,EAASgB,UAAU,GACnBC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,EAaX,IAVsB,mBAAXnB,IACVmB,EAAOnB,EACPA,EAASgB,UAAU,IAAM,CAAC,EAE1BC,EAAI,IAES,MAAVjB,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,CAAC,GAGJiB,EAAIC,IAAUD,EAGpB,GAAe,OAFfhB,EAAUe,UAAUC,IAInB,IAAKf,KAAQD,EACZW,EAAMJ,EAAYR,EAAQE,GAItBF,KAHJa,EAAOL,EAAYP,EAASC,MAKvBiB,GAAQN,IAASpB,EAAcoB,KAAUC,EAAczB,EAAQwB,MAC9DC,GACHA,GAAc,EACdC,EAAQH,GAAOvB,EAAQuB,GAAOA,EAAM,IAEpCG,EAAQH,GAAOnB,EAAcmB,GAAOA,EAAM,CAAC,EAI5Cb,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUK,EAAOQ,EAAMJ,EAAOF,MAGtC,qBAATA,GACjBd,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUO,KAQjD,OAAOb,CACR,oBClHA,IAAIoB,EAAgB,kCAEhBC,EAAgB,MAChBC,EAAmB,OAGnBC,EAAiB,yCACjBC,EAAc,QACdC,EAAc,uDACdC,EAAkB,UAGlBC,EAAa,aAGbC,EAAU,KACVC,EAAgB,IAChBC,EAAW,IACXC,EAAe,GAGfC,EAAe,UACfC,EAAmB,cA0OvB,SAASC,EAAKC,GACZ,OAAOA,EAAMA,EAAIC,QAAQT,EAAYI,GAAgBA,CACvD,CAnOAtB,EAAOC,QAAU,SAAS2B,EAAOpC,GAC/B,GAAqB,kBAAVoC,EACT,MAAM,IAAIC,UAAU,mCAGtB,IAAKD,EAAO,MAAO,GAEnBpC,EAAUA,GAAW,CAAC,EAKtB,IAAIsC,EAAS,EACTC,EAAS,EAOb,SAASC,EAAeN,GACtB,IAAIO,EAAQP,EAAIQ,MAAMtB,GAClBqB,IAAOH,GAAUG,EAAMxB,QAC3B,IAAID,EAAIkB,EAAIS,YAAYhB,GACxBY,GAAUvB,EAAIkB,EAAIjB,OAASD,EAAIuB,EAASL,EAAIjB,MAC9C,CAOA,SAAS2B,IACP,IAAIC,EAAQ,CAAEC,KAAMR,EAAQC,OAAQA,GACpC,OAAO,SAASQ,GAGd,OAFAA,EAAKH,SAAW,IAAII,EAASH,GAC7BI,IACOF,CACT,CACF,CAUA,SAASC,EAASH,GAChBK,KAAKL,MAAQA,EACbK,KAAKC,IAAM,CAAEL,KAAMR,EAAQC,OAAQA,GACnCW,KAAKE,OAASpD,EAAQoD,MACxB,CAKAJ,EAASnE,UAAUwE,QAAUjB,EAE7B,IAAIkB,EAAa,GAQjB,SAASC,EAAMC,GACb,IAAIC,EAAM,IAAIC,MACZ1D,EAAQoD,OAAS,IAAMd,EAAS,IAAMC,EAAS,KAAOiB,GAQxD,GANAC,EAAIE,OAASH,EACbC,EAAIG,SAAW5D,EAAQoD,OACvBK,EAAIX,KAAOR,EACXmB,EAAIlB,OAASA,EACbkB,EAAIL,OAAShB,GAETpC,EAAQ6D,OAGV,MAAMJ,EAFNH,EAAWQ,KAAKL,EAIpB,CAQA,SAASf,EAAMqB,GACb,IAAIC,EAAID,EAAGE,KAAK7B,GAChB,GAAK4B,EAAL,CACA,IAAI9B,EAAM8B,EAAE,GAGZ,OAFAxB,EAAeN,GACfE,EAAQA,EAAM8B,MAAMhC,EAAIjB,QACjB+C,CAJO,CAKhB,CAKA,SAASf,IACPP,EAAMrB,EACR,CAQA,SAAS8C,EAASC,GAChB,IAAIC,EAEJ,IADAD,EAAQA,GAAS,GACTC,EAAIC,MACA,IAAND,GACFD,EAAMN,KAAKO,GAGf,OAAOD,CACT,CAQA,SAASE,IACP,IAAIC,EAAM3B,IACV,GAAIhB,GAAiBQ,EAAMoC,OAAO,IAAM3C,GAAYO,EAAMoC,OAAO,GAAjE,CAGA,IADA,IAAIxD,EAAI,EAENc,GAAgBM,EAAMoC,OAAOxD,KAC5Ba,GAAYO,EAAMoC,OAAOxD,IAAMY,GAAiBQ,EAAMoC,OAAOxD,EAAI,OAEhEA,EAIJ,GAFAA,GAAK,EAEDc,IAAiBM,EAAMoC,OAAOxD,EAAI,GACpC,OAAOuC,EAAM,0BAGf,IAAIrB,EAAME,EAAM8B,MAAM,EAAGlD,EAAI,GAM7B,OALAuB,GAAU,EACVC,EAAeN,GACfE,EAAQA,EAAM8B,MAAMlD,GACpBuB,GAAU,EAEHgC,EAAI,CACTE,KAAM1C,EACNuC,QAASpC,GAvBgE,CAyB7E,CAQA,SAASwC,IACP,IAAIH,EAAM3B,IAGN+B,EAAOjC,EAAMpB,GACjB,GAAKqD,EAAL,CAIA,GAHAL,KAGK5B,EAAMnB,GAAc,OAAOgC,EAAM,wBAGtC,IAAIqB,EAAMlC,EAAMlB,GAEZqD,EAAMN,EAAI,CACZE,KAAMzC,EACN8C,SAAU7C,EAAK0C,EAAK,GAAGxC,QAAQhB,EAAeW,IAC9C1B,MAAOwE,EACH3C,EAAK2C,EAAI,GAAGzC,QAAQhB,EAAeW,IACnCA,IAMN,OAFAY,EAAMjB,GAECoD,CApBU,CAqBnB,CAyBA,OADA5B,IAjBA,WACE,IAKI8B,EALAC,EAAQ,GAMZ,IAJAb,EAASa,GAIDD,EAAOL,MACA,IAATK,IACFC,EAAMlB,KAAKiB,GACXZ,EAASa,IAIb,OAAOA,CACT,CAGOC,EACT,oBCnPAzE,EAAOC,QAAU,SAAmBhB,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAII,aACY,oBAA7BJ,EAAII,YAAYqF,UAA2BzF,EAAII,YAAYqF,SAASzF,EAC/E,uBCVA,IAII0F,EAJYC,EAAQ,KAITC,CAHJD,EAAQ,MAGY,YAE/B5E,EAAOC,QAAU0E,wBCNjB,IAIIG,EAJYF,EAAQ,KAIdC,CAHCD,EAAQ,MAGO,OAE1B5E,EAAOC,QAAU6E,wBCNjB,IAIIC,EAJYH,EAAQ,KAIVC,CAHHD,EAAQ,MAGW,WAE9B5E,EAAOC,QAAU8E,wBCNjB,IAIIC,EAJYJ,EAAQ,KAIdC,CAHCD,EAAQ,MAGO,OAE1B5E,EAAOC,QAAU+E,wBCNjB,IAGIC,EAHOL,EAAQ,MAGDK,OAElBjF,EAAOC,QAAUgF,wBCLjB,IAIIC,EAJYN,EAAQ,KAIVC,CAHHD,EAAQ,MAGW,WAE9B5E,EAAOC,QAAUiF,wBCNjB,IAAIC,EAAYP,EAAQ,MACpBQ,EAAcR,EAAQ,MACtBhG,EAAUgG,EAAQ,MAClBF,EAAWE,EAAQ,MACnBS,EAAUT,EAAQ,MAClBU,EAAeV,EAAQ,MAMvBtG,EAHcF,OAAOC,UAGQC,eAqCjC0B,EAAOC,QA3BP,SAAuBL,EAAO2F,GAC5B,IAAIC,EAAQ5G,EAAQgB,GAChB6F,GAASD,GAASJ,EAAYxF,GAC9B8F,GAAUF,IAAUC,GAASf,EAAS9E,GACtC+F,GAAUH,IAAUC,IAAUC,GAAUJ,EAAa1F,GACrDgG,EAAcJ,GAASC,GAASC,GAAUC,EAC1CE,EAASD,EAAcT,EAAUvF,EAAMa,OAAQqF,QAAU,GACzDrF,EAASoF,EAAOpF,OAEpB,IAAK,IAAIvB,KAAOU,GACT2F,IAAajH,EAAeS,KAAKa,EAAOV,IACvC0G,IAEQ,UAAP1G,GAECwG,IAAkB,UAAPxG,GAA0B,UAAPA,IAE9ByG,IAAkB,UAAPzG,GAA0B,cAAPA,GAA8B,cAAPA,IAEtDmG,EAAQnG,EAAKuB,KAElBoF,EAAOvC,KAAKpE,GAGhB,OAAO2G,CACT,oBC1BA7F,EAAOC,QAXP,SAAkB8F,EAAOC,GAKvB,IAJA,IAAIC,GAAS,EACTxF,EAAkB,MAATsF,EAAgB,EAAIA,EAAMtF,OACnCoF,EAAS/G,MAAM2B,KAEVwF,EAAQxF,GACfoF,EAAOI,GAASD,EAASD,EAAME,GAAQA,EAAOF,GAEhD,OAAOF,CACT,oBCPA7F,EAAOC,QAJP,SAAsBiG,GACpB,OAAOA,EAAOC,MAAM,GACtB,wBCTA,IAAIlB,EAASL,EAAQ,MACjBwB,EAAYxB,EAAQ,MACpByB,EAAiBzB,EAAQ,MAGzB0B,EAAU,gBACVC,EAAe,qBAGfC,EAAiBvB,EAASA,EAAOwB,iBAAcC,EAkBnD1G,EAAOC,QATP,SAAoBL,GAClB,OAAa,MAATA,OACe8G,IAAV9G,EAAsB2G,EAAeD,EAEtCE,GAAkBA,KAAkBpI,OAAOwB,GAC/CwG,EAAUxG,GACVyG,EAAezG,EACrB,wBCzBA,IAAI+G,EAAa/B,EAAQ,MACrBgC,EAAehC,EAAQ,MAGvBiC,EAAU,qBAad7G,EAAOC,QAJP,SAAyBL,GACvB,OAAOgH,EAAahH,IAAU+G,EAAW/G,IAAUiH,CACrD,wBCfA,IAAIC,EAAalC,EAAQ,MACrBmC,EAAWnC,EAAQ,KACnBoC,EAAWpC,EAAQ,MACnBqC,EAAWrC,EAAQ,MASnBsC,EAAe,8BAGfC,EAAYC,SAAS/I,UACrBgJ,EAAcjJ,OAAOC,UAGrBiJ,EAAeH,EAAU3I,SAGzBF,EAAiB+I,EAAY/I,eAG7BiJ,EAAaC,OAAO,IACtBF,EAAavI,KAAKT,GAAgBqD,QAjBjB,sBAiBuC,QACvDA,QAAQ,yDAA0D,SAAW,KAmBhF3B,EAAOC,QARP,SAAsBL,GACpB,SAAKoH,EAASpH,IAAUmH,EAASnH,MAGnBkH,EAAWlH,GAAS2H,EAAaL,GAChCO,KAAKR,EAASrH,GAC/B,wBC5CA,IAAI+G,EAAa/B,EAAQ,MACrB8C,EAAW9C,EAAQ,MACnBgC,EAAehC,EAAQ,MA8BvB+C,EAAiB,CAAC,EACtBA,EAZiB,yBAYYA,EAXZ,yBAYjBA,EAXc,sBAWYA,EAVX,uBAWfA,EAVe,uBAUYA,EATZ,uBAUfA,EATsB,8BASYA,EARlB,wBAShBA,EARgB,yBAQY,EAC5BA,EAjCc,sBAiCYA,EAhCX,kBAiCfA,EApBqB,wBAoBYA,EAhCnB,oBAiCdA,EApBkB,qBAoBYA,EAhChB,iBAiCdA,EAhCe,kBAgCYA,EA/Bb,qBAgCdA,EA/Ba,gBA+BYA,EA9BT,mBA+BhBA,EA9BgB,mBA8BYA,EA7BZ,mBA8BhBA,EA7Ba,gBA6BYA,EA5BT,mBA6BhBA,EA5BiB,qBA4BY,EAc7B3H,EAAOC,QALP,SAA0BL,GACxB,OAAOgH,EAAahH,IAClB8H,EAAS9H,EAAMa,WAAakH,EAAehB,EAAW/G,GAC1D,wBCzDA,IAAIgI,EAAchD,EAAQ,MACtBiD,EAAajD,EAAQ,MAMrBtG,EAHcF,OAAOC,UAGQC,eAsBjC0B,EAAOC,QAbP,SAAkB6H,GAChB,IAAKF,EAAYE,GACf,OAAOD,EAAWC,GAEpB,IAAIjC,EAAS,GACb,IAAK,IAAI3G,KAAOd,OAAO0J,GACjBxJ,EAAeS,KAAK+I,EAAQ5I,IAAe,eAAPA,GACtC2G,EAAOvC,KAAKpE,GAGhB,OAAO2G,CACT,oBCRA7F,EAAOC,QAVP,SAAmB8H,EAAG/B,GAIpB,IAHA,IAAIC,GAAS,EACTJ,EAAS/G,MAAMiJ,KAEV9B,EAAQ8B,GACflC,EAAOI,GAASD,EAASC,GAE3B,OAAOJ,CACT,oBCJA7F,EAAOC,QANP,SAAmB+H,GACjB,OAAO,SAASpI,GACd,OAAOoI,EAAKpI,EACd,CACF,wBCXA,IAAIqI,EAAWrD,EAAQ,MAkBvB5E,EAAOC,QANP,SAAoB6H,EAAQI,GAC1B,OAAOD,EAASC,GAAO,SAAShJ,GAC9B,OAAO4I,EAAO5I,EAChB,GACF,mBCGAc,EAAOC,QAXP,SAAmB2C,EAAQmD,GACzB,IAAIE,GAAS,EACTxF,EAASmC,EAAOnC,OAGpB,IADAsF,IAAUA,EAAQjH,MAAM2B,MACfwF,EAAQxF,GACfsF,EAAME,GAASrD,EAAOqD,GAExB,OAAOF,CACT,wBCjBA,IAGIoC,EAHOvD,EAAQ,MAGG,sBAEtB5E,EAAOC,QAAUkI,wBCJjB,IAAIC,EAA8B,iBAAVC,EAAAA,GAAsBA,EAAAA,GAAUA,EAAAA,EAAOjK,SAAWA,QAAUiK,EAAAA,EAEpFrI,EAAOC,QAAUmI,wBCHjB,IAAIE,EAAe1D,EAAQ,MACvB2D,EAAW3D,EAAQ,IAevB5E,EAAOC,QALP,SAAmB6H,EAAQ5I,GACzB,IAAIU,EAAQ2I,EAAST,EAAQ5I,GAC7B,OAAOoJ,EAAa1I,GAASA,OAAQ8G,CACvC,wBCdA,IAAIzB,EAASL,EAAQ,MAGjByC,EAAcjJ,OAAOC,UAGrBC,EAAiB+I,EAAY/I,eAO7BkK,EAAuBnB,EAAY7I,SAGnCgI,EAAiBvB,EAASA,EAAOwB,iBAAcC,EA6BnD1G,EAAOC,QApBP,SAAmBL,GACjB,IAAI6I,EAAQnK,EAAeS,KAAKa,EAAO4G,GACnCkC,EAAM9I,EAAM4G,GAEhB,IACE5G,EAAM4G,QAAkBE,EACxB,IAAIiC,GAAW,CACJ,CAAX,MAAOC,GAAI,CAEb,IAAI/C,EAAS2C,EAAqBzJ,KAAKa,GAQvC,OAPI+I,IACEF,EACF7I,EAAM4G,GAAkBkC,SAEjB9I,EAAM4G,IAGVX,CACT,wBC3CA,IAAIlB,EAAWC,EAAQ,KACnBE,EAAMF,EAAQ,MACdG,EAAUH,EAAQ,MAClBI,EAAMJ,EAAQ,MACdM,EAAUN,EAAQ,MAClB+B,EAAa/B,EAAQ,MACrBqC,EAAWrC,EAAQ,MAGnBiE,EAAS,eAETC,EAAa,mBACbC,EAAS,eACTC,EAAa,mBAEbC,EAAc,oBAGdC,EAAqBjC,EAAStC,GAC9BwE,EAAgBlC,EAASnC,GACzBsE,EAAoBnC,EAASlC,GAC7BsE,EAAgBpC,EAASjC,GACzBsE,EAAoBrC,EAAS/B,GAS7BqE,EAAS5C,GAGRhC,GAAY4E,EAAO,IAAI5E,EAAS,IAAI6E,YAAY,MAAQP,GACxDnE,GAAOyE,EAAO,IAAIzE,IAAQ+D,GAC1B9D,GAAWwE,EAAOxE,EAAQ0E,YAAcX,GACxC9D,GAAOuE,EAAO,IAAIvE,IAAQ+D,GAC1B7D,GAAWqE,EAAO,IAAIrE,IAAY8D,KACrCO,EAAS,SAAS3J,GAChB,IAAIiG,EAASc,EAAW/G,GACpB8J,EA/BQ,mBA+BD7D,EAAsBjG,EAAMP,iBAAcqH,EACjDiD,EAAaD,EAAOzC,EAASyC,GAAQ,GAEzC,GAAIC,EACF,OAAQA,GACN,KAAKT,EAAoB,OAAOD,EAChC,KAAKE,EAAe,OAAON,EAC3B,KAAKO,EAAmB,OAAON,EAC/B,KAAKO,EAAe,OAAON,EAC3B,KAAKO,EAAmB,OAAON,EAGnC,OAAOnD,CACT,GAGF7F,EAAOC,QAAUsJ,kBC7CjBvJ,EAAOC,QAJP,SAAkB6H,EAAQ5I,GACxB,OAAiB,MAAV4I,OAAiBpB,EAAYoB,EAAO5I,EAC7C,oBCTA,IAWI0K,EAAepC,OAAO,uFAa1BxH,EAAOC,QAJP,SAAoBiG,GAClB,OAAO0D,EAAanC,KAAKvB,EAC3B,oBCtBA,IAAI2D,EAAmB,iBAGnBC,EAAW,mBAoBf9J,EAAOC,QAVP,SAAiBL,EAAOa,GACtB,IAAIwD,SAAcrE,EAGlB,SAFAa,EAAmB,MAAVA,EAAiBoJ,EAAmBpJ,KAGlC,UAARwD,GACU,UAARA,GAAoB6F,EAASrC,KAAK7H,KAChCA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQa,CACjD,uBCtBA,IAAI0H,EAAavD,EAAQ,MAGrBmF,EAAc,WAChB,IAAIC,EAAM,SAASvG,KAAK0E,GAAcA,EAAW8B,MAAQ9B,EAAW8B,KAAKC,UAAY,IACrF,OAAOF,EAAO,iBAAmBA,EAAO,EAC1C,CAHkB,GAgBlBhK,EAAOC,QAJP,SAAkB+H,GAChB,QAAS+B,GAAeA,KAAc/B,CACxC,oBChBA,IAAIX,EAAcjJ,OAAOC,UAgBzB2B,EAAOC,QAPP,SAAqBL,GACnB,IAAI8J,EAAO9J,GAASA,EAAMP,YAG1B,OAAOO,KAFqB,mBAAR8J,GAAsBA,EAAKrL,WAAcgJ,EAG/D,oBCEArH,EAAOC,QAVP,SAAyBkK,GAIvB,IAHA,IAAIC,EACAvE,EAAS,KAEJuE,EAAOD,EAASE,QAAQC,MAC/BzE,EAAOvC,KAAK8G,EAAKxK,OAEnB,OAAOiG,CACT,mBCEA7F,EAAOC,QAVP,SAAoBsK,GAClB,IAAItE,GAAS,EACTJ,EAAS/G,MAAMyL,EAAIC,MAKvB,OAHAD,EAAIE,SAAQ,SAAS7K,EAAOV,GAC1B2G,IAASI,GAAS,CAAC/G,EAAKU,EAC1B,IACOiG,CACT,wBCfA,IAGIgC,EAHUjD,EAAQ,KAGL8F,CAAQtM,OAAO6L,KAAM7L,QAEtC4B,EAAOC,QAAU4H,mCCLjB,IAAIO,EAAaxD,EAAQ,MAGrB+F,EAA4C1K,IAAYA,EAAQ2K,UAAY3K,EAG5E4K,EAAaF,GAA4C3K,IAAWA,EAAO4K,UAAY5K,EAMvF8K,EAHgBD,GAAcA,EAAW5K,UAAY0K,GAGtBvC,EAAW2C,QAG1CC,EAAY,WACd,IAEE,IAAIC,EAAQJ,GAAcA,EAAWjG,SAAWiG,EAAWjG,QAAQ,QAAQqG,MAE3E,OAAIA,GAKGH,GAAeA,EAAYI,SAAWJ,EAAYI,QAAQ,OACtD,CAAX,MAAOtC,GAAI,CACf,CAZgB,GAchB5I,EAAOC,QAAU+K,oBC5BjB,IAOIxC,EAPcpK,OAAOC,UAOcG,SAavCwB,EAAOC,QAJP,SAAwBL,GACtB,OAAO4I,EAAqBzJ,KAAKa,EACnC,oBCLAI,EAAOC,QANP,SAAiB+H,EAAMmD,GACrB,OAAO,SAASC,GACd,OAAOpD,EAAKmD,EAAUC,GACxB,CACF,wBCZA,IAAIhD,EAAaxD,EAAQ,MAGrByG,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKlN,SAAWA,QAAUkN,KAGxEC,EAAOnD,GAAciD,GAAYjE,SAAS,cAATA,GAErCpH,EAAOC,QAAUsL,oBCSjBvL,EAAOC,QAVP,SAAoBuL,GAClB,IAAIvF,GAAS,EACTJ,EAAS/G,MAAM0M,EAAIhB,MAKvB,OAHAgB,EAAIf,SAAQ,SAAS7K,GACnBiG,IAASI,GAASrG,CACpB,IACOiG,CACT,wBCfA,IAAI4F,EAAe7G,EAAQ,MACvB8G,EAAa9G,EAAQ,MACrB+G,EAAiB/G,EAAQ,MAe7B5E,EAAOC,QANP,SAAuBiG,GACrB,OAAOwF,EAAWxF,GACdyF,EAAezF,GACfuF,EAAavF,EACnB,oBCdA,IAGIoB,EAHYF,SAAS/I,UAGIG,SAqB7BwB,EAAOC,QAZP,SAAkB+H,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOV,EAAavI,KAAKiJ,EACd,CAAX,MAAOY,GAAI,CACb,IACE,OAAQZ,EAAO,EACJ,CAAX,MAAOY,GAAI,CACf,CACA,MAAO,EACT,oBCtBA,IAAIgD,EAAgB,kBAQhBC,EAAW,IAAMD,EAAgB,IACjCE,EAAU,kDACVC,EAAS,2BAETC,EAAc,KAAOJ,EAAgB,IACrCK,EAAa,kCACbC,EAAa,qCAIbC,EAPa,MAAQL,EAAU,IAAMC,EAAS,IAOtB,IACxBK,EAAW,oBAEXC,EAAQD,EAAWD,GADP,gBAAwB,CAACH,EAAaC,EAAYC,GAAYI,KAAK,KAAO,IAAMF,EAAWD,EAAW,MAElHI,EAAW,MAAQ,CAACP,EAAcF,EAAU,IAAKA,EAASG,EAAYC,EAAYL,GAAUS,KAAK,KAAO,IAGxGE,EAAYhF,OAAOuE,EAAS,MAAQA,EAAS,KAAOQ,EAAWF,EAAO,KAa1ErM,EAAOC,QAJP,SAAwBiG,GACtB,OAAOA,EAAOhE,MAAMsK,IAAc,EACpC,wBCrCA,IAAIC,EAAkB7H,EAAQ,MAC1BgC,EAAehC,EAAQ,MAGvByC,EAAcjJ,OAAOC,UAGrBC,EAAiB+I,EAAY/I,eAG7BoO,EAAuBrF,EAAYqF,qBAoBnCtH,EAAcqH,EAAgB,WAAa,OAAOlM,SAAW,CAA/B,IAAsCkM,EAAkB,SAAS7M,GACjG,OAAOgH,EAAahH,IAAUtB,EAAeS,KAAKa,EAAO,YACtD8M,EAAqB3N,KAAKa,EAAO,SACtC,EAEAI,EAAOC,QAAUmF,oBCZjB,IAAIxG,EAAUE,MAAMF,QAEpBoB,EAAOC,QAAUrB,wBCzBjB,IAAIkI,EAAalC,EAAQ,MACrB8C,EAAW9C,EAAQ,MA+BvB5E,EAAOC,QAJP,SAAqBL,GACnB,OAAgB,MAATA,GAAiB8H,EAAS9H,EAAMa,UAAYqG,EAAWlH,EAChE,mCC9BA,IAAI2L,EAAO3G,EAAQ,MACf+H,EAAY/H,EAAQ,MAGpB+F,EAA4C1K,IAAYA,EAAQ2K,UAAY3K,EAG5E4K,EAAaF,GAA4C3K,IAAWA,EAAO4K,UAAY5K,EAMvF4M,EAHgB/B,GAAcA,EAAW5K,UAAY0K,EAG5BY,EAAKqB,YAASlG,EAsBvChC,GAnBiBkI,EAASA,EAAOlI,cAAWgC,IAmBfiG,EAEjC3M,EAAOC,QAAUyE,wBCrCjB,IAAIiC,EAAa/B,EAAQ,MACrBoC,EAAWpC,EAAQ,MAGnBiI,EAAW,yBACXC,EAAU,oBACVC,EAAS,6BACTC,EAAW,iBA6BfhN,EAAOC,QAVP,SAAoBL,GAClB,IAAKoH,EAASpH,GACZ,OAAO,EAIT,IAAI8I,EAAM/B,EAAW/G,GACrB,OAAO8I,GAAOoE,GAAWpE,GAAOqE,GAAUrE,GAAOmE,GAAYnE,GAAOsE,CACtE,oBCjCA,IAAInD,EAAmB,iBAiCvB7J,EAAOC,QALP,SAAkBL,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAASiK,CAC7C,oBCFA7J,EAAOC,QALP,SAAkBL,GAChB,IAAIqE,SAAcrE,EAClB,OAAgB,MAATA,IAA0B,UAARqE,GAA4B,YAARA,EAC/C,oBCAAjE,EAAOC,QAJP,SAAsBL,GACpB,OAAgB,MAATA,GAAiC,iBAATA,CACjC,wBC1BA,IAAI+G,EAAa/B,EAAQ,MACrBhG,EAAUgG,EAAQ,MAClBgC,EAAehC,EAAQ,MAGvBqI,EAAY,kBAwBhBjN,EAAOC,QALP,SAAkBL,GAChB,MAAuB,iBAATA,IACVhB,EAAQgB,IAAUgH,EAAahH,IAAU+G,EAAW/G,IAAUqN,CACpE,wBC3BA,IAAIC,EAAmBtI,EAAQ,MAC3BuI,EAAYvI,EAAQ,MACpBoG,EAAWpG,EAAQ,MAGnBwI,EAAmBpC,GAAYA,EAAS1F,aAmBxCA,EAAe8H,EAAmBD,EAAUC,GAAoBF,EAEpElN,EAAOC,QAAUqF,wBC1BjB,IAAI+H,EAAgBzI,EAAQ,MACxB0I,EAAW1I,EAAQ,MACnB2I,EAAc3I,EAAQ,MAkC1B5E,EAAOC,QAJP,SAAc6H,GACZ,OAAOyF,EAAYzF,GAAUuF,EAAcvF,GAAUwF,EAASxF,EAChE,oBCjBA9H,EAAOC,QAJP,WACE,OAAO,CACT,wBCfA,IAAIgF,EAASL,EAAQ,MACjB4I,EAAY5I,EAAQ,KACpB2E,EAAS3E,EAAQ,MACjB2I,EAAc3I,EAAQ,MACtB6I,EAAW7I,EAAQ,MACnB8I,EAAkB9I,EAAQ,MAC1B+I,EAAa/I,EAAQ,KACrBgJ,EAAahJ,EAAQ,MACrBiJ,EAAgBjJ,EAAQ,MACxBkJ,EAASlJ,EAAQ,MAGjBiE,EAAS,eACTE,EAAS,eAGTgF,EAAc9I,EAASA,EAAOkF,cAAWzD,EAyC7C1G,EAAOC,QAhBP,SAAiBL,GACf,IAAKA,EACH,MAAO,GAET,GAAI2N,EAAY3N,GACd,OAAO6N,EAAS7N,GAASiO,EAAcjO,GAAS4N,EAAU5N,GAE5D,GAAImO,GAAenO,EAAMmO,GACvB,OAAOL,EAAgB9N,EAAMmO,MAE/B,IAAIrF,EAAMa,EAAO3J,GAGjB,OAFW8I,GAAOG,EAAS8E,EAAcjF,GAAOK,EAAS6E,EAAaE,GAE1DlO,EACd,wBCvDA,IAAIoO,EAAapJ,EAAQ,MACrBqF,EAAOrF,EAAQ,MAgCnB5E,EAAOC,QAJP,SAAgB6H,GACd,OAAiB,MAAVA,EAAiB,GAAKkG,EAAWlG,EAAQmC,EAAKnC,GACvD,wBC/BA9H,EAAOC,QAAU,EAAjBD,4BCCA,IAAIiO,EAAUrJ,EAAQ,MAClBsJ,EAActJ,EAAQ,MAOtBuJ,EAAiB,yBAMjBC,EAAiB,qCAQrB,SAASC,EAAa3M,GACpB,IAAI4M,EAAa5M,EAAI6M,QAAQ,KAC7B,OAAID,GAAc,EAEZA,IAAe5M,EAAIjB,OAAS,EAEvB4N,EADP3M,EAAMA,EAAI8M,UAAU,EAAGF,IAIhBD,EADP3M,EAAMA,EAAI+M,OAAOH,EAAa,IAK3B5M,CACT,CAQA,SAASgN,EAAYhN,GACnB,MAAuB,kBAARA,GAAoBA,EAAIjB,OAAS,EAAK,IAAMiB,EAAM,IAAMA,CACzE,CAgBA,IAAIiN,EAAmB7I,OAAO8I,aAAa,OACvCC,EAAkB,IAAIrH,OAAOmH,EAAkB,KAInD,SAASG,EAAUC,GACjB,OAAOA,EAAKpN,QAAQkN,EAAiB,GACvC,CAKA,IAAIG,EAAc5Q,OAAO6L,KAAKiE,GAAae,QAAO,SAASC,EAAEC,GAE3D,OADAD,EAAEJ,EAASZ,EAAYiB,KAAOA,EACvBD,CACT,GAAG,CAAC,GAKAE,EAAQ,CACVC,MAAOnB,GAQTkB,EAAME,KAAO,SAAeD,GAC1B,OAAIL,EAAYF,EAASO,IAChBA,EACEnB,EAAY5P,eAAe+Q,GAC7BnB,EAAYmB,GAxCE,kBADF3N,EA4CD2N,IA3C0B,MAAX3N,EAAI,GAAcgN,EAAWhN,GAAOA,EADzE,IAAuBA,CA6CvB,EAOA0N,EAAMG,IAAM,SAAcF,GAGxB,OAFAA,EAAQhB,EAAYgB,GAEbD,EAAME,KAAKD,EACpB,EAOAD,EAAMI,KAAO,SAAeC,GAC1B,OAAOL,EAAMM,WAAWD,IAAeL,EAAMO,WAAWF,EAC1D,EAOAL,EAAMM,WAAa,SAAqBjQ,GACtC,IAAImQ,EAAWvB,EAAY5O,GACvB4P,EAAQnB,EAAY0B,GAExB,OAAOP,EAAS,CAAEA,MAAOA,EAAOnQ,IAAK0Q,QAAclJ,CACrD,EAOA0I,EAAMO,WAAa,SAAqBZ,GACtC,IAAIa,EAAWd,EAASC,GACpBtP,EAAOuP,EAAYY,GAGvB,OAAOnQ,EAAQ,CAAE4P,MAAOnB,EAAYzO,GAAOP,IAAKO,QAAUiH,CAC5D,EAQA0I,EAAMS,SAAW,SAAmBJ,GAClC,OAAOL,EAAMU,eAAeL,IAAeL,EAAMW,eAAeN,EAClE,EAOAL,EAAMU,eAAiB,SAAyBrQ,GAC9C,IAAIoG,EAASuJ,EAAMM,WAAWjQ,GAC9B,QAASoG,GAAUA,EAAO3G,MAAQmP,EAAY5O,EAChD,EAOA2P,EAAMW,eAAiB,SAAyBhB,GAC9C,IAAIlJ,EAASuJ,EAAMO,WAAWZ,GAC9B,QAASlJ,GAAUiJ,EAASjJ,EAAOwJ,SAAWP,EAASC,EACzD,EAQAK,EAAMY,MAAQ,SAAgBC,EAAYC,GACxC,IAAInB,EAAOD,EAASmB,GAChBE,EAAOnB,EAAYD,GAEvB,OAAOmB,EAAgBxB,EAAWyB,GAAQA,CAC5C,EASAf,EAAMgB,QAAU,SAAkB1O,EAAK2O,EAAYC,GACjD,OAAK5O,EAEEA,EAAIyE,MAAMgI,GACN5D,KAAI,SAAoBgG,EAAG/P,GAE1B,GAAIA,EAAI,IAAM,EAAG,OAAO+P,EACxB,IAAIlB,EAAQD,EAAME,KAAKiB,GACnBC,EAAYnB,EAAMd,QAAQ,MAAQ,EAEtC,OAAIiC,GAAmC,oBAAfH,EACfA,EAAWE,GAGfC,GAA+B,oBAAXF,EAIlBjB,EAHEiB,EAAOjB,EAAOkB,EAIzB,IACCjE,KAAK,IAnBC,EAqBnB,EAMA8C,EAAMqB,OAAS,WACb,IAAIC,EAAYtS,OAAO6L,KAAKiE,GAExBhP,EAAMwR,EADQC,KAAKC,MAAMD,KAAKF,SAAWC,EAAUjQ,SAGvD,MAAO,CAAEvB,IAAKA,EAAKmQ,MADPD,EAAME,KAAKpQ,GAEzB,EAOAkQ,EAAMyB,OAAS,SAAiBnP,GAC9B,IAAIgP,EAAYtS,OAAO6L,KAAKiE,GACxB4C,EAAUzC,EAAY3M,GAI1B,OAHmBgP,EAAUK,QAAO,SAAS7R,GAC3C,OAA2C,IAApCA,EAAIV,WAAW+P,QAAQuC,EAChC,IACoBvG,KAAI,SAASrL,GAC/B,MAAO,CACLA,IAAKA,EACLmQ,MAAOD,EAAME,KAAKpQ,GAEtB,GACF,EAOAkQ,EAAM4B,UAAY,SAAoBtP,GACpC,OAAKA,EACOuM,EAAQvM,GAEP6I,KAAI,SAAS4F,GACxB,OAAOf,EAAMY,MAAMG,GAAM,IAASA,CACpC,IAAG7D,KAAK,IALS,EAMnB,EASA8C,EAAMzN,QAAU,SAAkBD,EAAKuP,EAAaC,GAClD,IAAKxP,EAAK,MAAO,GAEjB,IAAIC,EAAiC,oBAAhBsP,EAA6BA,EAAc,WAAa,OAAOA,CAAa,EAC7FE,EAAQlD,EAAQvM,GAEhB0P,EAAWD,EAAM5G,KAAI,SAAS4F,EAAMkB,GACtC,IAAIhC,EAAQD,EAAMO,WAAWQ,GAM7B,OAJId,GAAS6B,GAAkC,MAAnBC,EAAME,EAAM,KACtCF,EAAME,EAAM,GAAK,IAGZhC,EAAQ1N,EAAQ0N,GAASc,CAClC,IAAG7D,KAAK,IAER,OAAO4E,EAAcE,EAASzP,QAAQyM,EAAgB,IAAMgD,CAC9D,EAQAhC,EAAMkC,MAAQ,SAAgB5P,GAC5B,OAAO0N,EAAMzN,QAAQD,EAAK,IAAI,EAChC,EAEA1B,EAAOC,QAAUmP,8JCxSbmC,EACM,iBADNA,EAEM,iBAFNA,EAGO,kBAGPC,EAAY,CACZC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,SAAU,WACVC,OAAQ,SACRC,MAAO,QACPC,MAAO,SAOPC,GAJkB/T,OAAO6L,KAAKuH,GAAWjH,KAAI,SAAU9K,GACvD,OAAO+R,EAAU/R,EACrB,IAGa,WADT0S,EAEU,UAFVA,EAGM,OAHNA,EAIW,aAJXA,EAKY,YALZA,EAMW,WANXA,EAOM,OAPNA,EAQU,WARVA,EASK,MATLA,EAUK,MAVLA,EAWQ,SAGRC,EAAgB,CAChBC,UAAW,YACXC,QAAS,UACTC,MAAO,YACPC,gBAAiB,kBACjBC,YAAa,cACb,aAAc,YACdC,SAAU,WACVC,SAAU,YAGVC,EACe,eADfA,EAEO,QAFPA,EAG2B,0BAH3BA,EAIwB,sBAJxBA,EAKgB,gBAGhBC,EAAezU,OAAO6L,KAAKmI,GAAenD,QAAO,SAAUhQ,EAAKC,GAEhE,OADAD,EAAImT,EAAclT,IAAQA,EACnBD,CACX,GAAG,CAAC,GAEA6T,EAAoB,CAACtB,EAAUO,SAAUP,EAAUQ,OAAQR,EAAUS,OAErEc,EAAmB,oBAEnBC,EAA4B,oBAAX/N,QAAoD,kBAApBA,OAAOkF,SAAwB,SAAUlL,GAC5F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAyB,oBAAXgG,QAAyBhG,EAAII,cAAgB4F,QAAUhG,IAAQgG,OAAO5G,UAAY,gBAAkBY,CAC3H,EAEIgU,EAAiB,SAAUC,EAAUC,GACvC,KAAMD,aAAoBC,GACxB,MAAM,IAAItR,UAAU,oCAExB,EAEIuR,EAAc,WAChB,SAASC,EAAiB9T,EAAQ2I,GAChC,IAAK,IAAI1H,EAAI,EAAGA,EAAI0H,EAAMzH,OAAQD,IAAK,CACrC,IAAI8S,EAAapL,EAAM1H,GACvB8S,EAAW5T,WAAa4T,EAAW5T,aAAc,EACjD4T,EAAW3T,cAAe,EACtB,UAAW2T,IAAYA,EAAWxT,UAAW,GACjD1B,OAAOK,eAAec,EAAQ+T,EAAWpU,IAAKoU,EAChD,CACF,CAEA,OAAO,SAAUH,EAAaI,EAAYC,GAGxC,OAFID,GAAYF,EAAiBF,EAAY9U,UAAWkV,GACpDC,GAAaH,EAAiBF,EAAaK,GACxCL,CACT,CACF,CAhBkB,GAkBdM,EAAWrV,OAAOsV,QAAU,SAAUnU,GACxC,IAAK,IAAIiB,EAAI,EAAGA,EAAID,UAAUE,OAAQD,IAAK,CACzC,IAAIoC,EAASrC,UAAUC,GAEvB,IAAK,IAAItB,KAAO0D,EACVxE,OAAOC,UAAUC,eAAeS,KAAK6D,EAAQ1D,KAC/CK,EAAOL,GAAO0D,EAAO1D,GAG3B,CAEA,OAAOK,CACT,EAkBIoU,EAA0B,SAAU1U,EAAKgL,GAC3C,IAAI1K,EAAS,CAAC,EAEd,IAAK,IAAIiB,KAAKvB,EACRgL,EAAKsE,QAAQ/N,IAAM,GAClBpC,OAAOC,UAAUC,eAAeS,KAAKE,EAAKuB,KAC/CjB,EAAOiB,GAAKvB,EAAIuB,IAGlB,OAAOjB,CACT,EAEIqU,EAA4B,SAAUtI,EAAMvM,GAC9C,IAAKuM,EACH,MAAM,IAAIuI,eAAe,6DAG3B,OAAO9U,GAAyB,kBAATA,GAAqC,oBAATA,EAA8BuM,EAAPvM,CAC5E,EAEI+U,EAA0B,SAAiCpS,GAG3D,OAAe,OAFFnB,UAAUE,OAAS,QAAsBiG,IAAjBnG,UAAU,KAAmBA,UAAU,IAGjEuF,OAAOpE,GAGXoE,OAAOpE,GAAKC,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAChI,EAEIoS,EAAwB,SAA+BC,GACvD,IAAIC,EAAiBC,EAAqBF,EAAWxC,EAAUU,OAC3DiC,EAAoBD,EAAqBF,EAAWpB,GAExD,GAAIuB,GAAqBF,EAErB,OAAOE,EAAkBxS,QAAQ,OAAO,WACpC,OAAO7C,MAAMF,QAAQqV,GAAkBA,EAAe3H,KAAK,IAAM2H,CACrE,IAGJ,IAAIG,EAAwBF,EAAqBF,EAAWpB,GAE5D,OAAOqB,GAAkBG,QAAyB1N,CACtD,EAEI2N,EAAyB,SAAgCL,GACzD,OAAOE,EAAqBF,EAAWpB,IAAwC,WAAa,CAChG,EAEI0B,EAA6B,SAAoCC,EAASP,GAC1E,OAAOA,EAAUjD,QAAO,SAAU7I,GAC9B,MAAiC,qBAAnBA,EAAMqM,EACxB,IAAGhK,KAAI,SAAUrC,GACb,OAAOA,EAAMqM,EACjB,IAAGtF,QAAO,SAAUuF,EAAUC,GAC1B,OAAOhB,EAAS,CAAC,EAAGe,EAAUC,EAClC,GAAG,CAAC,EACR,EAEIC,EAA0B,SAAiCC,EAAmBX,GAC9E,OAAOA,EAAUjD,QAAO,SAAU7I,GAC9B,MAAwC,qBAA1BA,EAAMsJ,EAAUC,KAClC,IAAGlH,KAAI,SAAUrC,GACb,OAAOA,EAAMsJ,EAAUC,KAC3B,IAAGmD,UAAU3F,QAAO,SAAU4F,EAAkBnM,GAC5C,IAAKmM,EAAiBpU,OAGlB,IAFA,IAAIwJ,EAAO7L,OAAO6L,KAAKvB,GAEdlI,EAAI,EAAGA,EAAIyJ,EAAKxJ,OAAQD,IAAK,CAClC,IACIsU,EADe7K,EAAKzJ,GACiBuU,cAEzC,IAA0D,IAAtDJ,EAAkBpG,QAAQuG,IAAiCpM,EAAIoM,GAC/D,OAAOD,EAAiBG,OAAOtM,EAEvC,CAGJ,OAAOmM,CACX,GAAG,GACP,EAEII,EAAuB,SAA8BC,EAASP,EAAmBX,GAEjF,IAAImB,EAAmB,CAAC,EAExB,OAAOnB,EAAUjD,QAAO,SAAU7I,GAC9B,QAAIpJ,MAAMF,QAAQsJ,EAAMgN,MAGM,qBAAnBhN,EAAMgN,IACbE,EAAK,WAAaF,EAAU,mDAAwDlC,EAAQ9K,EAAMgN,IAAY,MAE3G,EACX,IAAG3K,KAAI,SAAUrC,GACb,OAAOA,EAAMgN,EACjB,IAAGN,UAAU3F,QAAO,SAAUoG,EAAcC,GACxC,IAAIC,EAAmB,CAAC,EAExBD,EAAavE,QAAO,SAAUrI,GAG1B,IAFA,IAAI8M,OAAsB,EACtBvL,EAAO7L,OAAO6L,KAAKvB,GACdlI,EAAI,EAAGA,EAAIyJ,EAAKxJ,OAAQD,IAAK,CAClC,IAAIiV,EAAexL,EAAKzJ,GACpBsU,EAAwBW,EAAaV,eAGiB,IAAtDJ,EAAkBpG,QAAQuG,IAAmCU,IAAwBrD,GAAiE,cAA3CzJ,EAAI8M,GAAqBT,eAAoCD,IAA0B3C,GAAmE,eAA7CzJ,EAAIoM,GAAuBC,gBACnPS,EAAsBV,IAGuB,IAA7CH,EAAkBpG,QAAQkH,IAAyBA,IAAiBtD,GAA6BsD,IAAiBtD,GAA2BsD,IAAiBtD,IAC9JqD,EAAsBC,EAE9B,CAEA,IAAKD,IAAwB9M,EAAI8M,GAC7B,OAAO,EAGX,IAAI5V,EAAQ8I,EAAI8M,GAAqBT,cAUrC,OARKI,EAAiBK,KAClBL,EAAiBK,GAAuB,CAAC,GAGxCD,EAAiBC,KAClBD,EAAiBC,GAAuB,CAAC,IAGxCL,EAAiBK,GAAqB5V,KACvC2V,EAAiBC,GAAqB5V,IAAS,GACxC,EAIf,IAAGgV,UAAUnK,SAAQ,SAAU/B,GAC3B,OAAO2M,EAAa/R,KAAKoF,EAC7B,IAIA,IADA,IAAIuB,EAAO7L,OAAO6L,KAAKsL,GACd/U,EAAI,EAAGA,EAAIyJ,EAAKxJ,OAAQD,IAAK,CAClC,IAAIiV,EAAexL,EAAKzJ,GACpBkV,EAAWC,IAAa,CAAC,EAAGR,EAAiBM,GAAeF,EAAiBE,IAEjFN,EAAiBM,GAAgBC,CACrC,CAEA,OAAOL,CACX,GAAG,IAAIT,SACX,EAEIV,EAAuB,SAA8BF,EAAW1P,GAChE,IAAK,IAAI9D,EAAIwT,EAAUvT,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC5C,IAAI0H,EAAQ8L,EAAUxT,GAEtB,GAAI0H,EAAM5J,eAAegG,GACrB,OAAO4D,EAAM5D,EAErB,CAEA,OAAO,IACX,EAoBIsR,EAAc,WACd,IAAIC,EAAQC,KAAKC,MAEjB,OAAO,SAAUC,GACb,IAAIC,EAAcH,KAAKC,MAEnBE,EAAcJ,EAAQ,IACtBA,EAAQI,EACRD,EAASC,IAETC,YAAW,WACPN,EAAYI,EAChB,GAAG,EAEX,CACJ,CAfkB,GAiBdG,EAAc,SAAqBC,GACnC,OAAOC,aAAaD,EACxB,EAEIE,EAA0C,qBAAXC,OAAyBA,OAAOD,uBAAyBC,OAAOD,sBAAsBE,KAAKD,SAAWA,OAAOE,6BAA+BF,OAAOG,0BAA4Bd,EAAcvN,EAAAA,EAAOiO,uBAAyBV,EAE5Pe,EAAyC,qBAAXJ,OAAyBA,OAAOI,sBAAwBJ,OAAOK,4BAA8BL,OAAOM,yBAA2BV,EAAc9N,EAAAA,EAAOsO,sBAAwBR,EAE1Mf,EAAO,SAAcpS,GACrB,OAAO8T,SAAmC,oBAAjBA,QAAQ1B,MAAuB0B,QAAQ1B,KAAKpS,EACzE,EAEI+T,GAAkB,KAmBlBC,GAAmB,SAA0BC,EAAUC,GACvD,IAAIC,EAAUF,EAASE,QACnBC,EAAiBH,EAASG,eAC1BC,EAAiBJ,EAASI,eAC1BC,EAAWL,EAASK,SACpBC,EAAWN,EAASM,SACpBC,EAAeP,EAASO,aACxBC,EAAsBR,EAASQ,oBAC/BC,EAAaT,EAASS,WACtBC,EAAYV,EAASU,UACrBC,EAAQX,EAASW,MACjBC,EAAkBZ,EAASY,gBAE/BC,GAAiBtG,EAAUE,KAAM0F,GACjCU,GAAiBtG,EAAUI,KAAMyF,GAEjCU,GAAYH,EAAOC,GAEnB,IAAIG,EAAa,CACbb,QAASc,GAAWzG,EAAUC,KAAM0F,GACpCG,SAAUW,GAAWzG,EAAUK,KAAMyF,GACrCC,SAAUU,GAAWzG,EAAUM,KAAMyF,GACrCC,aAAcS,GAAWzG,EAAUO,SAAUyF,GAC7CE,WAAYO,GAAWzG,EAAUQ,OAAQ0F,GACzCC,UAAWM,GAAWzG,EAAUS,MAAO0F,IAGvCO,EAAY,CAAC,EACbC,EAAc,CAAC,EAEnB/Z,OAAO6L,KAAK+N,GAAYvN,SAAQ,SAAU8J,GACtC,IAAI6D,EAAsBJ,EAAWzD,GACjC8D,EAAUD,EAAoBC,QAC9BC,EAAUF,EAAoBE,QAG9BD,EAAQ5X,SACRyX,EAAU3D,GAAW8D,GAErBC,EAAQ7X,SACR0X,EAAY5D,GAAWyD,EAAWzD,GAAS+D,QAEnD,IAEApB,GAAMA,IAENO,EAAoBR,EAAUiB,EAAWC,EAC7C,EAEII,GAAe,SAAsBC,GACrC,OAAO1Z,MAAMF,QAAQ4Z,GAAiBA,EAAclM,KAAK,IAAMkM,CACnE,EAEIT,GAAc,SAAqBH,EAAOa,GACrB,qBAAVb,GAAyBc,SAASd,QAAUA,IACnDc,SAASd,MAAQW,GAAaX,IAGlCE,GAAiBtG,EAAUU,MAAOuG,EACtC,EAEIX,GAAmB,SAA0B5C,EAASuD,GACtD,IAAIE,EAAaD,SAASE,qBAAqB1D,GAAS,GAExD,GAAKyD,EAAL,CASA,IALA,IAAIE,EAAwBF,EAAWG,aAAa/F,GAChDgG,EAAmBF,EAAwBA,EAAsB1S,MAAM,KAAO,GAC9E6S,EAAqB,GAAGhE,OAAO+D,GAC/BE,EAAgB7a,OAAO6L,KAAKwO,GAEvBjY,EAAI,EAAGA,EAAIyY,EAAcxY,OAAQD,IAAK,CAC3C,IAAI0Y,EAAYD,EAAczY,GAC1BZ,EAAQ6Y,EAAWS,IAAc,GAEjCP,EAAWG,aAAaI,KAAetZ,GACvC+Y,EAAWQ,aAAaD,EAAWtZ,IAGM,IAAzCmZ,EAAiBxK,QAAQ2K,IACzBH,EAAiBzV,KAAK4V,GAG1B,IAAIE,EAAcJ,EAAmBzK,QAAQ2K,IACxB,IAAjBE,GACAJ,EAAmBK,OAAOD,EAAa,EAE/C,CAEA,IAAK,IAAIE,EAAKN,EAAmBvY,OAAS,EAAG6Y,GAAM,EAAGA,IAClDX,EAAWY,gBAAgBP,EAAmBM,IAG9CP,EAAiBtY,SAAWuY,EAAmBvY,OAC/CkY,EAAWY,gBAAgBxG,GACpB4F,EAAWG,aAAa/F,KAAsBkG,EAAc3M,KAAK,MACxEqM,EAAWQ,aAAapG,EAAkBkG,EAAc3M,KAAK,KAhCjE,CAkCJ,EAEI2L,GAAa,SAAoBhU,EAAMuV,GACvC,IAAIC,EAAcf,SAASgB,MAAQhB,SAASiB,cAAcnI,EAAUG,MAChEiI,EAAWH,EAAYI,iBAAiB5V,EAAO,IAAM8O,EAAmB,KACxEuF,EAAUxZ,MAAMT,UAAUqF,MAAM3E,KAAK6a,GACrCvB,EAAU,GACVyB,OAAgB,EA4CpB,OA1CIN,GAAQA,EAAK/Y,QACb+Y,EAAK/O,SAAQ,SAAU/B,GACnB,IAAIqR,EAAarB,SAASsB,cAAc/V,GAExC,IAAK,IAAIiV,KAAaxQ,EAClB,GAAIA,EAAIpK,eAAe4a,GACnB,GAAIA,IAAc/G,EACd4H,EAAWE,UAAYvR,EAAIuR,eACxB,GAAIf,IAAc/G,EACjB4H,EAAWG,WACXH,EAAWG,WAAWC,QAAUzR,EAAIyR,QAEpCJ,EAAWK,YAAY1B,SAAS2B,eAAe3R,EAAIyR,cAEpD,CACH,IAAIva,EAAkC,qBAAnB8I,EAAIwQ,GAA6B,GAAKxQ,EAAIwQ,GAC7Da,EAAWZ,aAAaD,EAAWtZ,EACvC,CAIRma,EAAWZ,aAAapG,EAAkB,QAGtCuF,EAAQgC,MAAK,SAAUC,EAAatU,GAEpC,OADA6T,EAAgB7T,EACT8T,EAAWS,YAAYD,EAClC,IACIjC,EAAQe,OAAOS,EAAe,GAE9BzB,EAAQ/U,KAAKyW,EAErB,IAGJzB,EAAQ7N,SAAQ,SAAU/B,GACtB,OAAOA,EAAI+R,WAAWC,YAAYhS,EACtC,IACA2P,EAAQ5N,SAAQ,SAAU/B,GACtB,OAAO+Q,EAAYW,YAAY1R,EACnC,IAEO,CACH4P,QAASA,EACTD,QAASA,EAEjB,EAEIsC,GAAoC,SAA2ClC,GAC/E,OAAOra,OAAO6L,KAAKwO,GAAYxJ,QAAO,SAAUvN,EAAKxC,GACjD,IAAI0b,EAAkC,qBAApBnC,EAAWvZ,GAAuBA,EAAM,KAAQuZ,EAAWvZ,GAAO,IAAO,GAAKA,EAChG,OAAOwC,EAAMA,EAAM,IAAMkZ,EAAOA,CACpC,GAAG,GACP,EAyBIC,GAAuC,SAA8CpC,GACrF,IAAIqC,EAAYva,UAAUE,OAAS,QAAsBiG,IAAjBnG,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAErF,OAAOnC,OAAO6L,KAAKwO,GAAYxJ,QAAO,SAAUhQ,EAAKC,GAEjD,OADAD,EAAImT,EAAclT,IAAQA,GAAOuZ,EAAWvZ,GACrCD,CACX,GAAG6b,EACP,EA8CIC,GAAmB,SAA0B9W,EAAMuV,EAAMwB,GACzD,OAAQ/W,GACJ,KAAKuN,EAAUU,MACX,MAAO,CACH+I,YAAa,WACT,OAxCgB,SAAuChX,EAAM2T,EAAOa,GACpF,IAAIyC,EAGAJ,IAAaI,EAAa,CAC1Bhc,IAAK0Y,IACK7E,IAAoB,EAAMmI,GACpChT,EAAQ2S,GAAqCpC,EAAYqC,GAE7D,MAAO,CAACK,EAAAA,cAAoB3J,EAAUU,MAAOhK,EAAO0P,GACxD,CA8B2BwD,CAA8BnX,EAAMuV,EAAK5B,MAAO4B,EAAK3B,gBAChE,EACArZ,SAAU,WACN,OApFQ,SAA+ByF,EAAM2T,EAAOa,EAAYuC,GAChF,IAAIK,EAAkBV,GAAkClC,GACpD6C,EAAiB/C,GAAaX,GAClC,OAAOyD,EAAkB,IAAMpX,EAAO,IAAM8O,EAAmB,WAAesI,EAAkB,IAAMvH,EAAwBwH,EAAgBN,GAAU,KAAO/W,EAAO,IAAM,IAAMA,EAAO,IAAM8O,EAAmB,WAAee,EAAwBwH,EAAgBN,GAAU,KAAO/W,EAAO,GACrS,CAgF2BsX,CAAsBtX,EAAMuV,EAAK5B,MAAO4B,EAAK3B,gBAAiBmD,EACzE,GAER,KAAKzJ,EACL,KAAKA,EACD,MAAO,CACH0J,YAAa,WACT,OAAOJ,GAAqCrB,EAChD,EACAhb,SAAU,WACN,OAAOmc,GAAkCnB,EAC7C,GAER,QACI,MAAO,CACHyB,YAAa,WACT,OA/Ce,SAAsChX,EAAMuV,GAC3E,OAAOA,EAAKjP,KAAI,SAAU7B,EAAKlI,GAC3B,IAAIgb,EAEAC,IAAaD,EAAa,CAC1Btc,IAAKsB,IACKuS,IAAoB,EAAMyI,GAaxC,OAXApd,OAAO6L,KAAKvB,GAAK+B,SAAQ,SAAUyO,GAC/B,IAAIwC,EAAkBtJ,EAAc8G,IAAcA,EAElD,GAAIwC,IAAoBvJ,GAA6BuJ,IAAoBvJ,EAAyB,CAC9F,IAAItP,EAAU6F,EAAIuR,WAAavR,EAAIyR,QACnCsB,EAAUE,wBAA0B,CAAEC,OAAQ/Y,EAClD,MACI4Y,EAAUC,GAAmBhT,EAAIwQ,EAEzC,IAEOiC,EAAAA,cAAoBlX,EAAMwX,EACrC,GACJ,CA0B2BI,CAA6B5X,EAAMuV,EAC9C,EACAhb,SAAU,WACN,OAjGO,SAA8ByF,EAAMuV,EAAMwB,GACjE,OAAOxB,EAAKvK,QAAO,SAAUvN,EAAKgH,GAC9B,IAAIoT,EAAgB1d,OAAO6L,KAAKvB,GAAKqI,QAAO,SAAUmI,GAClD,QAASA,IAAc/G,GAA6B+G,IAAc/G,EACtE,IAAGlD,QAAO,SAAU/I,EAAQgT,GACxB,IAAI0B,EAAiC,qBAAnBlS,EAAIwQ,GAA6BA,EAAYA,EAAY,KAAQpF,EAAwBpL,EAAIwQ,GAAY8B,GAAU,IACrI,OAAO9U,EAASA,EAAS,IAAM0U,EAAOA,CAC1C,GAAG,IAECmB,EAAarT,EAAIuR,WAAavR,EAAIyR,SAAW,GAE7C6B,GAAqD,IAArClJ,EAAkBvE,QAAQtK,GAE9C,OAAOvC,EAAM,IAAMuC,EAAO,IAAM8O,EAAmB,WAAe+I,GAAiBE,EAAgB,KAAO,IAAMD,EAAa,KAAO9X,EAAO,IAC/I,GAAG,GACP,CAkF2BgY,CAAqBhY,EAAMuV,EAAMwB,EAC5C,GAGhB,EAEIkB,GAAmB,SAA0BC,GAC7C,IAAIhF,EAAUgF,EAAKhF,QACfC,EAAiB+E,EAAK/E,eACtB4D,EAASmB,EAAKnB,OACd3D,EAAiB8E,EAAK9E,eACtBC,EAAW6E,EAAK7E,SAChBC,EAAW4E,EAAK5E,SAChBC,EAAe2E,EAAK3E,aACpBE,EAAayE,EAAKzE,WAClBC,EAAYwE,EAAKxE,UACjByE,EAAaD,EAAKvE,MAClBA,OAAuBlR,IAAf0V,EAA2B,GAAKA,EACxCvE,EAAkBsE,EAAKtE,gBAC3B,MAAO,CACHwE,KAAMtB,GAAiBvJ,EAAUC,KAAM0F,EAAS6D,GAChD5D,eAAgB2D,GAAiBxJ,EAAsB6F,EAAgB4D,GACvE3D,eAAgB0D,GAAiBxJ,EAAsB8F,EAAgB2D,GACvEsB,KAAMvB,GAAiBvJ,EAAUK,KAAMyF,EAAU0D,GACjDuB,KAAMxB,GAAiBvJ,EAAUM,KAAMyF,EAAUyD,GACjDwB,SAAUzB,GAAiBvJ,EAAUO,SAAUyF,EAAcwD,GAC7DyB,OAAQ1B,GAAiBvJ,EAAUQ,OAAQ0F,EAAYsD,GACvDpZ,MAAOmZ,GAAiBvJ,EAAUS,MAAO0F,EAAWqD,GACpDpD,MAAOmD,GAAiBvJ,EAAUU,MAAO,CAAE0F,MAAOA,EAAOC,gBAAiBA,GAAmBmD,GAErG,EA0PI0B,GAxPS,SAAgBC,GACzB,IAAIC,EAAQC,EAEZ,OAAOA,EAAQD,EAAS,SAAUE,GAG9B,SAASC,IAEL,OADA9J,EAAevQ,KAAMqa,GACdnJ,EAA0BlR,KAAMoa,EAAiBE,MAAMta,KAAMnC,WACxE,CA6LA,OAzuBO,SAAU0c,EAAUC,GACjC,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIrb,UAAU,kEAAoEqb,GAG1FD,EAAS5e,UAAYD,OAAO+e,OAAOD,GAAcA,EAAW7e,UAAW,CACrEgB,YAAa,CACXO,MAAOqd,EACPvd,YAAY,EACZI,UAAU,EACVH,cAAc,KAGdud,IAAY9e,OAAOgf,eAAiBhf,OAAOgf,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,EAC7G,CAyhBQI,CAASP,EAAeD,GAOxBC,EAAc1e,UAAUkf,sBAAwB,SAA+BC,GAC3E,OAAQC,IAAQ/a,KAAKwF,MAAOsV,EAChC,EAEAT,EAAc1e,UAAUqf,yBAA2B,SAAkCC,EAAOC,GACxF,IAAKA,EACD,OAAO,KAGX,OAAQD,EAAM1Z,MACV,KAAKuN,EAAUQ,OACf,KAAKR,EAAUO,SACX,MAAO,CACHkI,UAAW2D,GAGnB,KAAKpM,EAAUS,MACX,MAAO,CACHkI,QAASyD,GAIrB,MAAM,IAAI1a,MAAM,IAAMya,EAAM1Z,KAAO,qGACvC,EAEA8Y,EAAc1e,UAAUwf,yBAA2B,SAAkC1B,GACjF,IAAI2B,EAEAH,EAAQxB,EAAKwB,MACbI,EAAoB5B,EAAK4B,kBACzBC,EAAgB7B,EAAK6B,cACrBJ,EAAiBzB,EAAKyB,eAE1B,OAAOnK,EAAS,CAAC,EAAGsK,IAAoBD,EAAwB,CAAC,GAAyBH,EAAM1Z,MAAQ,GAAG+Q,OAAO+I,EAAkBJ,EAAM1Z,OAAS,GAAI,CAACwP,EAAS,CAAC,EAAGuK,EAAetb,KAAKgb,yBAAyBC,EAAOC,MAAoBE,GACjP,EAEAf,EAAc1e,UAAU4f,sBAAwB,SAA+BC,GAC3E,IAAIC,EAAwBC,EAExBT,EAAQO,EAAMP,MACdU,EAAWH,EAAMG,SACjBL,EAAgBE,EAAMF,cACtBJ,EAAiBM,EAAMN,eAE3B,OAAQD,EAAM1Z,MACV,KAAKuN,EAAUU,MACX,OAAOuB,EAAS,CAAC,EAAG4K,IAAWF,EAAyB,CAAC,GAA0BR,EAAM1Z,MAAQ2Z,EAAgBO,EAAuBtG,gBAAkBpE,EAAS,CAAC,EAAGuK,GAAgBG,IAE3L,KAAK3M,EAAUE,KACX,OAAO+B,EAAS,CAAC,EAAG4K,EAAU,CAC1BjH,eAAgB3D,EAAS,CAAC,EAAGuK,KAGrC,KAAKxM,EAAUI,KACX,OAAO6B,EAAS,CAAC,EAAG4K,EAAU,CAC1BhH,eAAgB5D,EAAS,CAAC,EAAGuK,KAIzC,OAAOvK,EAAS,CAAC,EAAG4K,IAAWD,EAAyB,CAAC,GAA0BT,EAAM1Z,MAAQwP,EAAS,CAAC,EAAGuK,GAAgBI,GAClI,EAEArB,EAAc1e,UAAUigB,4BAA8B,SAAqCP,EAAmBM,GAC1G,IAAIE,EAAoB9K,EAAS,CAAC,EAAG4K,GAQrC,OANAjgB,OAAO6L,KAAK8T,GAAmBtT,SAAQ,SAAU+T,GAC7C,IAAIC,EAEJF,EAAoB9K,EAAS,CAAC,EAAG8K,IAAoBE,EAAyB,CAAC,GAA0BD,GAAkBT,EAAkBS,GAAiBC,GAClK,IAEOF,CACX,EAEAxB,EAAc1e,UAAUqgB,sBAAwB,SAA+Bf,EAAOC,GAmBlF,OAAO,CACX,EAEAb,EAAc1e,UAAUsgB,mBAAqB,SAA4BC,EAAUP,GAC/E,IAAIQ,EAASnc,KAETqb,EAAoB,CAAC,EAyCzB,OAvCA5C,EAAAA,SAAAA,QAAuByD,GAAU,SAAUjB,GACvC,GAAKA,GAAUA,EAAMzV,MAArB,CAIA,IAAI4W,EAAenB,EAAMzV,MACrB0V,EAAiBkB,EAAaF,SAG9BZ,EAhOoB,SAA2C9V,GAC/E,IAAI6W,EAAiBxe,UAAUE,OAAS,QAAsBiG,IAAjBnG,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAE1F,OAAOnC,OAAO6L,KAAK/B,GAAO+G,QAAO,SAAUhQ,EAAKC,GAE5C,OADAD,EAAI4T,EAAa3T,IAAQA,GAAOgJ,EAAMhJ,GAC/BD,CACX,GAAG8f,EACP,CAyNoCC,CAFHrL,EAAwBmL,EAAc,CAAC,cAMxD,OAFAD,EAAOH,sBAAsBf,EAAOC,GAE5BD,EAAM1Z,MACV,KAAKuN,EAAUK,KACf,KAAKL,EAAUM,KACf,KAAKN,EAAUO,SACf,KAAKP,EAAUQ,OACf,KAAKR,EAAUS,MACX8L,EAAoBc,EAAOhB,yBAAyB,CAChDF,MAAOA,EACPI,kBAAmBA,EACnBC,cAAeA,EACfJ,eAAgBA,IAEpB,MAEJ,QACIS,EAAWQ,EAAOZ,sBAAsB,CACpCN,MAAOA,EACPU,SAAUA,EACVL,cAAeA,EACfJ,eAAgBA,IA7B5B,CAiCJ,IAEAS,EAAW3b,KAAK4b,4BAA4BP,EAAmBM,EAEnE,EAEAtB,EAAc1e,UAAU4gB,OAAS,WAC7B,IAAIC,EAASxc,KAAKwF,MACd0W,EAAWM,EAAON,SAClB1W,EAAQyL,EAAwBuL,EAAQ,CAAC,aAEzCb,EAAW5K,EAAS,CAAC,EAAGvL,GAM5B,OAJI0W,IACAP,EAAW3b,KAAKic,mBAAmBC,EAAUP,IAG1ClD,EAAAA,cAAoBwB,EAAW0B,EAC1C,EAEAjL,EAAY2J,EAAe,KAAM,CAAC,CAC9B7d,IAAK,YAyBLsM,IAAK,SAAgB2T,GACjBxC,EAAUwC,UAAYA,CAC1B,KAEGpC,CACX,CApMwB,CAoMtB5B,EAAAA,WAAkByB,EAAOwC,UAAY,CACnC/C,KAAMgD,IAAAA,OACNjI,eAAgBiI,IAAAA,OAChBT,SAAUS,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,MAAiBA,IAAAA,OAClEC,aAAcD,IAAAA,OACdE,MAAOF,IAAAA,KACPvL,wBAAyBuL,IAAAA,KACzBhI,eAAgBgI,IAAAA,OAChB/C,KAAM+C,IAAAA,QAAkBA,IAAAA,QACxB9C,KAAM8C,IAAAA,QAAkBA,IAAAA,QACxB7C,SAAU6C,IAAAA,QAAkBA,IAAAA,QAC5B5H,oBAAqB4H,IAAAA,KACrB5C,OAAQ4C,IAAAA,QAAkBA,IAAAA,QAC1Bzd,MAAOyd,IAAAA,QAAkBA,IAAAA,QACzBzH,MAAOyH,IAAAA,OACPxH,gBAAiBwH,IAAAA,OACjBG,cAAeH,IAAAA,QAChBzC,EAAO6C,aAAe,CACrBF,OAAO,EACPzL,yBAAyB,GAC1B8I,EAAO8C,KAAO/C,EAAU+C,KAAM9C,EAAO+C,OAAS,WAC7C,IAAIC,EAAcjD,EAAUgD,SAkB5B,OAjBKC,IAEDA,EAAc1D,GAAiB,CAC3B/E,QAAS,GACTC,eAAgB,CAAC,EACjBtD,yBAAyB,EACzBuD,eAAgB,CAAC,EACjBC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdE,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,gBAAiB,CAAC,KAInB+H,CACX,EAAG/C,CACP,CAQmBgD,CAFKC,KAnmBC,SAA4B9L,GACjD,MAAO,CACHmD,QAASzC,EAAwB,CAACvC,EAAqBA,GAAwB6B,GAC/EoD,eAAgB9C,EAA2B/C,EAAsByC,GACjEuL,MAAOrL,EAAqBF,EAAWpB,GACvCoI,OAAQ9G,EAAqBF,EAAWpB,GACxCyE,eAAgB/C,EAA2B/C,EAAsByC,GACjEsD,SAAUrC,EAAqBzD,EAAUK,KAAM,CAACM,EAAoBA,GAAsB6B,GAC1FuD,SAAUtC,EAAqBzD,EAAUM,KAAM,CAACK,EAAqBA,EAAwBA,EAA0BA,EAAyBA,GAA2B6B,GAC3KwD,aAAcvC,EAAqBzD,EAAUO,SAAU,CAACI,GAA4B6B,GACpFyD,oBAAqBpD,EAAuBL,GAC5C0D,WAAYzC,EAAqBzD,EAAUQ,OAAQ,CAACG,EAAoBA,GAA4B6B,GACpG2D,UAAW1C,EAAqBzD,EAAUS,MAAO,CAACE,GAA0B6B,GAC5E4D,MAAO7D,EAAsBC,GAC7B6D,gBAAiBvD,EAA2B/C,EAAuByC,GAE3E,IAiC8B,SAAiCiD,GACvDF,IACAJ,EAAqBI,IAGrBE,EAASsI,MACTxI,GAAkBT,GAAsB,WACpCU,GAAiBC,GAAU,WACvBF,GAAkB,IACtB,GACJ,KAEAC,GAAiBC,GACjBF,GAAkB,KAE1B,GAmiBoFmF,GAA5D4D,EAJJ,WAChB,OAAO,IACX,KAKApD,GAAaqD,aAAerD,GAAaiD,wCCt4B5B,IAA4bK,EAAxbC,EAAEhb,OAAOib,IAAI,iBAAiBrc,EAAEoB,OAAOib,IAAI,gBAAgBC,EAAElb,OAAOib,IAAI,kBAAkBtX,EAAE3D,OAAOib,IAAI,qBAAqBE,EAAEnb,OAAOib,IAAI,kBAAkBG,EAAEpb,OAAOib,IAAI,kBAAkBhR,EAAEjK,OAAOib,IAAI,iBAAiB/Q,EAAElK,OAAOib,IAAI,wBAAwBI,EAAErb,OAAOib,IAAI,qBAAqB1c,EAAEyB,OAAOib,IAAI,kBAAkBnY,EAAE9C,OAAOib,IAAI,uBAAuBK,EAAEtb,OAAOib,IAAI,cAAcM,EAAEvb,OAAOib,IAAI,cAAcO,EAAExb,OAAOib,IAAI,mBACtb,SAASQ,EAAEC,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKX,EAAE,OAAOU,EAAEA,EAAE1c,MAAQ,KAAKkc,EAAE,KAAKC,EAAE,KAAKxX,EAAE,KAAKpF,EAAE,KAAKuE,EAAE,OAAO4Y,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAK1R,EAAE,KAAKD,EAAE,KAAKoR,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKF,EAAE,OAAOM,EAAE,QAAQ,OAAOC,GAAG,KAAK/c,EAAE,OAAO+c,EAAE,CAAC,CADkMZ,EAAE/a,OAAOib,IAAI,0BAC9MjgB,EAAQ6gB,gBAAgB5R,EAAEjP,EAAQ8gB,gBAAgBV,EAAEpgB,EAAQ+gB,QAAQf,EAAEhgB,EAAQghB,WAAWX,EAAErgB,EAAQihB,SAASf,EAAElgB,EAAQkhB,KAAKX,EAAEvgB,EAAQmhB,KAAKb,EAAEtgB,EAAQohB,OAAOxd,EAAE5D,EAAQqhB,SAASlB,EAAEngB,EAAQshB,WAAW3Y,EAAE3I,EAAQuhB,SAAShe,EAChevD,EAAQwhB,aAAa1Z,EAAE9H,EAAQyhB,YAAY,WAAW,OAAM,CAAE,EAAEzhB,EAAQ0hB,iBAAiB,WAAW,OAAM,CAAE,EAAE1hB,EAAQ2hB,kBAAkB,SAASjB,GAAG,OAAOD,EAAEC,KAAKzR,CAAC,EAAEjP,EAAQ4hB,kBAAkB,SAASlB,GAAG,OAAOD,EAAEC,KAAKN,CAAC,EAAEpgB,EAAQ6hB,UAAU,SAASnB,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWZ,CAAC,EAAEhgB,EAAQ8hB,aAAa,SAASpB,GAAG,OAAOD,EAAEC,KAAKL,CAAC,EAAErgB,EAAQ+hB,WAAW,SAASrB,GAAG,OAAOD,EAAEC,KAAKR,CAAC,EAAElgB,EAAQgiB,OAAO,SAAStB,GAAG,OAAOD,EAAEC,KAAKH,CAAC,EAAEvgB,EAAQiiB,OAAO,SAASvB,GAAG,OAAOD,EAAEC,KAAKJ,CAAC,EACvetgB,EAAQkiB,SAAS,SAASxB,GAAG,OAAOD,EAAEC,KAAK9c,CAAC,EAAE5D,EAAQmiB,WAAW,SAASzB,GAAG,OAAOD,EAAEC,KAAKP,CAAC,EAAEngB,EAAQoiB,aAAa,SAAS1B,GAAG,OAAOD,EAAEC,KAAK/X,CAAC,EAAE3I,EAAQqiB,WAAW,SAAS3B,GAAG,OAAOD,EAAEC,KAAKnd,CAAC,EAAEvD,EAAQsiB,eAAe,SAAS5B,GAAG,OAAOD,EAAEC,KAAK5Y,CAAC,EAClP9H,EAAQuiB,mBAAmB,SAAS7B,GAAG,MAAM,kBAAkBA,GAAG,oBAAoBA,GAAGA,IAAIR,GAAGQ,IAAIP,GAAGO,IAAI/X,GAAG+X,IAAInd,GAAGmd,IAAI5Y,GAAG4Y,IAAIF,GAAG,kBAAkBE,GAAG,OAAOA,IAAIA,EAAEE,WAAWL,GAAGG,EAAEE,WAAWN,GAAGI,EAAEE,WAAWR,GAAGM,EAAEE,WAAW3R,GAAGyR,EAAEE,WAAWP,GAAGK,EAAEE,WAAWb,QAAG,IAASW,EAAE8B,YAAkB,EAAExiB,EAAQyiB,OAAOhC,qCCV/S1gB,EAAOC,QAAU,EAAjBD,yCCCF,IAF0B2iB,EAEtBxH,EAAQvW,EAAQ,MAChBge,GAHsBD,EAGWxH,IAHwB,kBAAPwH,GAAoB,YAAaA,EAAMA,EAAY,QAAIA,EAK7G,SAASE,EAAgB5jB,EAAKC,EAAKU,GAYjC,OAXIV,KAAOD,EACTb,OAAOK,eAAeQ,EAAKC,EAAK,CAC9BU,MAAOA,EACPF,YAAY,EACZC,cAAc,EACdG,UAAU,IAGZb,EAAIC,GAAOU,EAGNX,CACT,CAQA,IAAIkgB,IAAiC,qBAAX5I,SAA0BA,OAAOmC,WAAYnC,OAAOmC,SAASsB,eAgGvFha,EAAOC,QA/FP,SAAwB6iB,EAAoBC,EAA2B7G,GACrE,GAAkC,oBAAvB4G,EACT,MAAM,IAAI5f,MAAM,iDAGlB,GAAyC,oBAA9B6f,EACT,MAAM,IAAI7f,MAAM,wDAGlB,GAAgC,qBAArBgZ,GAAgE,oBAArBA,EACpD,MAAM,IAAIhZ,MAAM,mEAOlB,OAAO,SAAc8f,GACnB,GAAgC,oBAArBA,EACT,MAAM,IAAI9f,MAAM,sDAGlB,IACI+f,EADAC,EAAmB,GAGvB,SAASC,IACPF,EAAQH,EAAmBI,EAAiB3Y,KAAI,SAAU2I,GACxD,OAAOA,EAAShL,KAClB,KAEIkb,EAAWjE,UACb4D,EAA0BE,GACjB/G,IACT+G,EAAQ/G,EAAiB+G,GAE7B,CAEA,IAAIG,EAEJ,SAAUC,GA9Cd,IAAwBpG,EAAUC,EAiD5B,SAASkG,IACP,OAAOC,EAAerG,MAAMta,KAAMnC,YAAcmC,IAClD,CAnD4Bwa,EA+CDmG,GA/CTpG,EA+CHmG,GA9CV/kB,UAAYD,OAAO+e,OAAOD,EAAW7e,WAC9C4e,EAAS5e,UAAUgB,YAAc4d,EACjCA,EAASI,UAAYH,EAoDjBkG,EAAW1D,KAAO,WAChB,OAAOuD,CACT,EAEAG,EAAWzD,OAAS,WAClB,GAAIyD,EAAWjE,UACb,MAAM,IAAIjc,MAAM,oFAGlB,IAAIogB,EAAgBL,EAGpB,OAFAA,OAAQvc,EACRwc,EAAmB,GACZI,CACT,EAEA,IAAIC,EAASH,EAAW/kB,UAqBxB,OAnBAklB,EAAOC,0BAA4B,WACjCN,EAAiB5f,KAAKZ,MACtBygB,GACF,EAEAI,EAAOE,mBAAqB,WAC1BN,GACF,EAEAI,EAAOG,qBAAuB,WAC5B,IAAIzd,EAAQid,EAAiB3U,QAAQ7L,MACrCwgB,EAAiB7J,OAAOpT,EAAO,GAC/Bkd,GACF,EAEAI,EAAOtE,OAAS,WACd,OAAO2D,EAAe5I,cAAcgJ,EAAkBtgB,KAAKwF,MAC7D,EAEOkb,CACT,CA9CA,CA8CEjI,EAAMwI,eAMR,OAJAd,EAAgBO,EAAY,cAAe,cA1E7C,SAAwBJ,GACtB,OAAOA,EAAiBY,aAAeZ,EAAiBvjB,MAAQ,WAClE,CAwE6DokB,CAAeb,GAAoB,KAE9FH,EAAgBO,EAAY,YAAajE,GAElCiE,CACT,CACF,wBC1HA,IAAIU,EAAQlf,EAAQ,MAapB,SAASmf,EAAcniB,EAAOuI,GAC5B,IAKIjG,EALA8f,EAAS,KACb,IAAKpiB,GAA0B,kBAAVA,EACnB,OAAOoiB,EAST,IALA,IAEI1f,EACA1E,EAHA6E,EAAeqf,EAAMliB,GACrBqiB,EAAkC,oBAAb9Z,EAIhB3J,EAAI,EAAG0jB,EAAMzf,EAAahE,OAAQD,EAAI0jB,EAAK1jB,IAElD8D,GADAJ,EAAcO,EAAajE,IACJ8D,SACvB1E,EAAQsE,EAAYtE,MAEhBqkB,EACF9Z,EAAS7F,EAAU1E,EAAOsE,GACjBtE,IACTokB,IAAWA,EAAS,CAAC,GACrBA,EAAO1f,GAAY1E,GAIvB,OAAOokB,CACT,CAEAhkB,EAAOC,QAAU8jB,EACjB/jB,EAAOC,QAAPD,QAAyB+jB,qCC1CV,SAASI,EAA0BllB,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAI4C,UAAU,sBAAwB5C,EAC/D,oGCEA,IAAMmlB,EAAU1L,SAASsB,cAAc,KAMhC,SAASqK,EAA8BzkB,GAC5C,IAAM0kB,EAAqB,IAAM1kB,EAAQ,IACzCwkB,EAAQnK,UAAYqK,EACpB,IAAMC,EAAOH,EAAQI,YAUrB,OAAyC,KAArCD,EAAKE,WAAWF,EAAK9jB,OAAS,IAAiC,SAAVb,KAQlD2kB,IAASD,GAA6BC,EAC/C,2GCoCMG,EAAM,CAAC,EAAEpmB,eAqBFqmB,EAgBT,SAAUC,EAAMpV,EAAM7N,EAASnC,GAE7B,IAAIqlB,EAEAC,EAEgB,kBAATtV,GAAqBA,aAAgBhI,QAE9Csd,EAAS,CAAC,CAACtV,EAAM7N,IACjBkjB,EAAWrlB,IAEXslB,EAAStV,EAETqV,EAAWljB,GAGRkjB,IACHA,EAAW,CAAC,GAOd,IAJA,IAAME,GAAUC,EAAAA,EAAAA,GAAQH,EAASI,QAAU,IACrCC,EA+HZ,SAAiBJ,GAEf,IAAMjf,EAAS,GAEf,GAAsB,kBAAXif,EACT,MAAM,IAAIjjB,UAAU,sCAGtB,GAAI/C,MAAMF,QAAQkmB,GAGhB,IAFA,IAAI7e,GAAS,IAEJA,EAAQ6e,EAAOrkB,QACtBoF,EAAOvC,KAAK,CACV6hB,EAAaL,EAAO7e,GAAO,IAC3Bmf,EAAWN,EAAO7e,GAAO,UAGxB,CAEL,IAAI/G,EAEJ,IAAKA,KAAO4lB,EACNJ,EAAI3lB,KAAK+lB,EAAQ5lB,IACnB2G,EAAOvC,KAAK,CAAC6hB,EAAajmB,GAAMkmB,EAAWN,EAAO5lB,KAGxD,CAEA,OAAO2G,CACT,CA5JoBwf,CAAQP,GAClBQ,GAAa,IAERA,EAAYJ,EAAMzkB,SACzB8kB,EAAAA,EAAAA,IAAaX,EAAM,OAAQY,GAI7B,OAAOZ,EAGP,SAASY,EAAQjjB,EAAMkjB,GAKrB,IAJA,IAEIC,EAFAzf,GAAS,IAIJA,EAAQwf,EAAQhlB,QAAQ,CAC/B,IAAMklB,EAASF,EAAQxf,GAEvB,GACE8e,EACEY,EAEAD,EAAcA,EAAY9G,SAASrQ,QAAQoX,QAAUjf,EACrDgf,GAGF,OAGFA,EAAcC,CAChB,CAEA,GAAID,EACF,OAcJ,SAAiBnjB,EAAMkjB,GACrB,IAAME,EAASF,EAAQA,EAAQhlB,OAAS,GAClC+O,EAAO0V,EAAMI,GAAW,GACxB3jB,EAAUujB,EAAMI,GAAW,GAC7BjjB,EAAQ,EAEN4D,EAAQ0f,EAAO/G,SAASrQ,QAAQhM,GAClCqjB,GAAS,EAETC,EAAQ,GAEZrW,EAAKsW,UAAY,EAEjB,IAAI5jB,EAAQsN,EAAK/L,KAAKlB,EAAK3C,OAE3B,KAAOsC,GAAO,CACZ,IAAME,EAAWF,EAAM+D,MAEjB8f,EAAc,CAClB9f,MAAO/D,EAAM+D,MACb+f,MAAO9jB,EAAM8jB,MAEbC,MAAO,GAAF,eAAMR,GAAO,CAAEljB,KAElB3C,EAAQ+B,EAAO,qBAAIO,GAAK,QAAE6jB,KAO9B,GALqB,kBAAVnmB,IACTA,EAAQA,EAAMa,OAAS,EAAI,CAACwD,KAAM,OAAQrE,MAAAA,QAAS8G,IAIvC,IAAV9G,EAAiB,CAQO,MAA1B,GAPIyC,IAAUD,GACZyjB,EAAMviB,KAAK,CACTW,KAAM,OACNrE,MAAO2C,EAAK3C,MAAM8D,MAAMrB,EAAOD,KAI/BtD,MAAMF,QAAQgB,IAChB,EAAAimB,GAAMviB,KAAI,gBAAI1D,SACLA,GACTimB,EAAMviB,KAAK1D,GAGbyC,EAAQD,EAAWF,EAAM,GAAGzB,OAC5BmlB,GAAS,CACX,CAEA,IAAKpW,EAAKnH,OACR,MAGFnG,EAAQsN,EAAK/L,KAAKlB,EAAK3C,MACzB,CAEA,GAAIgmB,EAAQ,OACNvjB,EAAQE,EAAK3C,MAAMa,QACrBolB,EAAMviB,KAAK,CAACW,KAAM,OAAQrE,MAAO2C,EAAK3C,MAAM8D,MAAMrB,MAGpD,EAAAsjB,EAAO/G,UAASvF,OAAM,SAACpT,EAAO,GAAC,eAAK4f,IACtC,MACEA,EAAQ,CAACtjB,GAGX,OAAO0D,EAAQ4f,EAAMplB,MACvB,CAjFWylB,CAAQ3jB,EAAMkjB,EAEzB,CAgFF,EAkDJ,SAASN,EAAa3V,GACpB,MAAuB,kBAATA,EAAoB,IAAIhI,OCrSzB,SAA4BtB,GAC1C,GAAsB,kBAAXA,EACV,MAAM,IAAIrE,UAAU,qBAKrB,OAAOqE,EACLvE,QAAQ,sBAAuB,QAC/BA,QAAQ,KAAM,QACjB,CD2R+CwkB,CAAO3W,GAAO,KAAOA,CACpE,CAUA,SAAS4V,EAAWzjB,GAClB,MAA0B,oBAAZA,EAAyBA,EAAU,kBAAMA,CAAO,CAChE,6FEzSaykB,EAAY,CACvBC,SAKF,SAA2BC,EAASC,EAAIC,GACtC,OAAOC,EAAAA,EAAAA,GAAaH,GAGpB,SAAyBvX,GACvB,OAAgB,OAATA,IAAiB2X,EAAAA,EAAAA,IAAmB3X,GAAQwX,EAAGxX,GAAQyX,EAAIzX,EACpE,GAL8C,aAMhD,EAXE4X,SAAS,oFCEJ,SAASF,EAAaH,EAASC,EAAItiB,EAAM2iB,GAC9C,IAAMC,EAAQD,EAAMA,EAAM,EAAIE,OAAOC,kBACjCvc,EAAO,EACX,OAGA,SAAeuE,GACb,IAAIiY,EAAAA,EAAAA,IAAcjY,GAEhB,OADAuX,EAAQW,MAAMhjB,GACPijB,EAAOnY,GAGhB,OAAOwX,EAAGxX,EACZ,EAGA,SAASmY,EAAOnY,GACd,OAAIiY,EAAAA,EAAAA,IAAcjY,IAASvE,IAASqc,GAClCP,EAAQa,QAAQpY,GACTmY,IAGTZ,EAAQc,KAAKnjB,GACNsiB,EAAGxX,GACZ,CACF,8UChCO,ICWMsY,EAAaC,EAAW,YAQxBC,EAAaD,EAAW,MAexBE,EAAgBF,EAAW,cAS3BG,EAAoBH,EAAW,cAU/BI,EAAmBJ,EAAW,kBAkB9BK,EAAaL,EAAW,uBAW9B,SAASM,EAAa7Y,GAC3B,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,EAEnC,CASO,SAAS8Y,EAA0B9Y,GACxC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,EACvC,CAeO,SAAS2X,EAAmB3X,GACjC,OAAgB,OAATA,GAAiBA,GAAQ,CAClC,CAeO,SAASiY,EAAcjY,GAC5B,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,CACvC,CAiBO,IAAM+Y,EAAoBR,EAAW,MAkB/BS,EAAqBT,EDvKhC,+vCC+KF,SAASA,EAAWU,GAClB,OAQA,SAAejZ,GACb,OAAgB,OAATA,GAAiBiZ,EAAMvgB,KAAK3B,OAAO8I,aAAaG,GACzD,CACF,qCClLO,SAASsK,EAAO4O,EAAM5lB,EAAO6lB,EAAQC,GAC1C,IAIIC,EAJEzlB,EAAMslB,EAAKxnB,OACb4nB,EAAa,EAajB,GAPEhmB,EADEA,EAAQ,GACDA,EAAQM,EAAM,EAAIA,EAAMN,EAEzBA,EAAQM,EAAMA,EAAMN,EAG9B6lB,EAASA,EAAS,EAAIA,EAAS,EAE3BC,EAAM1nB,OAAS,KACjB2nB,EAAatpB,MAAMwpB,KAAKH,IACbI,QAAQlmB,EAAO6lB,GACzB,GAAG7O,OAAO2D,MAAMiL,EAAMG,QAKvB,IAFIF,GAAQ,GAAG7O,OAAO2D,MAAMiL,EAAM,CAAC5lB,EAAO6lB,IAEnCG,EAAaF,EAAM1nB,SACxB2nB,EAAaD,EAAMzkB,MAAM2kB,EAAYA,EAAa,MACvCE,QAAQlmB,EAAO,GACzB,GAAGgX,OAAO2D,MAAMiL,EAAMG,GACvBC,GAAc,IACdhmB,GAAS,GAGf,CAcO,SAASiB,EAAK2kB,EAAME,GACzB,OAAIF,EAAKxnB,OAAS,GAChB4Y,EAAO4O,EAAMA,EAAKxnB,OAAQ,EAAG0nB,GACtBF,GAGFE,CACT,wIC/CO,SAASK,EAAkBzZ,GAChC,OACW,OAATA,IACA8Y,EAAAA,EAAAA,IAA0B9Y,KAC1B+Y,EAAAA,EAAAA,IAAkB/Y,GAEX,GAGLgZ,EAAAA,EAAAA,IAAmBhZ,GACd,OADT,CAGF,mFCxBMzQ,EAAiB,CAAC,EAAEA,eAQnB,SAASmqB,EAAkBC,GAKhC,IAHA,IAAMC,EAAM,CAAC,EACT1iB,GAAS,IAEJA,EAAQyiB,EAAWjoB,QAC1BmoB,EAAgBD,EAAKD,EAAWziB,IAGlC,OAAO0iB,CACT,CASA,SAASC,EAAgBD,EAAKE,GAE5B,IAAIC,EAEJ,IAAKA,KAAQD,EAAW,CACtB,IACME,GADQzqB,EAAeS,KAAK4pB,EAAKG,GAAQH,EAAIG,QAAQpiB,KACpCiiB,EAAIG,GAAQ,CAAC,GAC9BE,EAAQH,EAAUC,GAEpB/Z,OAAI,EAER,IAAKA,KAAQia,EAAO,CACb1qB,EAAeS,KAAKgqB,EAAMha,KAAOga,EAAKha,GAAQ,IACnD,IAAMnP,EAAQopB,EAAMja,GACpBka,EAEEF,EAAKha,GACLjQ,MAAMF,QAAQgB,GAASA,EAAQA,EAAQ,CAACA,GAAS,GAErD,CACF,CACF,CAUA,SAASqpB,EAAWC,EAAUjB,GAK5B,IAJA,IAAIhiB,GAAS,EAEPkjB,EAAS,KAENljB,EAAQgiB,EAAKxnB,SAEE,UAApBwnB,EAAKhiB,GAAOmjB,IAAkBF,EAAWC,GAAQ7lB,KAAK2kB,EAAKhiB,KAG/DoT,EAAAA,EAAAA,GAAO6P,EAAU,EAAG,EAAGC,EACzB,qCCpEO,SAASE,EAAgCzpB,EAAOyc,GACrD,IAAMtN,EAAO+X,OAAOwC,SAAS1pB,EAAOyc,GAEpC,OAEEtN,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,SAAX,MAAPA,IACkB,SAAX,MAAPA,IACDA,EAAO,QAEA,SAGFjJ,OAAO8I,aAAaG,EAC7B,4HC3BMwa,EACJ,oEAWK,SAASC,EAAa5pB,GAC3B,OAAOA,EAAM+B,QAAQ4nB,EAA4BE,EACnD,CAQA,SAASA,EAAOC,EAAIC,EAAIC,GACtB,GAAID,EAEF,OAAOA,EAKT,GAAa,KAFAC,EAAGnF,WAAW,GAEV,CACf,IAAM/K,EAAOkQ,EAAGnF,WAAW,GACrBoF,EAAe,MAATnQ,GAAyB,KAATA,EAC5B,OAAO2P,EAAAA,EAAAA,GAAgCO,EAAGlmB,MAAMmmB,EAAM,EAAI,GAAIA,EAAM,GAAK,GAC3E,CAEA,OAAOxF,EAAAA,EAAAA,GAA8BuF,IAAOF,CAC9C,oCCjCO,SAASI,EAAoBlqB,GAClC,OACEA,EACG+B,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBoT,cACAgV,aAEP,oECLO,SAASC,EAAWf,EAAYgB,EAAQC,GAK7C,IAHA,IAAMC,EAAS,GACXlkB,GAAS,IAEJA,EAAQgjB,EAAWxoB,QAAQ,CAClC,IAAMgJ,EAAUwf,EAAWhjB,GAAO+jB,WAE9BvgB,IAAY0gB,EAAOC,SAAS3gB,KAC9BwgB,EAASxgB,EAAQwgB,EAAQC,GACzBC,EAAO7mB,KAAKmG,GAEhB,CAEA,OAAOwgB,CACT,oyBC3Be,SAASI,EAAWC,EAAQC,EAAMC,GAa/C,OAXEH,GADE,EAAAI,EAAA,KACWC,QAAQC,UAAUnU,OAElB,SAAoB8T,EAAQC,EAAMC,GAC7C,IAAI7J,EAAI,CAAC,MACTA,EAAErd,KAAK0Z,MAAM2D,EAAG4J,GAChB,IACIrX,EAAW,IADG9L,SAASoP,KAAKwG,MAAMsN,EAAQ3J,IAG9C,OADI6J,IAAO,EAAApN,EAAA,GAAelK,EAAUsX,EAAMnsB,WACnC6U,CACT,EAEKmX,EAAWrN,MAAM,KAAMzc,UAChC,CCZe,SAASqqB,EAAiBJ,GACvC,IAAIK,EAAwB,oBAAR/lB,IAAqB,IAAIA,SAAQ4B,EAuBrD,OAtBAkkB,EAAmB,SAA0BJ,GAC3C,GAAc,OAAVA,ICPkCM,EDOEN,GCNsB,IAAzDpjB,SAAS5I,SAASO,KAAK+rB,GAAIvc,QAAQ,kBDMQ,OAAOic,ECP5C,IAA2BM,EDQtC,GAAqB,oBAAVN,EACT,MAAM,IAAI3oB,UAAU,sDAEtB,GAAsB,qBAAXgpB,EAAwB,CACjC,GAAIA,EAAOE,IAAIP,GAAQ,OAAOK,EAAOtb,IAAIib,GACzCK,EAAOrf,IAAIgf,EAAOQ,EACpB,CACA,SAASA,IACP,OAAO,EAAUR,EAAOjqB,WAAW,EAAA0qB,EAAA,GAAevoB,MAAMrD,YAC1D,CASA,OARA2rB,EAAQ3sB,UAAYD,OAAO+e,OAAOqN,EAAMnsB,UAAW,CACjDgB,YAAa,CACXO,MAAOorB,EACPtrB,YAAY,EACZI,UAAU,EACVH,cAAc,MAGX,EAAAyd,EAAA,GAAe4N,EAASR,EACjC,EACOI,EAAiBJ,EAC1B,CEOO,SAASU,EAAkBtrB,GAEhC,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BwC,EAASxC,EAAMwC,UAIpB,UAAWxC,GAAS,QAASA,EACxBwC,EAASxC,GAId,SAAUA,GAAS,WAAYA,EAC1BurB,EAAMvrB,GAIR,GAnBE,EAoBX,CAMA,SAASurB,EAAMA,GACb,OAAOllB,EAAMklB,GAASA,EAAM7oB,MAAQ,IAAM2D,EAAMklB,GAASA,EAAMppB,OACjE,CAMA,SAASK,EAAS2B,GAChB,OAAOonB,EAAMpnB,GAAOA,EAAI1B,OAAS,IAAM8oB,EAAMpnB,GAAOA,EAAIpB,IAC1D,CAMA,SAASsD,EAAMrG,GACb,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,CACtD,CC1EO,IAAMwrB,EAAY,0CAcvB,WAAYjoB,EAAQkoB,EAAOC,GAAQ,sBAEjC,IAAMC,EAAQ,CAAC,KAAM,MAEjBnpB,EAAW,CAEbC,MAAO,CAACC,KAAM,KAAMP,OAAQ,MAE5BY,IAAK,CAACL,KAAM,KAAMP,OAAQ,OAU5B,GAPA,eAEqB,kBAAVspB,IACTC,EAASD,EACTA,OAAQ3kB,GAGY,kBAAX4kB,EAAqB,CAC9B,IAAMrlB,EAAQqlB,EAAO/c,QAAQ,MAEd,IAAXtI,EACFslB,EAAM,GAAKD,GAEXC,EAAM,GAAKD,EAAO5nB,MAAM,EAAGuC,GAC3BslB,EAAM,GAAKD,EAAO5nB,MAAMuC,EAAQ,GAEpC,CAiIA,OA/HIolB,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAMjpB,WAERA,EAAWipB,EAAMjpB,UAIZ,UAAWipB,GAAS,QAASA,EAEpCjpB,EAAWipB,GAGJ,SAAUA,GAAS,WAAYA,KACtCjpB,EAASC,MAAQgpB,IAKrB,EAAK5rB,KAAOyrB,EAAkBG,IAAU,MAExC,EAAKG,QAA4B,kBAAXroB,EAAsBA,EAAOqoB,QAAUroB,EAE7D,EAAK8iB,MAAQ,GAES,kBAAX9iB,GAAuBA,EAAO8iB,QACvC,EAAKA,MAAQ9iB,EAAO8iB,OAQtB,EAAK9iB,OAAS,EAAKqoB,QAanB,EAAKC,MAOL,EAAKnpB,KAAOF,EAASC,MAAMC,KAO3B,EAAKP,OAASK,EAASC,MAAMN,OAS7B,EAAKK,SAAWA,EAOhB,EAAKQ,OAAS2oB,EAAM,GAOpB,EAAKG,OAASH,EAAM,GAOpB,EAAKI,KAYL,EAAKC,OAQL,EAAKC,SAOL,EAAKC,IAOL,EAAKC,KACL,CACF,CAAC,iBA3KsB,CA2KtB,EA3K+B7oB,QA8KlCkoB,EAAa/sB,UAAUstB,KAAO,GAC9BP,EAAa/sB,UAAUoB,KAAO,GAC9B2rB,EAAa/sB,UAAU8E,OAAS,GAChCioB,EAAa/sB,UAAUmtB,QAAU,GACjCJ,EAAa/sB,UAAU4nB,MAAQ,GAC/BmF,EAAa/sB,UAAUotB,MAAQ,KAC/BL,EAAa/sB,UAAU0D,OAAS,KAChCqpB,EAAa/sB,UAAUiE,KAAO,KAC9B8oB,EAAa/sB,UAAUuE,OAAS,KAChCwoB,EAAa/sB,UAAUqtB,OAAS,KAChCN,EAAa/sB,UAAU+D,SAAW,KC9I3B,IAAM4pB,EAAO,CAACC,SASrB,SAAkBD,EAAME,GACtB,QAAYxlB,IAARwlB,GAAoC,kBAARA,EAC9B,MAAM,IAAIrqB,UAAU,mCAGtBsqB,EAAWH,GACX,IAIII,EAJA/pB,EAAQ,EACRM,GAAO,EACPsD,EAAQ+lB,EAAKvrB,OAIjB,QAAYiG,IAARwlB,GAAoC,IAAfA,EAAIzrB,QAAgByrB,EAAIzrB,OAASurB,EAAKvrB,OAAQ,CACrE,KAAOwF,KACL,GAA+B,KAA3B+lB,EAAKvH,WAAWxe,IAGlB,GAAImmB,EAAc,CAChB/pB,EAAQ4D,EAAQ,EAChB,KACF,OACStD,EAAM,IAGfypB,GAAe,EACfzpB,EAAMsD,EAAQ,GAIlB,OAAOtD,EAAM,EAAI,GAAKqpB,EAAKtoB,MAAMrB,EAAOM,EAC1C,CAEA,GAAIupB,IAAQF,EACV,MAAO,GAGT,IAAIK,GAAoB,EACpBC,EAAWJ,EAAIzrB,OAAS,EAE5B,KAAOwF,KACL,GAA+B,KAA3B+lB,EAAKvH,WAAWxe,IAGlB,GAAImmB,EAAc,CAChB/pB,EAAQ4D,EAAQ,EAChB,KACF,OAEIomB,EAAmB,IAGrBD,GAAe,EACfC,EAAmBpmB,EAAQ,GAGzBqmB,GAAY,IAEVN,EAAKvH,WAAWxe,KAAWimB,EAAIzH,WAAW6H,KACxCA,EAAW,IAGb3pB,EAAMsD,IAKRqmB,GAAY,EACZ3pB,EAAM0pB,IAMVhqB,IAAUM,EACZA,EAAM0pB,EACG1pB,EAAM,IACfA,EAAMqpB,EAAKvrB,QAGb,OAAOurB,EAAKtoB,MAAMrB,EAAOM,EAC3B,EAzF+B4pB,QA+F/B,SAAiBP,GAGf,GAFAG,EAAWH,GAES,IAAhBA,EAAKvrB,OACP,MAAO,IAGT,IAGI+rB,EAHA7pB,GAAO,EACPsD,EAAQ+lB,EAAKvrB,OAKjB,OAASwF,GACP,GAA+B,KAA3B+lB,EAAKvH,WAAWxe,IAClB,GAAIumB,EAAgB,CAClB7pB,EAAMsD,EACN,KACF,OACUumB,IAEVA,GAAiB,GAIrB,OAAO7pB,EAAM,EACc,KAAvBqpB,EAAKvH,WAAW,GACd,IACA,IACM,IAAR9hB,GAAoC,KAAvBqpB,EAAKvH,WAAW,GAC7B,KACAuH,EAAKtoB,MAAM,EAAGf,EACpB,EA/HwC8pB,QAqIxC,SAAiBT,GACfG,EAAWH,GAEX,IASIQ,EATAvmB,EAAQ+lB,EAAKvrB,OAEbkC,GAAO,EACP+pB,EAAY,EACZC,GAAY,EAGZC,EAAc,EAIlB,KAAO3mB,KAAS,CACd,IAAM8I,EAAOid,EAAKvH,WAAWxe,GAE7B,GAAa,KAAT8I,EAWApM,EAAM,IAGR6pB,GAAiB,EACjB7pB,EAAMsD,EAAQ,GAGH,KAAT8I,EAEE4d,EAAW,EACbA,EAAW1mB,EACc,IAAhB2mB,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAzBf,GAAIJ,EAAgB,CAClBE,EAAYzmB,EAAQ,EACpB,KACF,CAwBJ,CAEA,GACE0mB,EAAW,GACXhqB,EAAM,GAEU,IAAhBiqB,GAEiB,IAAhBA,GAAqBD,IAAahqB,EAAM,GAAKgqB,IAAaD,EAAY,EAEvE,MAAO,GAGT,OAAOV,EAAKtoB,MAAMipB,EAAUhqB,EAC9B,EAlMiD2J,KAwMjD,WAGY,IAFV,IAEIugB,EAFA5mB,GAAS,EAEH,mBAHK6mB,EAAQ,yBAARA,EAAQ,gBAKvB,OAAS7mB,EAAQ6mB,EAASrsB,QACxB0rB,EAAWW,EAAS7mB,IAEhB6mB,EAAS7mB,KACX4mB,OACanmB,IAAXmmB,EAAuBC,EAAS7mB,GAAS4mB,EAAS,IAAMC,EAAS7mB,IAIvE,YAAkBS,IAAXmmB,EAAuB,IAUhC,SAAmBb,GACjBG,EAAWH,GAEX,IAAMe,EAAkC,KAAvBf,EAAKvH,WAAW,GAG7B7kB,EAoBN,SAAyBosB,EAAMgB,GAC7B,IAMIje,EAEAke,EARApnB,EAAS,GACTqnB,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPnnB,GAAS,EAMb,OAASA,GAAS+lB,EAAKvrB,QAAQ,CAC7B,GAAIwF,EAAQ+lB,EAAKvrB,OACfsO,EAAOid,EAAKvH,WAAWxe,OAClB,IAAa,KAAT8I,EACT,MAEAA,EAAO,EACT,CAEA,GAAa,KAATA,EAAuB,CACzB,GAAIoe,IAAclnB,EAAQ,GAAc,IAATmnB,QAExB,GAAID,IAAclnB,EAAQ,GAAc,IAATmnB,EAAY,CAChD,GACEvnB,EAAOpF,OAAS,GACM,IAAtBysB,GACyC,KAAzCrnB,EAAO4e,WAAW5e,EAAOpF,OAAS,IACO,KAAzCoF,EAAO4e,WAAW5e,EAAOpF,OAAS,GAElC,GAAIoF,EAAOpF,OAAS,GAGlB,IAFAwsB,EAAiBpnB,EAAO1D,YAAY,QAEb0D,EAAOpF,OAAS,EAAG,CACpCwsB,EAAiB,GACnBpnB,EAAS,GACTqnB,EAAoB,GAGpBA,GADArnB,EAASA,EAAOnC,MAAM,EAAGupB,IACExsB,OAAS,EAAIoF,EAAO1D,YAAY,KAG7DgrB,EAAYlnB,EACZmnB,EAAO,EACP,QACF,OACK,GAAIvnB,EAAOpF,OAAS,EAAG,CAC5BoF,EAAS,GACTqnB,EAAoB,EACpBC,EAAYlnB,EACZmnB,EAAO,EACP,QACF,CAGEJ,IACFnnB,EAASA,EAAOpF,OAAS,EAAIoF,EAAS,MAAQ,KAC9CqnB,EAAoB,EAExB,MACMrnB,EAAOpF,OAAS,EAClBoF,GAAU,IAAMmmB,EAAKtoB,MAAMypB,EAAY,EAAGlnB,GAE1CJ,EAASmmB,EAAKtoB,MAAMypB,EAAY,EAAGlnB,GAGrCinB,EAAoBjnB,EAAQknB,EAAY,EAG1CA,EAAYlnB,EACZmnB,EAAO,CACT,MAAoB,KAATre,GAAyBqe,GAAQ,EAC1CA,IAEAA,GAAQ,CAEZ,CAEA,OAAOvnB,CACT,CAnGcwnB,CAAgBrB,GAAOe,GAEd,IAAjBntB,EAAMa,QAAiBssB,IACzBntB,EAAQ,KAGNA,EAAMa,OAAS,GAA0C,KAArCurB,EAAKvH,WAAWuH,EAAKvrB,OAAS,KACpDb,GAAS,KAGX,OAAOmtB,EAAW,IAAMntB,EAAQA,CAClC,CA3BsC0tB,CAAUT,EAChD,EAvNuDU,IAAK,KA8U5D,SAASpB,EAAWH,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAInqB,UACR,mCAAqC2rB,KAAKC,UAAUzB,GAG1D,CCpYO,IAAM0B,EAAO,CAACC,IAErB,WACE,MAAO,GACT,GCgBO,SAASC,EAAMC,GACpB,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAcC,MAEdD,EAAcvC,MAElB,CCvBO,SAASyC,EAAU/B,GACxB,GAAoB,kBAATA,EACTA,EAAO,IAAIgC,IAAIhC,QACV,IAAK4B,EAAM5B,GAAO,CAEvB,IAAMjpB,EAAQ,IAAIlB,UAChB,+EACEmqB,EACA,KAGJ,MADAjpB,EAAMgM,KAAO,uBACPhM,CACR,CAEA,GAAsB,UAAlBipB,EAAKiC,SAAsB,CAE7B,IAAMlrB,EAAQ,IAAIlB,UAAU,kCAE5B,MADAkB,EAAMgM,KAAO,yBACPhM,CACR,CAEA,OAMF,SAA6B+oB,GAC3B,GAAqB,KAAjBA,EAAIoC,SAAiB,CAEvB,IAAMnrB,EAAQ,IAAIlB,UAChB,wDAGF,MADAkB,EAAMgM,KAAO,4BACPhM,CACR,CAEA,IAAMorB,EAAWrC,EAAIqC,SACjBloB,GAAS,EAEb,OAASA,EAAQkoB,EAAS1tB,QACxB,GACiC,KAA/B0tB,EAAS1J,WAAWxe,IACe,KAAnCkoB,EAAS1J,WAAWxe,EAAQ,GAC5B,CACA,IAAMmoB,EAAQD,EAAS1J,WAAWxe,EAAQ,GAC1C,GAAc,KAAVmoB,GAAoC,MAAVA,EAAyB,CAErD,IAAMrrB,EAAQ,IAAIlB,UAChB,uDAGF,MADAkB,EAAMgM,KAAO,4BACPhM,CACR,CACF,CAGF,OAAOsrB,mBAAmBF,EAC5B,CArCSG,CAAoBtC,EAC7B,CC0BA,IAAMuC,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAEpDC,EAAK,WAkBhB,WAAY5uB,GAEV,IAAIJ,GAFa,eAQfA,EAJGI,EAEuB,kBAAVA,GAAsB6uB,EAAO7uB,GAEnC,CAACA,MAAAA,GACFguB,EAAMhuB,GACL,CAACosB,KAAMpsB,GAGPA,EARA,CAAC,EAiBb8C,KAAK0H,KAAO,CAAC,EAMb1H,KAAKgsB,SAAW,GAOhBhsB,KAAKisB,QAAU,GAMfjsB,KAAKirB,IAAMD,EAAKC,MAOhBjrB,KAAK9C,MAUL8C,KAAKksB,OASLlsB,KAAKmD,OASLnD,KAAK6H,IAML,IAFA,IAcIpG,EAdA8B,GAAS,IAEJA,EAAQsoB,EAAM9tB,QAAQ,CAC7B,IAAM0D,EAAOoqB,EAAMtoB,GAIf9B,KAAQ3E,QAA6BkH,IAAlBlH,EAAQ2E,KAE7BzB,KAAKyB,GAAiB,YAATA,GAAqB,OAAI3E,EAAQ2E,IAAS3E,EAAQ2E,GAEnE,CAMA,IAAKA,KAAQ3E,EAEN+uB,EAAMnE,SAASjmB,KAAOzB,KAAKyB,GAAQ3E,EAAQ2E,GAEpD,CAuMC,OArMD,0BAIA,WACE,OAAOzB,KAAKisB,QAAQjsB,KAAKisB,QAAQluB,OAAS,EAC5C,EAEA,IAOA,SAASurB,GACH4B,EAAM5B,KACRA,EAAO+B,EAAU/B,IAGnB6C,EAAe7C,EAAM,QAEjBtpB,KAAKspB,OAASA,GAChBtpB,KAAKisB,QAAQrrB,KAAK0oB,EAEtB,GAEA,mBAGA,WACE,MAA4B,kBAAdtpB,KAAKspB,KAAoBA,EAAKO,QAAQ7pB,KAAKspB,WAAQtlB,CACnE,EAEA,IAIA,SAAY6lB,GACVJ,EAAWzpB,KAAKupB,SAAU,WAC1BvpB,KAAKspB,KAAOA,EAAK1f,KAAKigB,GAAW,GAAI7pB,KAAKupB,SAC5C,GAEA,oBAGA,WACE,MAA4B,kBAAdvpB,KAAKspB,KAAoBA,EAAKC,SAASvpB,KAAKspB,WAAQtlB,CACpE,EAEA,IAMA,SAAaulB,GACX4C,EAAe5C,EAAU,YACzB6C,EAAW7C,EAAU,YACrBvpB,KAAKspB,KAAOA,EAAK1f,KAAK5J,KAAK6pB,SAAW,GAAIN,EAC5C,GAEA,mBAGA,WACE,MAA4B,kBAAdvpB,KAAKspB,KAAoBA,EAAKS,QAAQ/pB,KAAKspB,WAAQtlB,CACnE,EAEA,IAMA,SAAY+lB,GAIV,GAHAqC,EAAWrC,EAAS,WACpBN,EAAWzpB,KAAK6pB,QAAS,WAErBE,EAAS,CACX,GAA8B,KAA1BA,EAAQhI,WAAW,GACrB,MAAM,IAAIvhB,MAAM,iCAGlB,GAAIupB,EAAQrC,SAAS,IAAK,GACxB,MAAM,IAAIlnB,MAAM,yCAEpB,CAEAR,KAAKspB,KAAOA,EAAK1f,KAAK5J,KAAK6pB,QAAS7pB,KAAKqsB,MAAQtC,GAAW,IAC9D,GAEA,gBAGA,WACE,MAA4B,kBAAd/pB,KAAKspB,KACfA,EAAKC,SAASvpB,KAAKspB,KAAMtpB,KAAK+pB,cAC9B/lB,CACN,EAEA,IAMA,SAASqoB,GACPF,EAAeE,EAAM,QACrBD,EAAWC,EAAM,QACjBrsB,KAAKspB,KAAOA,EAAK1f,KAAK5J,KAAK6pB,SAAW,GAAIwC,GAAQrsB,KAAK+pB,SAAW,IACpE,GAEA,sBASA,SAASuC,GACP,OAAQtsB,KAAK9C,OAAS,IAAIpB,SAASwwB,EACrC,GAEA,qBAcA,SAAQ7rB,EAAQkoB,EAAOC,GACrB,IAAME,EAAU,IAAIJ,EAAajoB,EAAQkoB,EAAOC,GAWhD,OATI5oB,KAAKspB,OACPR,EAAQ/rB,KAAOiD,KAAKspB,KAAO,IAAMR,EAAQ/rB,KACzC+rB,EAAQG,KAAOjpB,KAAKspB,MAGtBR,EAAQC,OAAQ,EAEhB/oB,KAAKgsB,SAASprB,KAAKkoB,GAEZA,CACT,GAEA,kBAaA,SAAKroB,EAAQkoB,EAAOC,GAClB,IAAME,EAAU9oB,KAAK8oB,QAAQroB,EAAQkoB,EAAOC,GAI5C,OAFAE,EAAQC,MAAQ,KAETD,CACT,GAEA,kBAeA,SAAKroB,EAAQkoB,EAAOC,GAClB,IAAME,EAAU9oB,KAAK8oB,QAAQroB,EAAQkoB,EAAOC,GAI5C,MAFAE,EAAQC,OAAQ,EAEVD,CACR,KAAC,EA9Te,GAwUlB,SAASsD,EAAWG,EAAMxvB,GACxB,GAAIwvB,GAAQA,EAAK7E,SAAS4B,EAAKuB,KAC7B,MAAM,IAAIrqB,MACR,IAAMzD,EAAO,uCAAyCusB,EAAKuB,IAAM,IAGvE,CASA,SAASsB,EAAeI,EAAMxvB,GAC5B,IAAKwvB,EACH,MAAM,IAAI/rB,MAAM,IAAMzD,EAAO,oBAEjC,CASA,SAAS0sB,EAAWH,EAAMvsB,GACxB,IAAKusB,EACH,MAAM,IAAI9oB,MAAM,YAAczD,EAAO,kCAEzC,4CC/Ze,SAASyvB,EAASrwB,GAC/B,OAAO,EAAAswB,EAAA,GAAetwB,KAAQ,EAAAuwB,EAAA,GAAgBvwB,KAAQ,EAAAwwB,EAAA,GAA2BxwB,KAAQ,EAAAywB,EAAA,IAC3F,CCCO,SAASC,EAAKxsB,GACnB,GAAIA,EACF,MAAMA,CAEV,eCXe,SAAS/D,EAAcY,GACrC,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,IAAMvB,EAAYD,OAAO6sB,eAAerrB,GACxC,OAAsB,OAAdvB,GAAsBA,IAAcD,OAAOC,WAAkD,OAArCD,OAAO6sB,eAAe5sB,OAA0B4G,OAAOwB,eAAe7G,MAAYqF,OAAOkF,YAAYvK,EACtK,CCUO,SAAS4vB,IAEd,IAAMC,EAAM,GAENC,EAAW,CAACC,IAKlB,WAAwB,2BAAR7hB,EAAM,yBAANA,EAAM,gBACpB,IAAI8hB,GAAmB,EAEjB5Z,EAAWlI,EAAO+hB,MAExB,GAAwB,oBAAb7Z,EACT,MAAM,IAAInU,UAAU,2CAA6CmU,IAWnE,SAAS3L,EAAKtH,GACZ,IAAM+nB,EAAK2E,IAAMG,GACb3pB,GAAS,EAEb,GAAIlD,EACFiT,EAASjT,OADX,CAKA,2BATsBihB,EAAM,iCAANA,EAAM,kBAU5B,OAAS/d,EAAQ6H,EAAOrN,QACA,OAAlBujB,EAAO/d,SAAqCS,IAAlBsd,EAAO/d,KACnC+d,EAAO/d,GAAS6H,EAAO7H,IAK3B6H,EAASkW,EAGL8G,EA6BH,SAAcgF,EAAY9Z,GAE/B,IAAImU,EAEJ,OAAO4F,EAQP,SAASA,IAAuB,2BAAZ3H,EAAU,yBAAVA,EAAU,gBAC5B,IAEIviB,EAFEmqB,EAAoBF,EAAWrvB,OAAS2nB,EAAW3nB,OAIrDuvB,GACF5H,EAAW9kB,KAAKgH,GAGlB,IACEzE,EAASiqB,EAAW9S,MAAMta,KAAM0lB,EAalC,CAZE,MAAOrlB,GAOP,GAAIitB,GAAqB7F,EACvB,MAPsCpnB,EAUxC,OAAOuH,EAViCvH,EAW1C,CAEKitB,IACCnqB,aAAkBd,QACpBc,EAAOoqB,KAAKA,EAAM3lB,GACTzE,aAAkB3C,MAC3BoH,EAAKzE,GAELoqB,EAAKpqB,GAGX,CAMA,SAASyE,EAAKvH,GACZ,IAAKonB,EAAQ,CACXA,GAAS,EAAI,2BAFOnG,EAAM,iCAANA,EAAM,kBAG1BhO,EAAQ,cAACjT,GAAK,OAAKihB,GACrB,CACF,CAOA,SAASiM,EAAKrwB,GACZ0K,EAAK,KAAM1K,EACb,CACF,CA/FQswB,CAAKpF,EAAIzgB,GAAK,aAAI2Z,GAElBhO,EAAQ,cAAC,MAAI,OAAKgO,GAhBpB,CAkBF,GAjCI,cAAC,MAAI,eAAKlW,IAkChB,EAhDuBqiB,IAmDvB,SAAaC,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAIvuB,UACR,+CAAiDuuB,GAKrD,OADAX,EAAInsB,KAAK8sB,GACFV,CACT,GA1DA,OAAOA,CA2DT,CCtDO,IAAMW,EAQb,SAAShU,IACP,IAMIiU,EANEC,EAAef,IAEfgB,EAAY,GAEdC,EAAY,CAAC,EAGbC,GAAe,EA2BnB,OAvBAC,EAAUvmB,KA6CV,SAAclL,EAAKU,GACjB,GAAmB,kBAARV,EAET,OAAyB,IAArBqB,UAAUE,QACZmwB,EAAe,OAAQN,GACvBG,EAAUvxB,GAAOU,EACV+wB,GAIDjM,EAAI3lB,KAAK0xB,EAAWvxB,IAAQuxB,EAAUvxB,IAAS,KAIzD,GAAIA,EAGF,OAFA0xB,EAAe,OAAQN,GACvBG,EAAYvxB,EACLyxB,EAIT,OAAOF,CACT,EAlEAE,EAAUE,YAASnqB,EACnBiqB,EAAUG,cAAWpqB,EAGrBiqB,EAAUI,OAiEV,WACE,GAAIT,EACF,OAAOK,EAGT,OAASD,EAAcF,EAAU/vB,QAAQ,CACvC,QAA+B+vB,EAAUE,IAAlCM,EAAQ,KAAKxxB,EAAO,WAE3B,IAAmB,IAAfA,EAAQ,GAAZ,EAImB,IAAfA,EAAQ,KACVA,EAAQ,QAAKkH,GAIf,IAAMuqB,EAAcD,EAASjyB,KAAI,MAAbiyB,EAAQ,CAAML,GAAS,eAAKnxB,KAErB,oBAAhByxB,GACTV,EAAaJ,IAAIc,EAVnB,CAYF,CAKA,OAHAX,GAAS,EACTI,EAAc5J,OAAOC,kBAEd4J,CACT,EA1FAA,EAAUH,UAAYA,EAEtBG,EAAUR,IA+FV,SAAavwB,GAAmB,2BAATJ,EAAO,iCAAPA,EAAO,kBAE5B,IAAIqlB,EAIJ,GAFA+L,EAAe,MAAON,GAER,OAAV1wB,QAA4B8G,IAAV9G,QAEf,GAAqB,oBAAVA,EAChBsxB,EAAS,cAACtxB,GAAK,OAAKJ,QACf,IAAqB,kBAAVI,EAOhB,MAAM,IAAIiC,UAAU,+BAAiCjC,EAAQ,KANzDd,MAAMF,QAAQgB,GAChBuxB,EAAQvxB,GAERwxB,EAAUxxB,EAId,CAEIilB,IACF4L,EAAU5L,SAAWzmB,OAAOsV,OAAO+c,EAAU5L,UAAY,CAAC,EAAGA,IAG/D,OAAO8L,EAMP,SAASvH,EAAIxpB,GACX,GAAqB,oBAAVA,EACTsxB,EAAUtxB,OACL,IAAqB,kBAAVA,EAQhB,MAAM,IAAIiC,UAAU,+BAAiCjC,EAAQ,KAP7D,GAAId,MAAMF,QAAQgB,GAAQ,CACxB,QAA6BA,GAAtByxB,EAAM,KAAK7xB,EAAO,WACzB0xB,EAAS,cAACG,GAAM,eAAK7xB,IACvB,MACE4xB,EAAUxxB,EAId,CACF,CAMA,SAASwxB,EAAUvrB,GACjBsrB,EAAQtrB,EAAOyrB,SAEXzrB,EAAOgf,WACTA,EAAWzmB,OAAOsV,OAAOmR,GAAY,CAAC,EAAGhf,EAAOgf,UAEpD,CAMA,SAASsM,EAAQG,GACf,IAAIrrB,GAAS,EAEb,GAAgB,OAAZqrB,QAAgC5qB,IAAZ4qB,OAEjB,KAAIxyB,MAAMF,QAAQ0yB,GAMvB,MAAM,IAAIzvB,UAAU,oCAAsCyvB,EAAU,KALpE,OAASrrB,EAAQqrB,EAAQ7wB,QAAQ,CAE/B2oB,EADckI,EAAQrrB,GAExB,CAGF,CACF,CAOA,SAASirB,EAAUG,EAAQzxB,GAKzB,IAJA,IAEI2xB,EAFAtrB,GAAS,IAIJA,EAAQuqB,EAAU/vB,QACzB,GAAI+vB,EAAUvqB,GAAO,KAAOorB,EAAQ,CAClCE,EAAQf,EAAUvqB,GAClB,KACF,CAGEsrB,GACEC,EAAWD,EAAM,KAAOC,EAAW5xB,KACrCA,EAAQM,GAAO,EAAMqxB,EAAM,GAAI3xB,IAGjC2xB,EAAM,GAAK3xB,GAGX4wB,EAAUltB,KAAK,MAAD,qBAAK/C,WAEvB,CACF,EApMAowB,EAAU7M,MAuMV,SAAe2N,GACbd,EAAUI,SACV,IAAMpF,EAAO+F,EAAMD,GACbZ,EAASF,EAAUE,OAGzB,GAFAc,EAAa,QAASd,GAElBe,EAAQf,EAAQ,SAElB,OAAO,IAAIA,EAAO/qB,OAAO6lB,GAAOA,GAAM7H,QAIxC,OAAO+M,EAAO/qB,OAAO6lB,GAAOA,EAC9B,EAnNAgF,EAAUlD,UAsNV,SAAmBlrB,EAAMkvB,GACvBd,EAAUI,SACV,IAAMpF,EAAO+F,EAAMD,GACbX,EAAWH,EAAUG,SAI3B,GAHAe,EAAe,YAAaf,GAC5BgB,EAAWvvB,GAEPqvB,EAAQd,EAAU,WAEpB,OAAO,IAAIA,EAASvuB,EAAMopB,GAAMoG,UAIlC,OAAOjB,EAASvuB,EAAMopB,EACxB,EAlOAgF,EAAUhB,IA0OV,SAAaptB,EAAMkvB,EAAKzb,GACtB8b,EAAWvvB,GACXouB,EAAUI,SAEL/a,GAA2B,oBAARyb,IACtBzb,EAAWyb,EACXA,OAAM/qB,GAGR,IAAKsP,EACH,OAAO,IAAIjR,QAAQitB,GAUrB,SAASA,EAASvoB,EAASwoB,GAUzB,SAAS3nB,EAAKvH,EAAO6hB,EAAM+G,GACzB/G,EAAOA,GAAQriB,EACXQ,EACFkvB,EAAOlvB,GACE0G,EACTA,EAAQmb,GAGR5O,EAAS,KAAM4O,EAAM+G,EAEzB,CAlBA4E,EAAaZ,IAAIptB,EAAMmvB,EAAMD,GAAMnnB,EAmBrC,CA5BA0nB,EAAS,KAAMhc,EA6BjB,EAnRA2a,EAAUuB,QAsRV,SAAiB3vB,EAAMopB,GAErB,IAAI9lB,EAEAssB,EAOJ,OALAxB,EAAUhB,IAAIptB,EAAMopB,EAAMrhB,GAE1B8nB,EAAW,UAAW,MAAOD,GAGtBtsB,EAOP,SAASyE,EAAKvH,EAAO6hB,GACnB2K,EAAKxsB,GACL8C,EAAS+e,EACTuN,GAAW,CACb,CACF,EA3SAxB,EAAU5lB,QAkTV,SAAiB0mB,EAAKzb,GAKpB,GAJA2a,EAAUI,SACVY,EAAa,UAAWhB,EAAUE,QAClCgB,EAAe,UAAWlB,EAAUG,WAE/B9a,EACH,OAAO,IAAIjR,QAAQitB,GAUrB,SAASA,EAASvoB,EAASwoB,GACzB,IAAMtG,EAAO+F,EAAMD,GA0BnB,SAASnnB,EAAKvH,EAAO4oB,GACf5oB,IAAU4oB,EACZsG,EAAOlvB,GACE0G,EACTA,EAAQkiB,GAGR3V,EAAS,KAAM2V,EAEnB,CAjCAgF,EAAUhB,IAAIgB,EAAU7M,MAAM6H,GAAOA,GAAM,SAAC5oB,EAAO6hB,EAAM+G,GACvD,IAAI5oB,GAAU6hB,GAAS+G,EAEhB,CAEL,IAAM9lB,EAAS8qB,EAAUlD,UAAU7I,EAAM+G,QAE1BjlB,IAAXb,GAAmC,OAAXA,IAsMZ,kBADIjG,EAnMYiG,IAoMJnB,EAAS9E,GAnMnC+rB,EAAK/rB,MAAQiG,EAEb8lB,EAAK9lB,OAASA,GAGhByE,EAAKvH,EAAO4oB,EACd,MAdErhB,EAAKvH,GA0Mf,IAA8BnD,CA3LxB,GAiBF,CA5CAoyB,EAAS,KAAMhc,EA6CjB,EAvWA2a,EAAU0B,YA0WV,SAAqBZ,GAEnB,IAAIU,EAEJxB,EAAUI,SACVY,EAAa,cAAehB,EAAUE,QACtCgB,EAAe,cAAelB,EAAUG,UAExC,IAAMnF,EAAO+F,EAAMD,GAMnB,OAJAd,EAAU5lB,QAAQ4gB,EAAMrhB,GAExB8nB,EAAW,cAAe,UAAWD,GAE9BxG,EAMP,SAASrhB,EAAKvH,GACZovB,GAAW,EACX5C,EAAKxsB,EACP,CACF,EA/XO4tB,EAIP,SAASA,IAIP,IAHA,IAAM2B,EAAcjW,IAChBpW,GAAS,IAEJA,EAAQuqB,EAAU/vB,QACzB6xB,EAAYnC,IAAG,MAAfmC,GAAW,OAAQ9B,EAAUvqB,KAK/B,OAFAqsB,EAAYloB,KAAKlK,GAAO,EAAM,CAAC,EAAGuwB,IAE3B6B,CACT,CAiXF,CA3auBjW,GAAO0U,SAExBrM,EAAM,CAAC,EAAEpmB,eAkbf,SAASszB,EAAQhyB,EAAOH,GACtB,MACmB,oBAAVG,GAGPA,EAAMvB,YAeV,SAAcuB,GAEZ,IAAIV,EAEJ,IAAKA,KAAOU,EACV,GAAI8kB,EAAI3lB,KAAKa,EAAOV,GAClB,OAAO,EAIX,OAAO,CACT,CArBK+K,CAAKrK,EAAMvB,YAAcoB,KAAQG,EAAMvB,UAE5C,CA4BA,SAASszB,EAAalyB,EAAMG,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAIiC,UAAU,WAAapC,EAAO,qBAE5C,CASA,SAASoyB,EAAepyB,EAAMG,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAIiC,UAAU,WAAapC,EAAO,uBAE5C,CASA,SAASmxB,EAAenxB,EAAM6wB,GAC5B,GAAIA,EACF,MAAM,IAAIptB,MACR,gBACEzD,EACA,mHAGR,CAQA,SAASqyB,EAAWvvB,GAGlB,IAAKivB,EAAWjvB,IAA8B,kBAAdA,EAAK0B,KACnC,MAAM,IAAIpC,UAAU,uBAAyBU,EAAO,IAGxD,CAUA,SAAS6vB,EAAW3yB,EAAM8yB,EAAWJ,GACnC,IAAKA,EACH,MAAM,IAAIjvB,MACR,IAAMzD,EAAO,0BAA4B8yB,EAAY,YAG3D,CAMA,SAASb,EAAM9xB,GACb,OAOF,SAAyBA,GACvB,OAAO4yB,QACL5yB,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,EAEpB,CAdS6yB,CAAgB7yB,GAASA,EAAQ,IAAI4uB,EAAM5uB,EACpD,CCzhBA,SAAS8yB,EAAI9yB,EAAO+yB,GAClB,OAwCF,SAAc/yB,GACZ,OAAO4yB,QAAQ5yB,GAA0B,kBAAVA,EACjC,CAzCK2C,CAAK3C,KACF,UAAWA,GAASA,EAAMA,OACzB+yB,GAAmB,QAAS/yB,GAASA,EAAMgzB,KAC3C,aAAchzB,GAAS+oB,EAAI/oB,EAAMgf,SAAU+T,KAC/C7zB,MAAMF,QAAQgB,IAAU+oB,EAAI/oB,EAAO+yB,IACpC,EAEJ,CAYA,SAAShK,EAAI7a,EAAQ6kB,GAKnB,IAHA,IAAM9sB,EAAS,GACXI,GAAS,IAEJA,EAAQ6H,EAAOrN,QACtBoF,EAAOI,GAASysB,EAAI5kB,EAAO7H,GAAQ0sB,GAGrC,OAAO9sB,EAAOyG,KAAK,GACrB,qCC7DazJ,GAAU,CACrBwjB,SAIF,SAA2BC,GACzB,IAOIuM,EAPEC,EAAexM,EAAQyM,QAC3BrwB,KAAKswB,OAAO/J,WAAWgK,gBAUzB,SAAoClkB,GAClC,GAAa,OAATA,EAEF,YADAuX,EAAQa,QAAQpY,GAOlB,OAHAuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAASwM,EAAc,aAC7C,IAGA,SAA0B/jB,GAExB,OADAuX,EAAQW,MAAM,aACPiM,EAAUnkB,EACnB,IAnBA,OAAO+jB,EAsBP,SAASI,EAAUnkB,GACjB,IAAMokB,EAAQ7M,EAAQW,MAAM,YAAa,CACvCmM,YAAa,OACbP,SAAAA,IAQF,OALIA,IACFA,EAASxoB,KAAO8oB,GAGlBN,EAAWM,EACJ/oB,EAAK2E,EACd,CAGA,SAAS3E,EAAK2E,GACZ,OAAa,OAATA,GACFuX,EAAQc,KAAK,aACbd,EAAQc,KAAK,kBACbd,EAAQa,QAAQpY,KAId2X,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,aACN8L,IAGT5M,EAAQa,QAAQpY,GACT3E,EACT,CACF,kBC1DasO,GAAW,CACtB2N,SASF,SAA4BC,GAC1B,IAOI+M,EAGAC,EAGAC,EAbEjoB,EAAO5I,KAGPujB,EAAQ,GACVuN,EAAY,EAUhB,OAAOnxB,EAGP,SAASA,EAAM0M,GAWb,GAAIykB,EAAYvN,EAAMxlB,OAAQ,CAC5B,IAAMgzB,EAAOxN,EAAMuN,GAEnB,OADAloB,EAAKooB,eAAiBD,EAAK,GACpBnN,EAAQyM,QACbU,EAAK,GAAGE,aACRC,EACAC,EAHKvN,CAILvX,EACJ,CAEA,OAAO8kB,EAAmB9kB,EAC5B,CAGA,SAAS6kB,EAAiB7kB,GAKxB,GAJAykB,IAIIloB,EAAKooB,eAAeI,WAAY,CAClCxoB,EAAKooB,eAAeI,gBAAaptB,EAE7B2sB,GACFU,IAUF,IANA,IAII5I,EAJE6I,EAAmB1oB,EAAK2e,OAAOxpB,OACjCwzB,EAAkBD,EAKfC,KACL,GACsC,SAApC3oB,EAAK2e,OAAOgK,GAAiB,IACY,cAAzC3oB,EAAK2e,OAAOgK,GAAiB,GAAGhwB,KAChC,CACAknB,EAAQ7f,EAAK2e,OAAOgK,GAAiB,GAAGtxB,IACxC,KACF,CAGFuxB,EAAeV,GAIf,IAFA,IAAIvtB,EAAQ+tB,EAEL/tB,EAAQqF,EAAK2e,OAAOxpB,QACzB6K,EAAK2e,OAAOhkB,GAAO,GAAGtD,IAAMvE,OAAOsV,OAAO,CAAC,EAAGyX,GAC9CllB,IAWF,OARAoT,EAAAA,GAAAA,GACE/N,EAAK2e,OACLgK,EAAkB,EAClB,EACA3oB,EAAK2e,OAAOvmB,MAAMswB,IAGpB1oB,EAAK2e,OAAOxpB,OAASwF,EACd4tB,EAAmB9kB,EAC5B,CAEA,OAAO1M,EAAM0M,EACf,CAGA,SAAS8kB,EAAmB9kB,GAM1B,GAAIykB,IAAcvN,EAAMxlB,OAAQ,CAI9B,IAAK4yB,EACH,OAAOc,EAAkBplB,GAK3B,GAAIskB,EAAUe,kBAAoBf,EAAUe,iBAAiBC,SAC3D,OAAOC,EAAUvlB,GAKnBzD,EAAKipB,UAAY/B,QACfa,EAAUe,mBAAqBf,EAAUmB,8BAE7C,CAGA,OADAlpB,EAAKooB,eAAiB,CAAC,EAChBpN,EAAQmO,MACbC,GACAC,EACAC,EAHKtO,CAILvX,EACJ,CAGA,SAAS4lB,EAAqB5lB,GAG5B,OAFIskB,GAAWU,IACfG,EAAeV,GACRW,EAAkBplB,EAC3B,CAGA,SAAS6lB,EAAsB7lB,GAG7B,OAFAzD,EAAK0nB,OAAO6B,KAAKvpB,EAAKyK,MAAMzT,MAAQkxB,IAAcvN,EAAMxlB,OACxD8yB,EAAkBjoB,EAAKyK,MAAM+e,OACtBR,EAAUvlB,EACnB,CAGA,SAASolB,EAAkBplB,GAGzB,OADAzD,EAAKooB,eAAiB,CAAC,EAChBpN,EAAQyM,QACb2B,GACAK,EACAT,EAHKhO,CAILvX,EACJ,CAGA,SAASgmB,EAAkBhmB,GAIzB,OAHAykB,IACAvN,EAAM3iB,KAAK,CAACgI,EAAK8oB,iBAAkB9oB,EAAKooB,iBAEjCS,EAAkBplB,EAC3B,CAGA,SAASulB,EAAUvlB,GACjB,OAAa,OAATA,GACEskB,GAAWU,IACfG,EAAe,QACf5N,EAAQa,QAAQpY,KAIlBskB,EAAYA,GAAa/nB,EAAK0nB,OAAOgC,KAAK1pB,EAAKyK,OAC/CuQ,EAAQW,MAAM,YAAa,CACzBmM,YAAa,OACbP,SAAUS,EACV2B,WAAY5B,IAEP6B,EAAanmB,GACtB,CAGA,SAASmmB,EAAanmB,GACpB,OAAa,OAATA,GACFomB,EAAa7O,EAAQc,KAAK,cAAc,GACxC8M,EAAe,QACf5N,EAAQa,QAAQpY,KAId2X,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQa,QAAQpY,GAChBomB,EAAa7O,EAAQc,KAAK,cAE1BoM,EAAY,EACZloB,EAAKipB,eAAY7tB,EACVrE,IAGTikB,EAAQa,QAAQpY,GACTmmB,EACT,CAOA,SAASC,EAAahC,EAAOiC,GAC3B,IAAMC,EAAS/pB,EAAKgqB,YAAYnC,GAwChC,GAvCIiC,GAAKC,EAAO/xB,KAAK,MACrB6vB,EAAMN,SAAWS,EACbA,IAAYA,EAAWjpB,KAAO8oB,GAClCG,EAAaH,EACbE,EAAUkC,WAAWpC,EAAM9wB,OAC3BgxB,EAAUmC,MAAMH,GAkCZ/pB,EAAK0nB,OAAO6B,KAAK1B,EAAM9wB,MAAMC,MAAO,CAGtC,IAFA,IAAI2D,EAAQotB,EAAUpJ,OAAOxpB,OAEtBwF,KACL,GAEEotB,EAAUpJ,OAAOhkB,GAAO,GAAG5D,MAAMyyB,OAASvB,KACxCF,EAAUpJ,OAAOhkB,GAAO,GAAGtD,KAC3B0wB,EAAUpJ,OAAOhkB,GAAO,GAAGtD,IAAImyB,OAASvB,GAI1C,OAcJ,IATA,IAIIkC,EAGAtK,EAPE6I,EAAmB1oB,EAAK2e,OAAOxpB,OACjCwzB,EAAkBD,EAQfC,KACL,GACsC,SAApC3oB,EAAK2e,OAAOgK,GAAiB,IACY,cAAzC3oB,EAAK2e,OAAOgK,GAAiB,GAAGhwB,KAChC,CACA,GAAIwxB,EAAM,CACRtK,EAAQ7f,EAAK2e,OAAOgK,GAAiB,GAAGtxB,IACxC,KACF,CAEA8yB,GAAO,CACT,CAOF,IAJAvB,EAAeV,GAEfvtB,EAAQ+tB,EAED/tB,EAAQqF,EAAK2e,OAAOxpB,QACzB6K,EAAK2e,OAAOhkB,GAAO,GAAGtD,IAAMvE,OAAOsV,OAAO,CAAC,EAAGyX,GAC9CllB,KAGFoT,EAAAA,GAAAA,GACE/N,EAAK2e,OACLgK,EAAkB,EAClB,EACA3oB,EAAK2e,OAAOvmB,MAAMswB,IAGpB1oB,EAAK2e,OAAOxpB,OAASwF,CACvB,CACF,CAMA,SAASiuB,EAAe1pB,GAGtB,IAFA,IAAIvE,EAAQggB,EAAMxlB,OAEXwF,KAAUuE,GAAM,CACrB,IAAM+mB,EAAQtL,EAAMhgB,GACpBqF,EAAKooB,eAAiBnC,EAAM,GAC5BA,EAAM,GAAGnK,KAAKroB,KAAKuM,EAAMgb,EAC3B,CAEAL,EAAMxlB,OAAS+J,CACjB,CAEA,SAASupB,IACPV,EAAUmC,MAAM,CAAC,OACjBlC,OAAa5sB,EACb2sB,OAAY3sB,EACZ4E,EAAKooB,eAAeI,gBAAaptB,CACnC,CACF,GAjVMguB,GAAqB,CACzBrO,SAmVF,SAA2BC,EAASC,EAAIC,GACtC,OAAOC,EAAAA,GAAAA,GACLH,EACAA,EAAQyM,QAAQrwB,KAAKswB,OAAO/J,WAAWvQ,SAAU6N,EAAIC,GACrD,aACA9jB,KAAKswB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,qBAAkB1jB,EAAY,EAE/E,kBCvWO,SAASkvB,GAAY3L,GA0B1B,IAxBA,IAII4L,EAGAC,EAGAC,EAGAC,EAGA5N,EAGA6N,EAGAC,EAtBEC,EAAQ,CAAC,EACXlwB,GAAS,IAuBJA,EAAQgkB,EAAOxpB,QAAQ,CAC9B,KAAOwF,KAASkwB,GACdlwB,EAAQkwB,EAAMlwB,GAMhB,GAHA4vB,EAAQ5L,EAAOhkB,GAIbA,GACkB,cAAlB4vB,EAAM,GAAG5xB,MACqB,mBAA9BgmB,EAAOhkB,EAAQ,GAAG,GAAGhC,QAGrB8xB,EAAa,IADbE,EAAYJ,EAAM,GAAGZ,WAAWhL,QAIPxpB,QACW,oBAAlCw1B,EAAUF,GAAY,GAAG9xB,OAEzB8xB,GAAc,GAIdA,EAAaE,EAAUx1B,QACW,YAAlCw1B,EAAUF,GAAY,GAAG9xB,MAEzB,OAAS8xB,EAAaE,EAAUx1B,QACQ,YAAlCw1B,EAAUF,GAAY,GAAG9xB,MAIS,cAAlCgyB,EAAUF,GAAY,GAAG9xB,OAC3BgyB,EAAUF,GAAY,GAAGK,6BAA8B,EACvDL,KAMR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAGzC,cACXh1B,OAAOsV,OAAOyiB,EAAOE,GAAWpM,EAAQhkB,IACxCA,EAAQkwB,EAAMlwB,GACdiwB,GAAO,QAGN,GAAIL,EAAM,GAAGS,WAAY,CAI5B,IAHAP,EAAa9vB,EACb6vB,OAAYpvB,EAELqvB,MAIoB,gBAHzBC,EAAa/L,EAAO8L,IAGP,GAAG9xB,MACS,oBAAvB+xB,EAAW,GAAG/xB,OAEQ,UAAlB+xB,EAAW,KACTF,IACF7L,EAAO6L,GAAW,GAAG7xB,KAAO,mBAG9B+xB,EAAW,GAAG/xB,KAAO,aACrB6xB,EAAYC,GAOdD,IAEFD,EAAM,GAAGlzB,IAAMvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO6L,GAAW,GAAGzzB,QAEtD+lB,EAAa6B,EAAOvmB,MAAMoyB,EAAW7vB,IAC1BsiB,QAAQsN,IACnBxc,EAAAA,GAAAA,GAAO4Q,EAAQ6L,EAAW7vB,EAAQ6vB,EAAY,EAAG1N,GAErD,CACF,CAEA,OAAQ8N,CACV,CASA,SAASG,GAAWpM,EAAQsM,GA+B1B,IA9BA,IAiBIlB,EAGAxC,EApBEM,EAAQlJ,EAAOsM,GAAY,GAC3BrM,EAAUD,EAAOsM,GAAY,GAC/BC,EAAgBD,EAAa,EAG3BE,EAAiB,GACjBC,EACJvD,EAAM8B,YAAc/K,EAAQ8I,OAAOG,EAAMC,aAAaD,EAAM9wB,OACxDs0B,EAAcD,EAAUzM,OAGxBkM,EAAQ,GAGRS,EAAO,CAAC,EAOV3wB,GAAS,EAGTwO,EAAU0e,EACV0D,EAAS,EACTx0B,EAAQ,EACNy0B,EAAS,CAACz0B,GAGToS,GAAS,CAEd,KAAOwV,IAASuM,GAAe,KAAO/hB,IAItCgiB,EAAenzB,KAAKkzB,GAEf/hB,EAAQwgB,aACXI,EAASnL,EAAQoL,YAAY7gB,GAExBA,EAAQpK,MACXgrB,EAAO/xB,KAAK,MAGVuvB,GACF6D,EAAUnB,WAAW9gB,EAAQpS,OAG3BoS,EAAQ2hB,8BACVM,EAAUK,oCAAqC,GAGjDL,EAAUlB,MAAMH,GAEZ5gB,EAAQ2hB,8BACVM,EAAUK,wCAAqCrwB,IAInDmsB,EAAWpe,EACXA,EAAUA,EAAQpK,IACpB,CAKA,IAFAoK,EAAU0e,IAEDltB,EAAQ0wB,EAAYl2B,QAGC,SAA1Bk2B,EAAY1wB,GAAO,IACW,UAA9B0wB,EAAY1wB,EAAQ,GAAG,IACvB0wB,EAAY1wB,GAAO,GAAGhC,OAAS0yB,EAAY1wB,EAAQ,GAAG,GAAGhC,MACzD0yB,EAAY1wB,GAAO,GAAG5D,MAAMC,OAASq0B,EAAY1wB,GAAO,GAAGtD,IAAIL,OAE/DD,EAAQ4D,EAAQ,EAChB6wB,EAAOxzB,KAAKjB,GAEZoS,EAAQwgB,gBAAavuB,EACrB+N,EAAQoe,cAAWnsB,EACnB+N,EAAUA,EAAQpK,MAmBtB,IAfAqsB,EAAUzM,OAAS,GAIfxV,GAEFA,EAAQwgB,gBAAavuB,EACrB+N,EAAQoe,cAAWnsB,GAEnBowB,EAAOjH,MAIT5pB,EAAQ6wB,EAAOr2B,OAERwF,KAAS,CACd,IAAMvC,EAAQizB,EAAYjzB,MAAMozB,EAAO7wB,GAAQ6wB,EAAO7wB,EAAQ,IACxD5D,EAAQo0B,EAAe5G,MAC7BsG,EAAM5N,QAAQ,CAAClmB,EAAOA,EAAQqB,EAAMjD,OAAS,KAC7C4Y,EAAAA,GAAAA,GAAO4Q,EAAQ5nB,EAAO,EAAGqB,EAC3B,CAIA,IAFAuC,GAAS,IAEAA,EAAQkwB,EAAM11B,QACrBm2B,EAAKC,EAASV,EAAMlwB,GAAO,IAAM4wB,EAASV,EAAMlwB,GAAO,GACvD4wB,GAAUV,EAAMlwB,GAAO,GAAKkwB,EAAMlwB,GAAO,GAAK,EAGhD,OAAO2wB,CACT,CCvOO,IAAM/zB,GAAU,CACrBwjB,SAsBF,SAAyBC,EAASC,GAEhC,IAAIsM,EACJ,OAGA,SAAe9jB,GAKb,OAJAuX,EAAQW,MAAM,WACd4L,EAAWvM,EAAQW,MAAM,eAAgB,CACvCmM,YAAa,YAERhpB,EAAK2E,EACd,EAGA,SAAS3E,EAAK2E,GACZ,OAAa,OAATA,EACKioB,EAAWjoB,IAGhB2X,EAAAA,GAAAA,IAAmB3X,GACduX,EAAQmO,MACbwC,GACAC,EACAF,EAHK1Q,CAILvX,IAGJuX,EAAQa,QAAQpY,GACT3E,EACT,CAGA,SAAS4sB,EAAWjoB,GAGlB,OAFAuX,EAAQc,KAAK,gBACbd,EAAQc,KAAK,WACNb,EAAGxX,EACZ,CAGA,SAASmoB,EAAgBnoB,GAQvB,OAPAuX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,gBACbyL,EAASxoB,KAAOic,EAAQW,MAAM,eAAgB,CAC5CmM,YAAa,UACbP,SAAAA,IAEFA,EAAWA,EAASxoB,KACbD,CACT,CACF,EAvEEX,QAeF,SAAwBwgB,GAEtB,OADA2L,GAAY3L,GACLA,CACT,GAdMgN,GAAwB,CAC5B5Q,SAqEF,SAA8BC,EAASC,EAAIC,GACzC,IAAMlb,EAAO5I,KACb,OAGA,SAAwBqM,GAKtB,OAJAuX,EAAQc,KAAK,gBACbd,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAAS6Q,EAAU,aACzC,EAGA,SAASA,EAASpoB,GAChB,GAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GACtC,OAAOyX,EAAIzX,GAGb,IAAMqoB,EAAO9rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAE9C,OACG6K,EAAK0nB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,iBAC9CgN,GACiB,eAAjBA,EAAK,GAAGnzB,MACRmzB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAM32B,QAAU,EAEzC8lB,EAAGxX,GAGLuX,EAAQiO,UAAUjpB,EAAK0nB,OAAO/J,WAAW+L,KAAMxO,EAAKD,EAApDD,CAAwDvX,EACjE,CACF,EApGE4X,SAAS,GCbJ,IAAMqO,GAAO,CAClB3O,SAIF,SAAwBC,GACtB,IAAMhb,EAAO5I,KACP40B,EAAUhR,EAAQyM,QAEtB3M,GAAAA,GAmBF,SAAuBrX,GACrB,GAAa,OAATA,EAEF,YADAuX,EAAQa,QAAQpY,GAQlB,OAJAuX,EAAQW,MAAM,mBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,mBACb9b,EAAK8oB,sBAAmB1tB,EACjB4wB,CACT,GA5BEhR,EAAQyM,QACNrwB,KAAKswB,OAAO/J,WAAWsO,YACvBC,GACA/Q,EAAAA,GAAAA,GACEH,EACAA,EAAQyM,QACNrwB,KAAKswB,OAAO/J,WAAW+L,KACvBwC,EACAlR,EAAQyM,QAAQlwB,GAAS20B,IAE3B,gBAIN,OAAOF,EAiBP,SAASE,EAAezoB,GACtB,GAAa,OAATA,EASJ,OAJAuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACb9b,EAAK8oB,sBAAmB1tB,EACjB4wB,EARLhR,EAAQa,QAAQpY,EASpB,CACF,GCxDO,IAAM0oB,GAAW,CACtBzN,WAAY0N,MAEDxxB,GAASyxB,GAAkB,UAC3BC,GAAOD,GAAkB,QAMtC,SAASA,GAAkBE,GACzB,MAAO,CACLxR,SAOF,SAAwBC,GACtB,IAAMhb,EAAO5I,KACPumB,EAAavmB,KAAKswB,OAAO/J,WAAW4O,GACpCD,EAAOtR,EAAQyM,QAAQ9J,EAAY5mB,EAAOy1B,GAChD,OAAOz1B,EAGP,SAASA,EAAM0M,GACb,OAAOgpB,EAAQhpB,GAAQ6oB,EAAK7oB,GAAQ+oB,EAAQ/oB,EAC9C,CAGA,SAAS+oB,EAAQ/oB,GACf,GAAa,OAATA,EAOJ,OAFAuX,EAAQW,MAAM,QACdX,EAAQa,QAAQpY,GACT3E,EANLkc,EAAQa,QAAQpY,EAOpB,CAGA,SAAS3E,EAAK2E,GACZ,OAAIgpB,EAAQhpB,IACVuX,EAAQc,KAAK,QACNwQ,EAAK7oB,KAGduX,EAAQa,QAAQpY,GACT3E,EACT,CAMA,SAAS2tB,EAAQhpB,GACf,GAAa,OAATA,EACF,OAAO,EAGT,IAAMkZ,EAAOgB,EAAWla,GACpB9I,GAAS,EAEb,GAAIgiB,EACF,OAAShiB,EAAQgiB,EAAKxnB,QAAQ,CAC5B,IAAMgzB,EAAOxL,EAAKhiB,GAElB,IAAKwtB,EAAKZ,UAAYY,EAAKZ,SAAS9zB,KAAKuM,EAAMA,EAAKunB,UAClD,OAAO,CAEX,CAGF,OAAO,CACT,CACF,EAhEE7I,WAAY0N,GACA,SAAVG,EAAmBG,QAAyBtxB,GAgElD,CAMA,SAASgxB,GAAeO,GACtB,OAGA,SAAwBhO,EAAQC,GAC9B,IAGIjD,EAHAhhB,GAAS,EAMb,OAASA,GAASgkB,EAAOxpB,aACTiG,IAAVugB,EACEgD,EAAOhkB,IAAoC,SAA1BgkB,EAAOhkB,GAAO,GAAGhC,OACpCgjB,EAAQhhB,EACRA,KAEQgkB,EAAOhkB,IAAoC,SAA1BgkB,EAAOhkB,GAAO,GAAGhC,OAExCgC,IAAUghB,EAAQ,IACpBgD,EAAOhD,GAAO,GAAGtkB,IAAMsnB,EAAOhkB,EAAQ,GAAG,GAAGtD,IAC5CsnB,EAAO5Q,OAAO4N,EAAQ,EAAGhhB,EAAQghB,EAAQ,GACzChhB,EAAQghB,EAAQ,GAGlBA,OAAQvgB,GAIZ,OAAOuxB,EAAgBA,EAAchO,EAAQC,GAAWD,CAC1D,CACF,CAaA,SAAS+N,GAAuB/N,EAAQC,GAGtC,IAFA,IAAIqM,EAAa,IAERA,GAActM,EAAOxpB,QAC5B,IACG81B,IAAetM,EAAOxpB,QACU,eAA/BwpB,EAAOsM,GAAY,GAAGtyB,OACW,SAAnCgmB,EAAOsM,EAAa,GAAG,GAAGtyB,KAC1B,CAUA,IATA,IAAMmG,EAAO6f,EAAOsM,EAAa,GAAG,GAC9B2B,EAAShO,EAAQoL,YAAYlrB,GAC/BnE,EAAQiyB,EAAOz3B,OACf03B,GAAe,EACf3tB,EAAO,EAGP4tB,OAAI,EAEDnyB,KAAS,CACd,IAAMoyB,EAAQH,EAAOjyB,GAErB,GAAqB,kBAAVoyB,EAAoB,CAG7B,IAFAF,EAAcE,EAAM53B,OAEyB,KAAtC43B,EAAM5T,WAAW0T,EAAc,IACpC3tB,IACA2tB,IAGF,GAAIA,EAAa,MACjBA,GAAe,CACjB,MACK,IAAe,IAAXE,EACPD,GAAO,EACP5tB,SACK,IAAe,IAAX6tB,EAEJ,CAELpyB,IACA,KACF,CACF,CAEA,GAAIuE,EAAM,CACR,IAAM2oB,EAAQ,CACZlvB,KACEsyB,IAAetM,EAAOxpB,QAAU23B,GAAQ5tB,EAAO,EAC3C,aACA,oBACNnI,MAAO,CACLC,KAAM8H,EAAKzH,IAAIL,KACfP,OAAQqI,EAAKzH,IAAIZ,OAASyI,EAC1BsqB,OAAQ1qB,EAAKzH,IAAImyB,OAAStqB,EAC1B8tB,OAAQluB,EAAK/H,MAAMi2B,OAASryB,EAC5BsyB,aAActyB,EACVkyB,EACA/tB,EAAK/H,MAAMk2B,aAAeJ,GAEhCx1B,IAAKvE,OAAOsV,OAAO,CAAC,EAAGtJ,EAAKzH,MAE9ByH,EAAKzH,IAAMvE,OAAOsV,OAAO,CAAC,EAAGyf,EAAM9wB,OAE/B+H,EAAK/H,MAAMyyB,SAAW1qB,EAAKzH,IAAImyB,OACjC12B,OAAOsV,OAAOtJ,EAAM+oB,IAEpBlJ,EAAO5Q,OACLkd,EACA,EACA,CAAC,QAASpD,EAAOjJ,GACjB,CAAC,OAAQiJ,EAAOjJ,IAElBqM,GAAc,EAElB,CAEAA,GACF,CAGF,OAAOtM,CACT,gBC9KO,SAASuO,GAAgBxF,EAAQyF,EAAYnQ,GAElD,IAAI6C,EAAQ/sB,OAAOsV,OACjB4U,EACIlqB,OAAOsV,OAAO,CAAC,EAAG4U,GAClB,CACEhmB,KAAM,EACNP,OAAQ,EACR+yB,OAAQ,GAEd,CACEwD,OAAQ,EACRC,cAAe,IAKbG,EAAc,CAAC,EAGfC,EAAuB,GAGzBT,EAAS,GAGTjS,EAAQ,GAUNK,EAAU,CACda,QA2IF,SAAiBpY,IACX2X,EAAAA,GAAAA,IAAmB3X,IACrBoc,EAAM7oB,OACN6oB,EAAMppB,OAAS,EACfopB,EAAM2J,SAAoB,IAAV/lB,EAAc,EAAI,EAClC6pB,MACmB,IAAV7pB,IACToc,EAAMppB,SACNopB,EAAM2J,UAGJ3J,EAAMoN,aAAe,EACvBpN,EAAMmN,UAENnN,EAAMoN,eAIFpN,EAAMoN,eAAiBL,EAAO/M,EAAMmN,QAAQ73B,SAC9C0qB,EAAMoN,cAAgB,EACtBpN,EAAMmN,WAIVpO,EAAQ2I,SAAW9jB,GAER,CACb,EArKEkY,MAwKF,SAAehjB,EAAM40B,GAGnB,IAAM1F,EAAQ0F,GAAU,CAAC,EAKzB,OAJA1F,EAAMlvB,KAAOA,EACbkvB,EAAM9wB,MAAQ0T,IACdmU,EAAQD,OAAO3mB,KAAK,CAAC,QAAS6vB,EAAOjJ,IACrCjE,EAAM3iB,KAAK6vB,GACJA,CACT,EAhLE/L,KAmLF,SAAcnjB,GACZ,IAAMkvB,EAAQlN,EAAM4J,MAGpB,OAFAsD,EAAMxwB,IAAMoT,IACZmU,EAAQD,OAAO3mB,KAAK,CAAC,OAAQ6vB,EAAOjJ,IAC7BiJ,CACT,EAvLEJ,QAAS+F,GA8LX,SAA+BnO,EAAWoO,GACxCC,EAAUrO,EAAWoO,EAAKzQ,KAC5B,IA/LEmM,MAAOqE,EAAiBG,GACxB1E,UAAWuE,EAAiBG,EAAmB,CAC7C1E,WAAW,KASTrK,EAAU,CACd2I,SAAU,KACV9jB,KAAM,KACN2kB,eAAgB,CAAC,EACjBzJ,OAAQ,GACR+I,OAAAA,EACAsC,YAAAA,EACA+B,eA6CF,SAAwBlE,EAAO+F,GAC7B,OAsYJ,SAAyBhB,EAAQgB,GAC/B,IAMIC,EANAlzB,GAAS,EAGPJ,EAAS,GAKf,OAASI,EAAQiyB,EAAOz3B,QAAQ,CAC9B,IAAM43B,EAAQH,EAAOjyB,GAGjBrG,OAAK,EAET,GAAqB,kBAAVy4B,EACTz4B,EAAQy4B,OAER,OAAQA,GACN,KAAM,EACJz4B,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,OACR,MAGF,KAAM,EACJA,EAAQs5B,EAAa,IAAM,KAC3B,MAGF,KAAM,EACJ,IAAKA,GAAcC,EAAO,SAC1Bv5B,EAAQ,IACR,MAGF,QAEEA,EAAQkG,OAAO8I,aAAaypB,GAIlCc,GAAmB,IAAXd,EACRxyB,EAAOvC,KAAK1D,EACd,CAEA,OAAOiG,EAAOyG,KAAK,GACrB,CA9bW8sB,CAAgB9D,EAAYnC,GAAQ+F,EAC7C,EA9CEnjB,IAAAA,EACAwf,WA0DF,SAAoB31B,GAClB84B,EAAY94B,EAAM0C,MAAQ1C,EAAMmC,OAChC62B,GACF,EA5DEpD,MAwBF,SAAe9xB,GAIb,GAHAw0B,GAAS50B,EAAAA,GAAAA,GAAK40B,EAAQx0B,GACtB21B,IAEkC,OAA9BnB,EAAOA,EAAOz3B,OAAS,GACzB,MAAO,GAMT,OAHAu4B,EAAUP,EAAY,GAEtBvO,EAAQD,QAASD,EAAAA,GAAAA,GAAW2O,EAAsBzO,EAAQD,OAAQC,GAC3DA,EAAQD,MACjB,GA5BIhH,EAAQwV,EAAWpS,SAAStnB,KAAKmrB,EAAS5D,GAa9C,OAJImS,EAAWzO,YACb2O,EAAqBr1B,KAAKm1B,GAGrBvO,EA0BP,SAASoL,EAAYnC,GACnB,OA6VJ,SAAqB+E,EAAQ/E,GAC3B,IAMImG,EANEC,EAAapG,EAAM9wB,MAAMi2B,OACzBkB,EAAmBrG,EAAM9wB,MAAMk2B,aAC/BkB,EAAWtG,EAAMxwB,IAAI21B,OACrBoB,EAAiBvG,EAAMxwB,IAAI41B,aAK7BgB,IAAeE,EAEjBH,EAAO,CAACpB,EAAOqB,GAAY71B,MAAM81B,EAAkBE,KAEnDJ,EAAOpB,EAAOx0B,MAAM61B,EAAYE,GAE5BD,GAAoB,IAEtBF,EAAK,GAAKA,EAAK,GAAG51B,MAAM81B,IAGtBE,EAAiB,GAEnBJ,EAAKh2B,KAAK40B,EAAOuB,GAAU/1B,MAAM,EAAGg2B,KAIxC,OAAOJ,CACT,CAxXWK,CAAYzB,EAAQ/E,EAC7B,CAGA,SAASpd,IACP,OAAO3X,OAAOsV,OAAO,CAAC,EAAGyX,EAC3B,CAqBA,SAASkO,IAIP,IAFA,IAAIO,EAEGzO,EAAMmN,OAASJ,EAAOz3B,QAAQ,CACnC,IAAM43B,EAAQH,EAAO/M,EAAMmN,QAE3B,GAAqB,kBAAVD,EAOT,IANAuB,EAAazO,EAAMmN,OAEfnN,EAAMoN,aAAe,IACvBpN,EAAMoN,aAAe,GAIrBpN,EAAMmN,SAAWsB,GACjBzO,EAAMoN,aAAeF,EAAM53B,QAE3Bo5B,EAAGxB,EAAM5T,WAAW0G,EAAMoN,oBAG5BsB,EAAGxB,EAEP,CACF,CAQA,SAASwB,EAAG9qB,QACCrI,EACIqI,EACfkU,EAAQA,EAAMlU,EAChB,CAkEA,SAASkqB,EAAkBa,EAAGf,GAC5BA,EAAKgB,SACP,CAQA,SAASjB,EAAiBkB,EAAUnB,GAClC,OAWA,SAAc5P,EAAYgR,EAAaC,GAErC,IAAIC,EAGAC,EAGAhG,EAGA2E,EACJ,OAAOj6B,MAAMF,QAAQqqB,GAEjBoR,EAAuBpR,GACvB,aAAcA,EACdoR,EAAuB,CAACpR,IAS5B,SAA+B1e,GAC7B,OAAOlI,EAGP,SAASA,EAAM0M,GACb,IAAMurB,EAAe,OAATvrB,GAAiBxE,EAAIwE,GAC3B4Z,EAAe,OAAT5Z,GAAiBxE,EAAIorB,KAQjC,OAAO0E,EAPM,GAAH,eAIJv7B,MAAMF,QAAQ07B,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAAE,OAC3Cx7B,MAAMF,QAAQ+pB,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAExC0R,CAA6BtrB,EACtC,CACF,CAxBIwrB,CAAsBtR,GAgC1B,SAASoR,EAAuBpS,GAI9B,OAHAkS,EAAmBlS,EACnBmS,EAAiB,EAEG,IAAhBnS,EAAKxnB,OACAy5B,EAGFM,EAAgBvS,EAAKmS,GAC9B,CAQA,SAASI,EAAgB7P,GACvB,OAGA,SAAe5b,GAKbgqB,EA4ER,WACE,IAAM0B,EAAa1kB,IACb2kB,EAAgBxQ,EAAQ2I,SACxB8H,EAAwBzQ,EAAQkK,iBAChCwG,EAAmB1Q,EAAQD,OAAOxpB,OAClCo6B,EAAa/7B,MAAMwpB,KAAKrC,GAC9B,MAAO,CACL8T,QAAAA,EACAzR,KAAMsS,GAQR,SAASb,IACP5O,EAAQsP,EACRvQ,EAAQ2I,SAAW6H,EACnBxQ,EAAQkK,iBAAmBuG,EAC3BzQ,EAAQD,OAAOxpB,OAASm6B,EACxB3U,EAAQ4U,EACRjC,GACF,CACF,CApGekC,GACP1G,EAAmBzJ,EAEdA,EAAUhE,UACbuD,EAAQkK,iBAAmBzJ,GAG7B,GACEA,EAAUlrB,MACVyqB,EAAQ8I,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAASO,EAAUlrB,MAE1D,OAAO+mB,EAAIzX,GAGb,OAAO4b,EAAUtE,SAAStnB,KAIxB85B,EAASz6B,OAAOsV,OAAOtV,OAAO+e,OAAO+M,GAAU2O,GAAU3O,EACzD5D,EACAC,EACAC,EAPKmE,CAQL5b,EACJ,CACF,CAGA,SAASwX,EAAGxX,GAGV,OAFW,EACXirB,EAAS5F,EAAkB2E,GACpBkB,CACT,CAGA,SAASzT,EAAIzX,GAIX,OAHW,EACXgqB,EAAKgB,YAECK,EAAiBD,EAAiB15B,OAC/B+5B,EAAgBL,EAAiBC,IAGnCF,CACT,CACF,CACF,CAOA,SAASlB,EAAUrO,EAAWrC,GACxBqC,EAAUX,aAAe2O,EAAqBvO,SAASO,IACzDgO,EAAqBr1B,KAAKqnB,GAGxBA,EAAUlhB,UACZ4P,EAAAA,GAAAA,GACE6Q,EAAQD,OACR3B,EACA4B,EAAQD,OAAOxpB,OAAS6nB,EACxBqC,EAAUlhB,QAAQygB,EAAQD,OAAOvmB,MAAM4kB,GAAO4B,IAI9CS,EAAUoQ,YACZ7Q,EAAQD,OAASU,EAAUoQ,UAAU7Q,EAAQD,OAAQC,GAEzD,CAuCA,SAAS0O,IACHzN,EAAM7oB,QAAQo2B,GAAevN,EAAMppB,OAAS,IAC9CopB,EAAMppB,OAAS22B,EAAYvN,EAAM7oB,MACjC6oB,EAAM2J,QAAU4D,EAAYvN,EAAM7oB,MAAQ,EAE9C,CACF,gBCnea04B,GAAgB,CAC3Bv7B,KAAM,gBACN4mB,SAIF,SAA+BC,EAASC,EAAIC,GAC1C,IAGIyU,EAHAzwB,EAAO,EAIX,OAGA,SAAeuE,GAGb,OAFAuX,EAAQW,MAAM,iBACdgU,EAASlsB,EACFgpB,EAAQhpB,EACjB,EAGA,SAASgpB,EAAQhpB,GACf,OAAIA,IAASksB,GACX3U,EAAQW,MAAM,yBACPiU,EAASnsB,KAGdiY,EAAAA,GAAAA,IAAcjY,IACT0X,EAAAA,GAAAA,GAAaH,EAASyR,EAAS,aAA/BtR,CAA6C1X,GAGlDvE,EAAO,GAAe,OAATuE,KAAkB2X,EAAAA,GAAAA,IAAmB3X,GAC7CyX,EAAIzX,IAGbuX,EAAQc,KAAK,iBACNb,EAAGxX,GACZ,CAGA,SAASmsB,EAASnsB,GAChB,OAAIA,IAASksB,GACX3U,EAAQa,QAAQpY,GAChBvE,IACO0wB,IAGT5U,EAAQc,KAAK,yBACN2Q,EAAQhpB,GACjB,CACF,GCzCO,IAAMkZ,GAAO,CAClBxoB,KAAM,OACN4mB,SAuBF,SAA2BC,EAASC,EAAIC,GACtC,IAAMlb,EAAO5I,KACP00B,EAAO9rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAC1C06B,EACF/D,GAAyB,eAAjBA,EAAK,GAAGnzB,KACZmzB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAM32B,OACtC,EACF+J,EAAO,EACX,OAGA,SAAeuE,GACb,IAAMqsB,EACJ9vB,EAAKooB,eAAezvB,OACV,KAAT8K,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAATqsB,GACK9vB,EAAKooB,eAAeuH,QAAUlsB,IAASzD,EAAKooB,eAAeuH,QAC5D1T,EAAAA,GAAAA,IAAWxY,GACf,CAQA,GAPKzD,EAAKooB,eAAezvB,OACvBqH,EAAKooB,eAAezvB,KAAOm3B,EAC3B9U,EAAQW,MAAMmU,EAAM,CAClB9E,YAAY,KAIH,kBAAT8E,EAEF,OADA9U,EAAQW,MAAM,kBACE,KAATlY,GAAwB,KAATA,EAClBuX,EAAQmO,MAAMuG,GAAexU,EAAK6U,EAAlC/U,CAA4CvX,GAC5CssB,EAAStsB,GAGf,IAAKzD,EAAKipB,WAAsB,KAATxlB,EAGrB,OAFAuX,EAAQW,MAAM,kBACdX,EAAQW,MAAM,iBACPqU,EAAOvsB,EAElB,CAEA,OAAOyX,EAAIzX,EACb,EAGA,SAASusB,EAAOvsB,GACd,OAAIwY,EAAAA,GAAAA,IAAWxY,MAAWvE,EAAO,IAC/B8b,EAAQa,QAAQpY,GACTusB,KAILhwB,EAAKipB,WAAa/pB,EAAO,KAC1Bc,EAAKooB,eAAeuH,OACjBlsB,IAASzD,EAAKooB,eAAeuH,OACpB,KAATlsB,GAAwB,KAATA,IAEnBuX,EAAQc,KAAK,iBACNiU,EAAStsB,IAGXyX,EAAIzX,EACb,CAKA,SAASssB,EAAStsB,GAKhB,OAJAuX,EAAQW,MAAM,kBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,kBACb9b,EAAKooB,eAAeuH,OAAS3vB,EAAKooB,eAAeuH,QAAUlsB,EACpDuX,EAAQmO,MACbrO,GAAAA,EACA9a,EAAKipB,UAAY/N,EAAM+U,EACvBjV,EAAQyM,QACNyI,GACAC,EACAC,GAGN,CAGA,SAASH,EAAQxsB,GAGf,OAFAzD,EAAKooB,eAAeiI,kBAAmB,EACvCR,IACOM,EAAY1sB,EACrB,CAGA,SAAS2sB,EAAY3sB,GACnB,OAAIiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQW,MAAM,4BACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,4BACNqU,GAGFjV,EAAIzX,EACb,CAGA,SAAS0sB,EAAY1sB,GAInB,OAHAzD,EAAKooB,eAAelpB,KAClB2wB,EACA7vB,EAAK+rB,eAAe/Q,EAAQc,KAAK,mBAAmB,GAAM3mB,OACrD8lB,EAAGxX,EACZ,CACF,EAtIE4kB,aAAc,CACZtN,SA2IJ,SAAkCC,EAASC,EAAIC,GAC7C,IAAMlb,EAAO5I,KAEb,OADA4I,EAAKooB,eAAeI,gBAAaptB,EAC1B4f,EAAQmO,MAAMrO,GAAAA,GAGrB,SAAiBrX,GAMf,OALAzD,EAAKooB,eAAekI,kBAClBtwB,EAAKooB,eAAekI,mBACpBtwB,EAAKooB,eAAeiI,kBAGflV,EAAAA,GAAAA,GACLH,EACAC,EACA,iBACAjb,EAAKooB,eAAelpB,KAAO,EAJtBic,CAKL1X,EACJ,IAGA,SAAkBA,GAChB,GAAIzD,EAAKooB,eAAekI,qBAAsB5U,EAAAA,GAAAA,IAAcjY,GAG1D,OAFAzD,EAAKooB,eAAekI,uBAAoBl1B,EACxC4E,EAAKooB,eAAeiI,sBAAmBj1B,EAChCm1B,EAAiB9sB,GAK1B,OAFAzD,EAAKooB,eAAekI,uBAAoBl1B,EACxC4E,EAAKooB,eAAeiI,sBAAmBj1B,EAChC4f,EAAQyM,QAAQ+I,GAAiBvV,EAAIsV,EAArCvV,CAAuDvX,EAChE,IAGA,SAAS8sB,EAAiB9sB,GAKxB,OAHAzD,EAAKooB,eAAeI,YAAa,EAEjCxoB,EAAKipB,eAAY7tB,GACV+f,EAAAA,GAAAA,GACLH,EACAA,EAAQyM,QAAQ9K,GAAM1B,EAAIC,GAC1B,aACAlb,EAAK0nB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,qBACzC1jB,EACA,EANC+f,CAOL1X,EACJ,CACF,GAzLEqY,KAuNF,SAAyBd,GACvBA,EAAQc,KAAK1kB,KAAKgxB,eAAezvB,KACnC,GArNMu3B,GAAoC,CACxCnV,SA0NF,SAA0CC,EAASC,EAAIC,GACrD,IAAMlb,EAAO5I,KACb,OAAO+jB,EAAAA,GAAAA,GACLH,GASF,SAAqBvX,GACnB,IAAMqoB,EAAO9rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAC9C,QAAQumB,EAAAA,GAAAA,IAAcjY,IACpBqoB,GACiB,6BAAjBA,EAAK,GAAGnzB,KACNsiB,EAAGxX,GACHyX,EAAIzX,EACV,GAdE,2BACAzD,EAAK0nB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,qBACzC1jB,EACA,EAYR,EA7OEigB,SAAS,GAILmV,GAAkB,CACtBzV,SAoLF,SAAwBC,EAASC,EAAIC,GACnC,IAAMlb,EAAO5I,KACb,OAAO+jB,EAAAA,GAAAA,GACLH,GAOF,SAAqBvX,GACnB,IAAMqoB,EAAO9rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAC9C,OAAO22B,GACY,mBAAjBA,EAAK,GAAGnzB,MACRmzB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAM32B,SAAW6K,EAAKooB,eAAelpB,KACnE+b,EAAGxX,GACHyX,EAAIzX,EACV,GAZE,iBACAzD,EAAKooB,eAAelpB,KAAO,EAY/B,EArMEmc,SAAS,GC3BJ,IAAMoV,GAAa,CACxBt8B,KAAM,aACN4mB,SAQF,SAAiCC,EAASC,EAAIC,GAC5C,IAAMlb,EAAO5I,KACb,OAGA,SAAeqM,GACb,GAAa,KAATA,EAAa,CACf,IAAMkU,EAAQ3X,EAAKooB,eAanB,OAXKzQ,EAAM+Y,OACT1V,EAAQW,MAAM,aAAc,CAC1BqP,YAAY,IAEdrT,EAAM+Y,MAAO,GAGf1V,EAAQW,MAAM,oBACdX,EAAQW,MAAM,oBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,oBACN6U,CACT,CAEA,OAAOzV,EAAIzX,EACb,EAGA,SAASktB,EAAMltB,GACb,OAAIiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQW,MAAM,8BACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,8BACbd,EAAQc,KAAK,oBACNb,IAGTD,EAAQc,KAAK,oBACNb,EAAGxX,GACZ,CACF,EA9CE4kB,aAAc,CACZtN,SAgDJ,SAAwCC,EAASC,EAAIC,GACnD,OAAOC,EAAAA,GAAAA,GACLH,EACAA,EAAQyM,QAAQgJ,GAAYxV,EAAIC,GAChC,aACA9jB,KAAKswB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,qBAAkB1jB,EAAY,EAE/E,GArDE0gB,KAwDF,SAAcd,GACZA,EAAQc,KAAK,aACf,GCnDO,SAAS8U,GACd5V,EACAC,EACAC,EACAviB,EACAk4B,EACAC,EACAC,EACAC,EACA1V,GAEA,IAAMC,EAAQD,GAAOE,OAAOC,kBACxBwV,EAAU,EACd,OAGA,SAAextB,GACb,GAAa,KAATA,EAMF,OALAuX,EAAQW,MAAMhjB,GACdqiB,EAAQW,MAAMkV,GACd7V,EAAQW,MAAMmV,GACd9V,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAKgV,GACNI,EAGT,GAAa,OAATztB,GAA0B,KAATA,IAAe6Y,EAAAA,GAAAA,IAAa7Y,GAC/C,OAAOyX,EAAIzX,GASb,OANAuX,EAAQW,MAAMhjB,GACdqiB,EAAQW,MAAMoV,GACd/V,EAAQW,MAAMqV,GACdhW,EAAQW,MAAM,cAAe,CAC3BmM,YAAa,WAERqJ,EAAe1tB,EACxB,EAGA,SAASytB,EAA0BztB,GACjC,OAAa,KAATA,GACFuX,EAAQW,MAAMmV,GACd9V,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAKgV,GACb9V,EAAQc,KAAK+U,GACb7V,EAAQc,KAAKnjB,GACNsiB,IAGTD,EAAQW,MAAMqV,GACdhW,EAAQW,MAAM,cAAe,CAC3BmM,YAAa,WAERsJ,EAAoB3tB,GAC7B,CAGA,SAAS2tB,EAAoB3tB,GAC3B,OAAa,KAATA,GACFuX,EAAQc,KAAK,eACbd,EAAQc,KAAKkV,GACNE,EAA0BztB,IAGtB,OAATA,GAA0B,KAATA,IAAe2X,EAAAA,GAAAA,IAAmB3X,GAC9CyX,EAAIzX,IAGbuX,EAAQa,QAAQpY,GACA,KAATA,EAAc4tB,EAA4BD,EACnD,CAGA,SAASC,EAA0B5tB,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuX,EAAQa,QAAQpY,GACT2tB,GAGFA,EAAoB3tB,EAC7B,CAGA,SAAS0tB,EAAe1tB,GACtB,OAAa,KAATA,IACIwtB,EAAU1V,EAAcL,EAAIzX,IAClCuX,EAAQa,QAAQpY,GACT0tB,GAGI,KAAT1tB,EACGwtB,KAQLjW,EAAQa,QAAQpY,GACT0tB,IARLnW,EAAQc,KAAK,eACbd,EAAQc,KAAKkV,GACbhW,EAAQc,KAAKiV,GACb/V,EAAQc,KAAKnjB,GACNsiB,EAAGxX,IAOD,OAATA,IAAiB8Y,EAAAA,GAAAA,IAA0B9Y,GACzCwtB,EAAgB/V,EAAIzX,IACxBuX,EAAQc,KAAK,eACbd,EAAQc,KAAKkV,GACbhW,EAAQc,KAAKiV,GACb/V,EAAQc,KAAKnjB,GACNsiB,EAAGxX,KAGR6Y,EAAAA,GAAAA,IAAa7Y,GAAcyX,EAAIzX,IACnCuX,EAAQa,QAAQpY,GACA,KAATA,EAAc6tB,EAAuBH,EAC9C,CAGA,SAASG,EAAqB7tB,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuX,EAAQa,QAAQpY,GACT0tB,GAGFA,EAAe1tB,EACxB,CACF,CCpIO,SAAS8tB,GAAavW,EAASC,EAAIC,EAAKviB,EAAM64B,EAAYR,GAC/D,IAIIlyB,EAJEkB,EAAO5I,KACT8H,EAAO,EAIX,OAGA,SAAeuE,GAMb,OALAuX,EAAQW,MAAMhjB,GACdqiB,EAAQW,MAAM6V,GACdxW,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK0V,GACbxW,EAAQW,MAAMqV,GACPvE,CACT,EAGA,SAASA,EAAQhpB,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgB3E,GAQP,KAAT2E,IACEvE,GACD,2BAA4Bc,EAAK0nB,OAAO/J,YAC1Cze,EAAO,IAEAgc,EAAIzX,GAGA,KAATA,GACFuX,EAAQc,KAAKkV,GACbhW,EAAQW,MAAM6V,GACdxW,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK0V,GACbxW,EAAQc,KAAKnjB,GACNsiB,IAGLG,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACN2Q,IAGTzR,EAAQW,MAAM,cAAe,CAC3BmM,YAAa,WAER2J,EAAMhuB,GACf,CAGA,SAASguB,EAAMhuB,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACA2X,EAAAA,GAAAA,IAAmB3X,IACnBvE,IAAS,KAET8b,EAAQc,KAAK,eACN2Q,EAAQhpB,KAGjBuX,EAAQa,QAAQpY,GAChB3E,EAAOA,KAAS4c,EAAAA,GAAAA,IAAcjY,GACd,KAATA,EAAciuB,EAAcD,EACrC,CAGA,SAASC,EAAYjuB,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuX,EAAQa,QAAQpY,GAChBvE,IACOuyB,GAGFA,EAAMhuB,EACf,CACF,CCzFO,SAASkuB,GAAa3W,EAASC,EAAIC,EAAKviB,EAAM64B,EAAYR,GAE/D,IAAIrB,EACJ,OAGA,SAAelsB,GAMb,OALAuX,EAAQW,MAAMhjB,GACdqiB,EAAQW,MAAM6V,GACdxW,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK0V,GACb7B,EAAkB,KAATlsB,EAAc,GAAKA,EACrBmuB,CACT,EAGA,SAASA,EAAkBnuB,GACzB,OAAIA,IAASksB,GACX3U,EAAQW,MAAM6V,GACdxW,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK0V,GACbxW,EAAQc,KAAKnjB,GACNsiB,IAGTD,EAAQW,MAAMqV,GACPa,EAAapuB,GACtB,CAGA,SAASouB,EAAapuB,GACpB,OAAIA,IAASksB,GACX3U,EAAQc,KAAKkV,GACNY,EAAkBjC,IAGd,OAATlsB,EACKyX,EAAIzX,IAGT2X,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAAS6W,EAAc,gBAG7C7W,EAAQW,MAAM,cAAe,CAC3BmM,YAAa,WAERxb,EAAM7I,GACf,CAGA,SAAS6I,EAAM7I,GACb,OAAIA,IAASksB,GAAmB,OAATlsB,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACzDuX,EAAQc,KAAK,eACN+V,EAAapuB,KAGtBuX,EAAQa,QAAQpY,GACA,KAATA,EAAcquB,EAAcxlB,EACrC,CAGA,SAASwlB,EAAYruB,GACnB,OAAIA,IAASksB,GAAmB,KAATlsB,GACrBuX,EAAQa,QAAQpY,GACT6I,GAGFA,EAAM7I,EACf,CACF,CChFO,SAASsuB,GAAkB/W,EAASC,GAEzC,IAAIkP,EACJ,OAGA,SAASpzB,EAAM0M,GACb,IAAI2X,EAAAA,GAAAA,IAAmB3X,GAKrB,OAJAuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACbqO,GAAO,EACApzB,EAGT,IAAI2kB,EAAAA,GAAAA,IAAcjY,GAChB,OAAO0X,EAAAA,GAAAA,GACLH,EACAjkB,EACAozB,EAAO,aAAe,aAHjBhP,CAIL1X,GAGJ,OAAOwX,EAAGxX,EACZ,CACF,eCnBauuB,GAAa,CACxB79B,KAAM,aACN4mB,SAUF,SAA4BC,EAASC,EAAIC,GACvC,IAGI+W,EAHEjyB,EAAO5I,KAIb,OAGA,SAAeqM,GAEb,OADAuX,EAAQW,MAAM,cACP4V,GAAa99B,KAClBuM,EACAgb,EACAkX,EACAhX,EACA,kBACA,wBACA,wBAPKqW,CAQL9tB,EACJ,EAGA,SAASyuB,EAAWzuB,GAKlB,OAJAwuB,GAAazT,EAAAA,GAAAA,GACXxe,EAAK+rB,eAAe/rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAAG,IAAIiD,MAAM,GAAI,IAG3D,KAATqL,GACFuX,EAAQW,MAAM,oBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,oBAENiW,GACL/W,EACA4V,GACE5V,EACAA,EAAQyM,QACN0K,IACAhX,EAAAA,GAAAA,GAAaH,EAAS2V,EAAO,eAC7BxV,EAAAA,GAAAA,GAAaH,EAAS2V,EAAO,eAE/BzV,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAIzX,EACb,CAGA,SAASktB,EAAMltB,GACb,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,cAER9b,EAAK0nB,OAAO0K,QAAQtT,SAASmT,IAChCjyB,EAAK0nB,OAAO0K,QAAQp6B,KAAKi6B,GAGpBhX,EAAGxX,IAGLyX,EAAIzX,EACb,CACF,GA1EM0uB,GAAiB,CACrBpX,SA4EF,SAAuBC,EAASC,EAAIC,GAClC,OAGA,SAAezX,GACb,OAAO8Y,EAAAA,GAAAA,IAA0B9Y,GAC7BsuB,GAAkB/W,EAAS6C,EAA3BkU,CAAmCtuB,GACnCyX,EAAIzX,EACV,EAGA,SAASoa,EAAOpa,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBkuB,GACL3W,GACAG,EAAAA,GAAAA,GAAaH,EAAS2V,EAAO,cAC7BzV,EACA,kBACA,wBACA,wBANKyW,CAOLluB,GAGGyX,EAAIzX,EACb,CAGA,SAASktB,EAAMltB,GACb,OAAgB,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GAAQwX,EAAGxX,GAAQyX,EAAIzX,EACpE,CACF,EAzGE4X,SAAS,GCdJ,IAAMgX,GAAe,CAC1Bl+B,KAAM,eACN4mB,SAUF,SAA8BC,EAASC,EAAIC,GACzC,IAAMlb,EAAO5I,KACb,OAGA,SAAeqM,GAEb,OADAuX,EAAQW,MAAM,iBACPR,EAAAA,GAAAA,GAAaH,EAASsX,EAAkB,aAAc,EAAtDnX,CAA6D1X,EACtE,EAGA,SAAS6uB,EAAiB7uB,GACxB,IAAMqoB,EAAO9rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAC9C,OAAO22B,GACY,eAAjBA,EAAK,GAAGnzB,MACRmzB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAM32B,QAAU,EAC9Co9B,EAAY9uB,GACZyX,EAAIzX,EACV,CAGA,SAAS8uB,EAAY9uB,GACnB,OAAa,OAATA,EACKktB,EAAMltB,IAGX2X,EAAAA,GAAAA,IAAmB3X,GACduX,EAAQyM,QAAQ+K,GAAiBD,EAAa5B,EAA9C3V,CAAqDvX,IAG9DuX,EAAQW,MAAM,iBACPpkB,EAAQkM,GACjB,CAGA,SAASlM,EAAQkM,GACf,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,iBACNyW,EAAY9uB,KAGrBuX,EAAQa,QAAQpY,GACTlM,EACT,CAGA,SAASo5B,EAAMltB,GAEb,OADAuX,EAAQc,KAAK,gBACNb,EAAGxX,EACZ,CACF,GAxDM+uB,GAAkB,CACtBzX,SA0DF,SAAiCC,EAASC,EAAIC,GAC5C,IAAMlb,EAAO5I,KACb,OAAOL,EAGP,SAASA,EAAM0M,GAEb,OAAIzD,EAAK0nB,OAAO6B,KAAKvpB,EAAKyK,MAAMzT,MACvBkkB,EAAIzX,IAGT2X,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACN/kB,IAGFokB,EAAAA,GAAAA,GAAaH,EAASuX,EAAa,aAAc,EAAjDpX,CAAwD1X,EACjE,CAGA,SAAS8uB,EAAY9uB,GACnB,IAAMqoB,EAAO9rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAC9C,OAAO22B,GACY,eAAjBA,EAAK,GAAGnzB,MACRmzB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAM32B,QAAU,EAC9C8lB,EAAGxX,IACH2X,EAAAA,GAAAA,IAAmB3X,GACnB1M,EAAM0M,GACNyX,EAAIzX,EACV,CACF,EAzFE4X,SAAS,GCHJ,IAAMoX,GAAa,CACxBt+B,KAAM,aACN4mB,SA4DF,SAA4BC,EAASC,EAAIC,GACvC,IAAMlb,EAAO5I,KACT8H,EAAO,EACX,OAGA,SAAeuE,GAGb,OAFAuX,EAAQW,MAAM,cACdX,EAAQW,MAAM,sBACP+W,EAAgBjvB,EACzB,EAGA,SAASivB,EAAgBjvB,GACvB,OAAa,KAATA,GAAevE,IAAS,GAC1B8b,EAAQa,QAAQpY,GACTivB,GAGI,OAATjvB,IAAiB8Y,EAAAA,GAAAA,IAA0B9Y,IAC7CuX,EAAQc,KAAK,sBACN9b,EAAKipB,UAAYhO,EAAGxX,GAAQkvB,EAAalvB,IAG3CyX,EAAIzX,EACb,CAGA,SAASkvB,EAAalvB,GACpB,OAAa,KAATA,GACFuX,EAAQW,MAAM,sBACPiU,EAASnsB,IAGL,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,cACNb,EAAGxX,KAGRiY,EAAAA,GAAAA,IAAcjY,IACT0X,EAAAA,GAAAA,GAAaH,EAAS2X,EAAc,aAApCxX,CAAkD1X,IAG3DuX,EAAQW,MAAM,kBACP7c,EAAK2E,GACd,CAGA,SAASmsB,EAASnsB,GAChB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTmsB,IAGT5U,EAAQc,KAAK,sBACN6W,EAAalvB,GACtB,CAGA,SAAS3E,EAAK2E,GACZ,OAAa,OAATA,GAA0B,KAATA,IAAe8Y,EAAAA,GAAAA,IAA0B9Y,IAC5DuX,EAAQc,KAAK,kBACN6W,EAAalvB,KAGtBuX,EAAQa,QAAQpY,GACT3E,EACT,CACF,EA/HEX,QAIF,SAA2BwgB,EAAQC,GACjC,IAIIrnB,EAGA+0B,EAPAZ,EAAa/M,EAAOxpB,OAAS,EAC7BqyB,EAAe,EAQkB,eAAjC7I,EAAO6I,GAAc,GAAG7uB,OAC1B6uB,GAAgB,GAIhBkE,EAAa,EAAIlE,GACc,eAA/B7I,EAAO+M,GAAY,GAAG/yB,OAEtB+yB,GAAc,GAIiB,uBAA/B/M,EAAO+M,GAAY,GAAG/yB,OACrB6uB,IAAiBkE,EAAa,GAC5BA,EAAa,EAAIlE,GACmB,eAAnC7I,EAAO+M,EAAa,GAAG,GAAG/yB,QAE9B+yB,GAAclE,EAAe,IAAMkE,EAAa,EAAI,GAGlDA,EAAalE,IACfjwB,EAAU,CACRoB,KAAM,iBACN5B,MAAO4nB,EAAO6I,GAAc,GAAGzwB,MAC/BM,IAAKsnB,EAAO+M,GAAY,GAAGr0B,KAE7Bi1B,EAAO,CACL3zB,KAAM,YACN5B,MAAO4nB,EAAO6I,GAAc,GAAGzwB,MAC/BM,IAAKsnB,EAAO+M,GAAY,GAAGr0B,IAE3BywB,YAAa,SAEf/Z,EAAAA,GAAAA,GAAO4Q,EAAQ6I,EAAckE,EAAalE,EAAe,EAAG,CAC1D,CAAC,QAASjwB,EAASqnB,GACnB,CAAC,QAAS0N,EAAM1N,GAChB,CAAC,OAAQ0N,EAAM1N,GACf,CAAC,OAAQrnB,EAASqnB,MAItB,OAAOD,CACT,GChEO,IAAMiU,GAAkB,CAC7Bz+B,KAAM,kBACN4mB,SA+DF,SAAiCC,EAASC,EAAIC,GAC5C,IAIIyU,EAGAkD,EAPE7yB,EAAO5I,KACTuD,EAAQqF,EAAK2e,OAAOxpB,OAQxB,KAAOwF,KAGL,GACiC,eAA/BqF,EAAK2e,OAAOhkB,GAAO,GAAGhC,MACS,eAA/BqH,EAAK2e,OAAOhkB,GAAO,GAAGhC,MACS,YAA/BqH,EAAK2e,OAAOhkB,GAAO,GAAGhC,KACtB,CACAk6B,EAA2C,cAA/B7yB,EAAK2e,OAAOhkB,GAAO,GAAGhC,KAClC,KACF,CAGF,OAGA,SAAe8K,GACb,IAAKzD,EAAK0nB,OAAO6B,KAAKvpB,EAAKyK,MAAMzT,QAAUgJ,EAAKipB,WAAa4J,GAI3D,OAHA7X,EAAQW,MAAM,qBACdX,EAAQW,MAAM,6BACdgU,EAASlsB,EACFqvB,EAAgBrvB,GAGzB,OAAOyX,EAAIzX,EACb,EAGA,SAASqvB,EAAgBrvB,GACvB,OAAIA,IAASksB,GACX3U,EAAQa,QAAQpY,GACTqvB,IAGT9X,EAAQc,KAAK,8BACNX,EAAAA,GAAAA,GAAaH,EAAS+X,EAAoB,aAA1C5X,CAAwD1X,GACjE,CAGA,SAASsvB,EAAmBtvB,GAC1B,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,qBACNb,EAAGxX,IAGLyX,EAAIzX,EACb,CACF,EAvHEgsB,UAIF,SAAkC9Q,EAAQC,GACxC,IAGIrnB,EAGA+0B,EAGA0F,EATAr3B,EAAQgkB,EAAOxpB,OAYnB,KAAOwF,KACL,GAAyB,UAArBgkB,EAAOhkB,GAAO,GAAgB,CAChC,GAA8B,YAA1BgkB,EAAOhkB,GAAO,GAAGhC,KAAoB,CACvCpB,EAAUoD,EACV,KACF,CAE8B,cAA1BgkB,EAAOhkB,GAAO,GAAGhC,OACnB2zB,EAAO3xB,EAEX,KAEgC,YAA1BgkB,EAAOhkB,GAAO,GAAGhC,MAEnBgmB,EAAO5Q,OAAOpT,EAAO,GAGlBq3B,GAAwC,eAA1BrT,EAAOhkB,GAAO,GAAGhC,OAClCq5B,EAAar3B,GAKnB,IAAMq4B,EAAU,CACdr6B,KAAM,gBACN5B,MAAOjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO2N,GAAM,GAAGv1B,OACzCM,IAAKvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOA,EAAOxpB,OAAS,GAAG,GAAGkC,MAGtDsnB,EAAO2N,GAAM,GAAG3zB,KAAO,oBAGnBq5B,GACFrT,EAAO5Q,OAAOue,EAAM,EAAG,CAAC,QAAS0G,EAASpU,IAC1CD,EAAO5Q,OAAOikB,EAAa,EAAG,EAAG,CAAC,OAAQrT,EAAOpnB,GAAS,GAAIqnB,IAC9DD,EAAOpnB,GAAS,GAAGF,IAAMvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOqT,GAAY,GAAG36B,MAEjEsnB,EAAOpnB,GAAS,GAAKy7B,EAIvB,OADArU,EAAO3mB,KAAK,CAAC,OAAQg7B,EAASpU,IACvBD,CACT,GC/DO,IAAMsU,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAaWC,GAAe,CAAC,MAAO,SAAU,QAAS,YClE1CC,GAAW,CACtBh/B,KAAM,WACN4mB,SAkCF,SAA0BC,EAASC,EAAIC,GACrC,IAGI4U,EAGAsD,EAGAjQ,EAGAxoB,EAGAg1B,EAfE3vB,EAAO5I,KAgBb,OAGA,SAAeqM,GAIb,OAHAuX,EAAQW,MAAM,YACdX,EAAQW,MAAM,gBACdX,EAAQa,QAAQpY,GACTitB,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT4vB,GAGI,KAAT5vB,GACFuX,EAAQa,QAAQpY,GACT6vB,GAGI,KAAT7vB,GACFuX,EAAQa,QAAQpY,GAChBqsB,EAAO,EAGA9vB,EAAKipB,UAAYhO,EAAKsY,IAG3BxX,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GAChB0f,EAAS3oB,OAAO8I,aAAaG,GAC7B2vB,GAAW,EACJxpB,GAGFsR,EAAIzX,EACb,CAGA,SAAS4vB,EAAiB5vB,GACxB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChBqsB,EAAO,EACA0D,GAGI,KAAT/vB,GACFuX,EAAQa,QAAQpY,GAChBqsB,EAAO,EACP3M,EAAS,SACTxoB,EAAQ,EACD84B,IAGL1X,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GAChBqsB,EAAO,EACA9vB,EAAKipB,UAAYhO,EAAKsY,GAGxBrY,EAAIzX,EACb,CAGA,SAAS+vB,EAAkB/vB,GACzB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTzD,EAAKipB,UAAYhO,EAAKsY,GAGxBrY,EAAIzX,EACb,CAGA,SAASgwB,EAAgBhwB,GACvB,OAAIA,IAAS0f,EAAOhK,WAAWxe,MAC7BqgB,EAAQa,QAAQpY,GACT9I,IAAUwoB,EAAOhuB,OACpB6K,EAAKipB,UACHhO,EACAoN,EACFoL,GAGCvY,EAAIzX,EACb,CAGA,SAAS6vB,EAAc7vB,GACrB,OAAIsY,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GAChB0f,EAAS3oB,OAAO8I,aAAaG,GACtBmG,GAGFsR,EAAIzX,EACb,CAGA,SAASmG,EAAQnG,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACA8Y,EAAAA,GAAAA,IAA0B9Y,GAGf,KAATA,GACA2vB,GACAF,GAAapU,SAASqE,EAAO1Z,gBAE7BqmB,EAAO,EACA9vB,EAAKipB,UAAYhO,EAAGxX,GAAQ4kB,EAAa5kB,IAG9CwvB,GAAenU,SAASqE,EAAO1Z,gBACjCqmB,EAAO,EAEM,KAATrsB,GACFuX,EAAQa,QAAQpY,GACTiwB,GAGF1zB,EAAKipB,UAAYhO,EAAGxX,GAAQ4kB,EAAa5kB,KAGlDqsB,EAAO,EAEA9vB,EAAKipB,YAAcjpB,EAAK0nB,OAAO6B,KAAKvpB,EAAKyK,MAAMzT,MAClDkkB,EAAIzX,GACJ2vB,EACAO,EAA4BlwB,GAC5BmwB,EAAwBnwB,IAGjB,KAATA,IAAe0Y,EAAAA,GAAAA,IAAkB1Y,IACnCuX,EAAQa,QAAQpY,GAChB0f,GAAU3oB,OAAO8I,aAAaG,GACvBmG,GAGFsR,EAAIzX,EACb,CAGA,SAASiwB,EAAiBjwB,GACxB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTzD,EAAKipB,UAAYhO,EAAKoN,GAGxBnN,EAAIzX,EACb,CAGA,SAASmwB,EAAwBnwB,GAC/B,OAAIiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTmwB,GAGFC,EAAYpwB,EACrB,CAGA,SAASkwB,EAA4BlwB,GACnC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTowB,GAGI,KAATpwB,GAAwB,KAATA,IAAesY,EAAAA,GAAAA,IAAWtY,IAC3CuX,EAAQa,QAAQpY,GACTqwB,IAGLpY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTkwB,GAGFE,EAAYpwB,EACrB,CAGA,SAASqwB,EAAsBrwB,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA0Y,EAAAA,GAAAA,IAAkB1Y,IAElBuX,EAAQa,QAAQpY,GACTqwB,GAGFC,EAA2BtwB,EACpC,CAGA,SAASswB,EAA2BtwB,GAClC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTuwB,IAGLtY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTswB,GAGFJ,EAA4BlwB,EACrC,CAGA,SAASuwB,EAA6BvwB,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOyX,EAAIzX,GAGA,KAATA,GAAwB,KAATA,GACjBuX,EAAQa,QAAQpY,GAChBksB,EAASlsB,EACFwwB,IAGLvY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTuwB,IAGTrE,EAAS,KACFuE,EAA+BzwB,GACxC,CAGA,SAASwwB,EAA6BxwB,GACpC,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GAC/ByX,EAAIzX,GAGTA,IAASksB,GACX3U,EAAQa,QAAQpY,GACT0wB,IAGTnZ,EAAQa,QAAQpY,GACTwwB,EACT,CAGA,SAASC,EAA+BzwB,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA8Y,EAAAA,GAAAA,IAA0B9Y,GAEnBswB,EAA2BtwB,IAGpCuX,EAAQa,QAAQpY,GACTywB,EACT,CAGA,SAASC,EAAkC1wB,GACzC,OAAa,KAATA,GAAwB,KAATA,IAAeiY,EAAAA,GAAAA,IAAcjY,GACvCkwB,EAA4BlwB,GAG9ByX,EAAIzX,EACb,CAGA,SAASowB,EAAYpwB,GACnB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT2wB,GAGFlZ,EAAIzX,EACb,CAGA,SAAS2wB,EAAc3wB,GACrB,OAAIiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACT2wB,GAGO,OAAT3wB,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GACvC4kB,EAAa5kB,GACbyX,EAAIzX,EACV,CAGA,SAAS4kB,EAAa5kB,GACpB,OAAa,KAATA,GAAwB,IAATqsB,GACjB9U,EAAQa,QAAQpY,GACT4wB,GAGI,KAAT5wB,GAAwB,IAATqsB,GACjB9U,EAAQa,QAAQpY,GACT6wB,GAGI,KAAT7wB,GAAwB,IAATqsB,GACjB9U,EAAQa,QAAQpY,GACT8wB,GAGI,KAAT9wB,GAAwB,IAATqsB,GACjB9U,EAAQa,QAAQpY,GACT8vB,GAGI,KAAT9vB,GAAwB,IAATqsB,GACjB9U,EAAQa,QAAQpY,GACT+wB,KAGLpZ,EAAAA,GAAAA,IAAmB3X,IAAmB,IAATqsB,GAAuB,IAATA,EAQlC,OAATrsB,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GAC/BgxB,EAAyBhxB,IAGlCuX,EAAQa,QAAQpY,GACT4kB,GAZErN,EAAQmO,MACbuL,GACAH,EACAE,EAHKzZ,CAILvX,EASN,CAGA,SAASgxB,EAAyBhxB,GAEhC,OADAuX,EAAQc,KAAK,gBACN6Y,EAAkBlxB,EAC3B,CAGA,SAASkxB,EAAkBlxB,GACzB,OAAa,OAATA,EACKzE,EAAKyE,IAGV2X,EAAAA,GAAAA,IAAmB3X,GACduX,EAAQyM,QACb,CACE1M,SAAU6Z,EACVvZ,SAAS,GAEXsZ,EACA31B,EANKgc,CAOLvX,IAGJuX,EAAQW,MAAM,gBACP0M,EAAa5kB,GACtB,CAGA,SAASmxB,EAAY5Z,EAASC,EAAIC,GAChC,OAGA,SAAezX,GAIb,OAHAuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACN8L,CACT,EAGA,SAASA,EAAUnkB,GACjB,OAAOzD,EAAK0nB,OAAO6B,KAAKvpB,EAAKyK,MAAMzT,MAAQkkB,EAAIzX,GAAQwX,EAAGxX,EAC5D,CACF,CAGA,SAAS4wB,EAA0B5wB,GACjC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT8vB,GAGFlL,EAAa5kB,EACtB,CAGA,SAAS6wB,EAAuB7wB,GAC9B,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChB0f,EAAS,GACF0R,GAGFxM,EAAa5kB,EACtB,CAGA,SAASoxB,EAAsBpxB,GAC7B,OAAa,KAATA,GAAeyvB,GAAapU,SAASqE,EAAO1Z,gBAC9CuR,EAAQa,QAAQpY,GACT8wB,IAGLxY,EAAAA,GAAAA,IAAWtY,IAAS0f,EAAOhuB,OAAS,GACtC6lB,EAAQa,QAAQpY,GAChB0f,GAAU3oB,OAAO8I,aAAaG,GACvBoxB,GAGFxM,EAAa5kB,EACtB,CAGA,SAAS+wB,EAAgC/wB,GACvC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT8vB,GAGFlL,EAAa5kB,EACtB,CAGA,SAAS8vB,EAA8B9vB,GACrC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT8wB,GAGI,KAAT9wB,GAAwB,IAATqsB,GACjB9U,EAAQa,QAAQpY,GACT8vB,GAGFlL,EAAa5kB,EACtB,CAGA,SAAS8wB,EAAkB9wB,GACzB,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,gBACN9c,EAAKyE,KAGduX,EAAQa,QAAQpY,GACT8wB,EACT,CAGA,SAASv1B,EAAKyE,GAEZ,OADAuX,EAAQc,KAAK,YACNb,EAAGxX,EACZ,CACF,EA7gBEgsB,UAWF,SAA2B9Q,GACzB,IAAIhkB,EAAQgkB,EAAOxpB,OAEnB,KAAOwF,MACoB,UAArBgkB,EAAOhkB,GAAO,IAA4C,aAA1BgkB,EAAOhkB,GAAO,GAAGhC,QAKnDgC,EAAQ,GAAmC,eAA9BgkB,EAAOhkB,EAAQ,GAAG,GAAGhC,OAEpCgmB,EAAOhkB,GAAO,GAAG5D,MAAQ4nB,EAAOhkB,EAAQ,GAAG,GAAG5D,MAE9C4nB,EAAOhkB,EAAQ,GAAG,GAAG5D,MAAQ4nB,EAAOhkB,EAAQ,GAAG,GAAG5D,MAElD4nB,EAAO5Q,OAAOpT,EAAQ,EAAG,IAG3B,OAAOgkB,CACT,EA7BEoK,UAAU,GAIN2L,GAAqB,CACzB3Z,SA0gBF,SAA2BC,EAASC,EAAIC,GACtC,OAGA,SAAezX,GAKb,OAJAuX,EAAQc,KAAK,gBACbd,EAAQW,MAAM,mBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,mBACNd,EAAQyM,QAAQ3M,GAAAA,EAAWG,EAAIC,EACxC,CACF,EAphBEG,SAAS,GCfJ,IAAMyZ,GAAa,CACxB3gC,KAAM,aACN4mB,SAKF,SAA4BC,EAASC,EAAIC,GACvC,IAqBIyU,EArBE3vB,EAAO5I,KAGP29B,EAAwB,CAC5Bha,SAuKF,SAA8BC,EAASC,EAAIC,GACzC,IAAIhc,EAAO,EACX,OAAOic,EAAAA,GAAAA,GACLH,EACAga,EACA,aACA59B,KAAKswB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,qBACzC1jB,EACA,GAIN,SAAS45B,EAAqBvxB,GAG5B,OAFAuX,EAAQW,MAAM,mBACdX,EAAQW,MAAM,2BACPmX,EAAgBrvB,EACzB,CAGA,SAASqvB,EAAgBrvB,GACvB,OAAIA,IAASksB,GACX3U,EAAQa,QAAQpY,GAChBvE,IACO4zB,GAGL5zB,EAAO+1B,EAAiB/Z,EAAIzX,IAChCuX,EAAQc,KAAK,4BACNX,EAAAA,GAAAA,GAAaH,EAAS+X,EAAoB,aAA1C5X,CAAwD1X,GACjE,CAGA,SAASsvB,EAAmBtvB,GAC1B,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,mBACNb,EAAGxX,IAGLyX,EAAIzX,EACb,CACF,EA9ME4X,SAAS,GAIL6Z,EAAc,CAClBna,SA8IF,SAA6BC,EAASC,EAAIC,GACxC,IAAMlb,EAAO5I,KACb,OAAOL,EAGP,SAASA,EAAM0M,GAIb,OAHAuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACN8L,CACT,CAGA,SAASA,EAAUnkB,GACjB,OAAOzD,EAAK0nB,OAAO6B,KAAKvpB,EAAKyK,MAAMzT,MAAQkkB,EAAIzX,GAAQwX,EAAGxX,EAC5D,CACF,EA7JE4X,SAAS,GAELyQ,EAAO10B,KAAKunB,OAAOvnB,KAAKunB,OAAOxpB,OAAS,GACxCggC,EACJrJ,GAAyB,eAAjBA,EAAK,GAAGnzB,KACZmzB,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAM32B,OACtC,EACF8/B,EAAW,EAIf,OAGA,SAAexxB,GAKb,OAJAuX,EAAQW,MAAM,cACdX,EAAQW,MAAM,mBACdX,EAAQW,MAAM,2BACdgU,EAASlsB,EACF2xB,EAAa3xB,EACtB,EAGA,SAAS2xB,EAAa3xB,GACpB,OAAIA,IAASksB,GACX3U,EAAQa,QAAQpY,GAChBwxB,IACOG,IAGTpa,EAAQc,KAAK,2BACNmZ,EAAW,EACd/Z,EAAIzX,IACJ0X,EAAAA,GAAAA,GAAaH,EAASqa,EAAU,aAAhCla,CAA8C1X,GACpD,CAGA,SAAS4xB,EAAS5xB,GAChB,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GAC/B6xB,EAAU7xB,IAGnBuX,EAAQW,MAAM,uBACdX,EAAQW,MAAM,cAAe,CAC3BmM,YAAa,WAER2F,EAAKhqB,GACd,CAGA,SAASgqB,EAAKhqB,GACZ,OAAa,OAATA,IAAiB8Y,EAAAA,GAAAA,IAA0B9Y,IAC7CuX,EAAQc,KAAK,eACbd,EAAQc,KAAK,wBACNX,EAAAA,GAAAA,GAAaH,EAASua,EAAW,aAAjCpa,CAA+C1X,IAG3C,KAATA,GAAeA,IAASksB,EAAezU,EAAIzX,IAC/CuX,EAAQa,QAAQpY,GACTgqB,EACT,CAGA,SAAS8H,EAAU9xB,GACjB,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,GAC/B6xB,EAAU7xB,IAGnBuX,EAAQW,MAAM,uBACdX,EAAQW,MAAM,cAAe,CAC3BmM,YAAa,WAER7W,EAAKxN,GACd,CAGA,SAASwN,EAAKxN,GACZ,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,eACbd,EAAQc,KAAK,uBACNwZ,EAAU7xB,IAGN,KAATA,GAAeA,IAASksB,EAAezU,EAAIzX,IAC/CuX,EAAQa,QAAQpY,GACTwN,EACT,CAGA,SAASqkB,EAAU7xB,GAEjB,OADAuX,EAAQc,KAAK,mBACN9b,EAAKipB,UAAYhO,EAAGxX,GAAQ+jB,EAAa/jB,EAClD,CAGA,SAAS+jB,EAAa/jB,GACpB,OAAa,OAATA,EACKktB,EAAMltB,IAGX2X,EAAAA,GAAAA,IAAmB3X,GACduX,EAAQyM,QACbyN,EACAla,EAAQyM,QACNsN,EACApE,EACAwE,GACIha,EAAAA,GAAAA,GACEH,EACAwM,EACA,aACA2N,EAAgB,GAElB3N,GAENmJ,EAdK3V,CAeLvX,IAGJuX,EAAQW,MAAM,iBACPiQ,EAAgBnoB,GACzB,CAGA,SAASmoB,EAAgBnoB,GACvB,OAAa,OAATA,IAAiB2X,EAAAA,GAAAA,IAAmB3X,IACtCuX,EAAQc,KAAK,iBACN0L,EAAa/jB,KAGtBuX,EAAQa,QAAQpY,GACTmoB,EACT,CAGA,SAAS+E,EAAMltB,GAEb,OADAuX,EAAQc,KAAK,cACNb,EAAGxX,EACZ,CA+DF,EAzNEslB,UAAU,kBCDC/P,GAAqB,CAChC7kB,KAAM,qBACN4mB,SAIF,SAAoCC,EAASC,EAAIC,GAC/C,IAIII,EAGAnf,EAPE6D,EAAO5I,KACT8H,EAAO,EAOX,OAGA,SAAeuE,GAKb,OAJAuX,EAAQW,MAAM,sBACdX,EAAQW,MAAM,4BACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,4BACN4U,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAa,KAATA,GACFuX,EAAQW,MAAM,mCACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,mCACN0Z,IAGTxa,EAAQW,MAAM,2BACdL,EAAM,GACNnf,EAAOggB,GAAAA,GACA7nB,EAAMmP,GACf,CAGA,SAAS+xB,EAAQ/xB,GACf,OAAa,KAATA,GAAwB,MAATA,GACjBuX,EAAQW,MAAM,uCACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,uCACbd,EAAQW,MAAM,2BACdL,EAAM,EACNnf,EAAO+f,GAAAA,GACA5nB,IAGT0mB,EAAQW,MAAM,2BACdL,EAAM,EACNnf,EAAO8f,GAAAA,GACA3nB,EAAMmP,GACf,CAGA,SAASnP,EAAMmP,GAEb,IAAIokB,EAEJ,OAAa,KAATpkB,GAAevE,GACjB2oB,EAAQ7M,EAAQc,KAAK,2BAGnB3f,IAASggB,GAAAA,KACRpD,EAAAA,GAAAA,GAA8B/Y,EAAK+rB,eAAelE,KAKrD7M,EAAQW,MAAM,4BACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,4BACbd,EAAQc,KAAK,sBACNb,GAPEC,EAAIzX,IAUXtH,EAAKsH,IAASvE,IAASoc,GACzBN,EAAQa,QAAQpY,GACTnP,GAGF4mB,EAAIzX,EACb,CACF,GC/FO,IAAMgyB,GAAkB,CAC7BthC,KAAM,kBACN4mB,SAIF,SAAiCC,EAASC,EAAIC,GAC5C,OAGA,SAAezX,GAKb,OAJAuX,EAAQW,MAAM,mBACdX,EAAQW,MAAM,gBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,gBACN4U,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAI2Y,EAAAA,GAAAA,IAAiB3Y,IACnBuX,EAAQW,MAAM,wBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,wBACbd,EAAQc,KAAK,mBACNb,GAGFC,EAAIzX,EACb,CACF,GC7BO,IAAMiyB,GAAa,CACxBvhC,KAAM,aACN4mB,SAIF,SAA4BC,EAASC,GACnC,OAGA,SAAexX,GAIb,OAHAuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GAAaH,EAASC,EAAI,aACnC,CACF,GCNO,IAAM0a,GAAW,CACtBxhC,KAAM,WACN4mB,SAgJF,SAA0BC,EAASC,EAAIC,GACrC,IAII0a,EAGAxD,EAPEpyB,EAAO5I,KACTuD,EAAQqF,EAAK2e,OAAOxpB,OAQxB,KAAOwF,KACL,IACkC,eAA/BqF,EAAK2e,OAAOhkB,GAAO,GAAGhC,MACU,cAA/BqH,EAAK2e,OAAOhkB,GAAO,GAAGhC,QACvBqH,EAAK2e,OAAOhkB,GAAO,GAAGk7B,UACvB,CACAD,EAAa51B,EAAK2e,OAAOhkB,GAAO,GAChC,KACF,CAGF,OAGA,SAAe8I,GACb,IAAKmyB,EACH,OAAO1a,EAAIzX,GAGb,OAAImyB,EAAWE,UAAkBC,EAAStyB,IAC1C2uB,EAAUpyB,EAAK0nB,OAAO0K,QAAQtT,UAC5BN,EAAAA,GAAAA,GACExe,EAAK+rB,eAAe,CAClBh1B,MAAO6+B,EAAWv+B,IAClBA,IAAK2I,EAAKyK,UAIhBuQ,EAAQW,MAAM,YACdX,EAAQW,MAAM,eACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACbd,EAAQc,KAAK,YACNka,EACT,EAGA,SAASA,EAAcvyB,GAErB,OAAa,KAATA,EACKuX,EAAQyM,QACbwO,GACAhb,EACAmX,EAAUnX,EAAK8a,EAHV/a,CAILvX,GAGS,KAATA,EACKuX,EAAQyM,QACbyO,GACAjb,EACAmX,EACIpX,EAAQyM,QAAQ0O,GAA6Blb,EAAI8a,GACjDA,EALC/a,CAMLvX,GAGG2uB,EAAUnX,EAAGxX,GAAQsyB,EAAStyB,EACvC,CAGA,SAASsyB,EAAStyB,GAEhB,OADAmyB,EAAWC,WAAY,EAChB3a,EAAIzX,EACb,CACF,EA1NEgsB,UA6CF,SAA2B9Q,EAAQC,GACjC,IAIIiJ,EAGA6I,EAGA0F,EAGAC,EAbA17B,EAAQgkB,EAAOxpB,OACfq0B,EAAS,EAcb,KAAO7uB,KAGL,GAFAktB,EAAQlJ,EAAOhkB,GAAO,GAElB+1B,EAAM,CAER,GACiB,SAAf7I,EAAMlvB,MACU,cAAfkvB,EAAMlvB,MAAwBkvB,EAAMiO,UAErC,MAIuB,UAArBnX,EAAOhkB,GAAO,IAAiC,cAAfktB,EAAMlvB,OACxCkvB,EAAMiO,WAAY,EAEtB,MAAO,GAAIM,GACT,GACuB,UAArBzX,EAAOhkB,GAAO,KACE,eAAfktB,EAAMlvB,MAAwC,cAAfkvB,EAAMlvB,QACrCkvB,EAAMgO,YAEPnF,EAAO/1B,EAEY,cAAfktB,EAAMlvB,MAAsB,CAC9B6wB,EAAS,EACT,KACF,MAEsB,aAAf3B,EAAMlvB,OACfy9B,EAAQz7B,GAIZ,IAAM27B,EAAQ,CACZ39B,KAA+B,cAAzBgmB,EAAO+R,GAAM,GAAG/3B,KAAuB,OAAS,QACtD5B,MAAOjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO+R,GAAM,GAAG35B,OACzCM,IAAKvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOA,EAAOxpB,OAAS,GAAG,GAAGkC,MAEhDo6B,EAAQ,CACZ94B,KAAM,QACN5B,MAAOjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO+R,GAAM,GAAG35B,OACzCM,IAAKvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOyX,GAAO,GAAG/+B,MAEpCi1B,EAAO,CACX3zB,KAAM,YACN5B,MAAOjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO+R,EAAOlH,EAAS,GAAG,GAAGnyB,KACtDA,IAAKvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOyX,EAAQ,GAAG,GAAGr/B,QA+B9C,OA7BAs/B,EAAQ,CACN,CAAC,QAASC,EAAO1X,GACjB,CAAC,QAAS6S,EAAO7S,IAGnByX,GAAQr+B,EAAAA,GAAAA,GAAKq+B,EAAO1X,EAAOvmB,MAAMs4B,EAAO,EAAGA,EAAOlH,EAAS,IAE3D6M,GAAQr+B,EAAAA,GAAAA,GAAKq+B,EAAO,CAAC,CAAC,QAAS/J,EAAM1N,KAErCyX,GAAQr+B,EAAAA,GAAAA,GACNq+B,GACA3X,EAAAA,GAAAA,GACEE,EAAQ8I,OAAO/J,WAAW4Y,WAAWlM,KACrC1L,EAAOvmB,MAAMs4B,EAAOlH,EAAS,EAAG4M,EAAQ,GACxCxX,IAIJyX,GAAQr+B,EAAAA,GAAAA,GAAKq+B,EAAO,CAClB,CAAC,OAAQ/J,EAAM1N,GACfD,EAAOyX,EAAQ,GACfzX,EAAOyX,EAAQ,GACf,CAAC,OAAQ3E,EAAO7S,KAGlByX,GAAQr+B,EAAAA,GAAAA,GAAKq+B,EAAO1X,EAAOvmB,MAAMg+B,EAAQ,IAEzCC,GAAQr+B,EAAAA,GAAAA,GAAKq+B,EAAO,CAAC,CAAC,OAAQC,EAAO1X,MACrC7Q,EAAAA,GAAAA,GAAO4Q,EAAQ+R,EAAM/R,EAAOxpB,OAAQkhC,GAC7B1X,CACT,EA3IED,WAmBF,SAA4BC,GAC1B,IAGIkJ,EAHAltB,GAAS,EAKb,OAASA,EAAQgkB,EAAOxpB,QAIL,gBAHjB0yB,EAAQlJ,EAAOhkB,GAAO,IAGdhC,MACS,cAAfkvB,EAAMlvB,MACS,aAAfkvB,EAAMlvB,OAGNgmB,EAAO5Q,OAAOpT,EAAQ,EAAkB,eAAfktB,EAAMlvB,KAAwB,EAAI,GAC3DkvB,EAAMlvB,KAAO,OACbgC,KAIJ,OAAOgkB,CACT,GArCMsX,GAAoB,CACxBlb,SAuNF,SAA0BC,EAASC,EAAIC,GACrC,OAGA,SAAezX,GAKb,OAJAuX,EAAQW,MAAM,YACdX,EAAQW,MAAM,kBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,kBACNiW,GAAkB/W,EAAS0V,EACpC,EAGA,SAASA,EAAKjtB,GACZ,OAAa,KAATA,EACKpM,EAAIoM,GAGNmtB,GACL5V,EACAwb,EACAtb,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,GATK0V,CAULntB,EACJ,CAGA,SAAS+yB,EAAiB/yB,GACxB,OAAO8Y,EAAAA,GAAAA,IAA0B9Y,GAC7BsuB,GAAkB/W,EAASyb,EAA3B1E,CAAoCtuB,GACpCpM,EAAIoM,EACV,CAGA,SAASgzB,EAAQhzB,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBkuB,GACL3W,EACA+W,GAAkB/W,EAAS3jB,GAC3B6jB,EACA,gBACA,sBACA,sBANKyW,CAOLluB,GAGGpM,EAAIoM,EACb,CAGA,SAASpM,EAAIoM,GACX,OAAa,KAATA,GACFuX,EAAQW,MAAM,kBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,kBACbd,EAAQc,KAAK,YACNb,GAGFC,EAAIzX,EACb,CACF,GArRMyyB,GAAyB,CAC7Bnb,SAuRF,SAA+BC,EAASC,EAAIC,GAC1C,IAAMlb,EAAO5I,KACb,OAGA,SAAeqM,GACb,OAAO8tB,GAAa99B,KAClBuM,EACAgb,EACA0b,EACAxb,EACA,YACA,kBACA,kBAPKqW,CAQL9tB,EACJ,EAGA,SAASizB,EAAWjzB,GAClB,OAAOzD,EAAK0nB,OAAO0K,QAAQtT,UACzBN,EAAAA,GAAAA,GACExe,EAAK+rB,eAAe/rB,EAAK2e,OAAO3e,EAAK2e,OAAOxpB,OAAS,GAAG,IAAIiD,MAAM,GAAI,KAGtE6iB,EAAGxX,GACHyX,EAAIzX,EACV,CACF,GA9SM0yB,GAA8B,CAClCpb,SAgTF,SAAoCC,EAASC,EAAIC,GAC/C,OAGA,SAAezX,GAKb,OAJAuX,EAAQW,MAAM,aACdX,EAAQW,MAAM,mBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,mBACN4U,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAa,KAATA,GACFuX,EAAQW,MAAM,mBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,mBACbd,EAAQc,KAAK,aACNb,GAGFC,EAAIzX,EACb,CACF,GCtWO,IAAMkzB,GAAkB,CAC7BxiC,KAAM,kBACN4mB,SAKF,SAAiCC,EAASC,EAAIC,GAC5C,IAAMlb,EAAO5I,KACb,OAGA,SAAeqM,GAKb,OAJAuX,EAAQW,MAAM,cACdX,EAAQW,MAAM,oBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,oBACN4U,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAa,KAATA,GACFuX,EAAQW,MAAM,eACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACbd,EAAQc,KAAK,cACN6U,GAGFzV,EAAIzX,EACb,CAGA,SAASktB,EAAMltB,GAQb,OAAgB,KAATA,GAAe,2BAA4BzD,EAAK0nB,OAAO/J,WAC1DzC,EAAIzX,GACJwX,EAAGxX,EACT,CACF,EA3CEib,WAAYiX,GAASjX,0BCIVkY,GAAY,CACvBziC,KAAM,YACN4mB,SAwKF,SAA2BC,EAASC,GAClC,IAKI0U,EALEkH,EAAmBz/B,KAAKswB,OAAO/J,WAAWkZ,iBAAiBxM,KAC3D9C,EAAWnwB,KAAKmwB,SAChB1J,GAASX,EAAAA,GAAAA,GAAkBqK,GAIjC,OAGA,SAAe9jB,GAGb,OAFAuX,EAAQW,MAAM,qBACdgU,EAASlsB,EACFmsB,EAASnsB,EAClB,EAGA,SAASmsB,EAASnsB,GAChB,GAAIA,IAASksB,EAEX,OADA3U,EAAQa,QAAQpY,GACTmsB,EAGT,IAAM/H,EAAQ7M,EAAQc,KAAK,qBACrB6U,GAAQzT,EAAAA,GAAAA,GAAkBzZ,GAC1BitB,GACHC,GAAoB,IAAVA,GAAe9S,GAAWgZ,EAAiB/X,SAASrb,GAC3D2yB,GACHvY,GAAsB,IAAXA,GAAgB8S,GAAUkG,EAAiB/X,SAASyI,GAGlE,OAFAM,EAAMiP,MAAQ5P,QAAmB,KAAXyI,EAAgBe,EAAOA,IAAS7S,IAAWuY,IACjEvO,EAAMkP,OAAS7P,QAAmB,KAAXyI,EAAgByG,EAAQA,IAAUzF,IAAUD,IAC5DzV,EAAGxX,EACZ,CACF,EAxMEib,WAQF,SAA6BC,EAAQC,GACnC,IAGI8R,EAGA4F,EAGAhK,EAGA0K,EAGAlE,EAGAjO,EAGAoS,EAGAzN,EAxBA7uB,GAAS,EA6Bb,OAASA,EAAQgkB,EAAOxpB,QAEtB,GACuB,UAArBwpB,EAAOhkB,GAAO,IACY,sBAA1BgkB,EAAOhkB,GAAO,GAAGhC,MACjBgmB,EAAOhkB,GAAO,GAAGo8B,OAIjB,IAFArG,EAAO/1B,EAEA+1B,KAEL,GACsB,SAApB/R,EAAO+R,GAAM,IACY,sBAAzB/R,EAAO+R,GAAM,GAAG/3B,MAChBgmB,EAAO+R,GAAM,GAAGoG,OAChBlY,EAAQmN,eAAepN,EAAO+R,GAAM,IAAIvX,WAAW,KACjDyF,EAAQmN,eAAepN,EAAOhkB,GAAO,IAAIwe,WAAW,GACtD,CAKA,IACGwF,EAAO+R,GAAM,GAAGqG,QAAUpY,EAAOhkB,GAAO,GAAGm8B,SAC3CnY,EAAOhkB,GAAO,GAAGtD,IAAImyB,OAAS7K,EAAOhkB,GAAO,GAAG5D,MAAMyyB,QAAU,MAE7D7K,EAAO+R,GAAM,GAAGr5B,IAAImyB,OACnB7K,EAAO+R,GAAM,GAAG35B,MAAMyyB,OACtB7K,EAAOhkB,GAAO,GAAGtD,IAAImyB,OACrB7K,EAAOhkB,GAAO,GAAG5D,MAAMyyB,QACzB,GAGF,SAGF3E,EACElG,EAAO+R,GAAM,GAAGr5B,IAAImyB,OAAS7K,EAAO+R,GAAM,GAAG35B,MAAMyyB,OAAS,GAC5D7K,EAAOhkB,GAAO,GAAGtD,IAAImyB,OAAS7K,EAAOhkB,GAAO,GAAG5D,MAAMyyB,OAAS,EAC1D,EACA,EACN,IAAMzyB,EAAQjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO+R,GAAM,GAAGr5B,KAC1CA,EAAMvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOhkB,GAAO,GAAG5D,OAC/CmgC,GAAUngC,GAAQ8tB,GAClBqS,GAAU7/B,EAAKwtB,GACfmS,EAAkB,CAChBr+B,KAAMksB,EAAM,EAAI,iBAAmB,mBACnC9tB,MAAAA,EACAM,IAAKvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO+R,GAAM,GAAGr5B,MAEzCy7B,EAAkB,CAChBn6B,KAAMksB,EAAM,EAAI,iBAAmB,mBACnC9tB,MAAOjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOhkB,GAAO,GAAG5D,OAC1CM,IAAAA,GAEFi1B,EAAO,CACL3zB,KAAMksB,EAAM,EAAI,aAAe,eAC/B9tB,MAAOjE,OAAOsV,OAAO,CAAC,EAAGuW,EAAO+R,GAAM,GAAGr5B,KACzCA,IAAKvE,OAAOsV,OAAO,CAAC,EAAGuW,EAAOhkB,GAAO,GAAG5D,QAE1Cu/B,EAAQ,CACN39B,KAAMksB,EAAM,EAAI,SAAW,WAC3B9tB,MAAOjE,OAAOsV,OAAO,CAAC,EAAG4uB,EAAgBjgC,OACzCM,IAAKvE,OAAOsV,OAAO,CAAC,EAAG0qB,EAAgBz7B,MAEzCsnB,EAAO+R,GAAM,GAAGr5B,IAAMvE,OAAOsV,OAAO,CAAC,EAAG4uB,EAAgBjgC,OACxD4nB,EAAOhkB,GAAO,GAAG5D,MAAQjE,OAAOsV,OAAO,CAAC,EAAG0qB,EAAgBz7B,KAC3D4/B,EAAa,GAETtY,EAAO+R,GAAM,GAAGr5B,IAAImyB,OAAS7K,EAAO+R,GAAM,GAAG35B,MAAMyyB,SACrDyN,GAAaj/B,EAAAA,GAAAA,GAAKi/B,EAAY,CAC5B,CAAC,QAAStY,EAAO+R,GAAM,GAAI9R,GAC3B,CAAC,OAAQD,EAAO+R,GAAM,GAAI9R,MAI9BqY,GAAaj/B,EAAAA,GAAAA,GAAKi/B,EAAY,CAC5B,CAAC,QAASX,EAAO1X,GACjB,CAAC,QAASoY,EAAiBpY,GAC3B,CAAC,OAAQoY,EAAiBpY,GAC1B,CAAC,QAAS0N,EAAM1N,KAGlBqY,GAAaj/B,EAAAA,GAAAA,GACXi/B,GACAvY,EAAAA,GAAAA,GACEE,EAAQ8I,OAAO/J,WAAW4Y,WAAWlM,KACrC1L,EAAOvmB,MAAMs4B,EAAO,EAAG/1B,GACvBikB,IAIJqY,GAAaj/B,EAAAA,GAAAA,GAAKi/B,EAAY,CAC5B,CAAC,OAAQ3K,EAAM1N,GACf,CAAC,QAASkU,EAAiBlU,GAC3B,CAAC,OAAQkU,EAAiBlU,GAC1B,CAAC,OAAQ0X,EAAO1X,KAGdD,EAAOhkB,GAAO,GAAGtD,IAAImyB,OAAS7K,EAAOhkB,GAAO,GAAG5D,MAAMyyB,QACvDA,EAAS,EACTyN,GAAaj/B,EAAAA,GAAAA,GAAKi/B,EAAY,CAC5B,CAAC,QAAStY,EAAOhkB,GAAO,GAAIikB,GAC5B,CAAC,OAAQD,EAAOhkB,GAAO,GAAIikB,MAG7B4K,EAAS,GAGXzb,EAAAA,GAAAA,GAAO4Q,EAAQ+R,EAAO,EAAG/1B,EAAQ+1B,EAAO,EAAGuG,GAC3Ct8B,EAAQ+1B,EAAOuG,EAAW9hC,OAASq0B,EAAS,EAC5C,KACF,CAKN7uB,GAAS,EAET,OAASA,EAAQgkB,EAAOxpB,QACQ,sBAA1BwpB,EAAOhkB,GAAO,GAAGhC,OACnBgmB,EAAOhkB,GAAO,GAAGhC,KAAO,QAI5B,OAAOgmB,CACT,GAgDA,SAASuY,GAAUrX,EAAO2J,GACxB3J,EAAMppB,QAAU+yB,EAChB3J,EAAM2J,QAAUA,EAChB3J,EAAMoN,cAAgBzD,CACxB,CC7NO,IAAM2N,GAAW,CACtBhjC,KAAM,WACN4mB,SAIF,SAA0BC,EAASC,EAAIC,GACrC,IAAIhc,EAAO,EACX,OAGA,SAAeuE,GAMb,OALAuX,EAAQW,MAAM,YACdX,EAAQW,MAAM,kBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,kBACbd,EAAQW,MAAM,oBACP+U,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAIsY,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GACT2zB,IAGF/a,EAAAA,GAAAA,IAAW5Y,GAAQ4zB,EAAW5zB,GAAQyX,EAAIzX,EACnD,CAGA,SAAS2zB,EAAmB3zB,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,IAAe0Y,EAAAA,GAAAA,IAAkB1Y,GAClE6zB,EAAyB7zB,GACzB4zB,EAAW5zB,EACjB,CAGA,SAAS6zB,EAAyB7zB,GAChC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT8zB,IAIG,KAAT9zB,GAAwB,KAATA,GAAwB,KAATA,IAAe0Y,EAAAA,GAAAA,IAAkB1Y,KAChEvE,IAAS,IAET8b,EAAQa,QAAQpY,GACT6zB,GAGFD,EAAW5zB,EACpB,CAGA,SAAS8zB,EAAU9zB,GACjB,OAAa,KAATA,GACFuX,EAAQc,KAAK,oBACNzkB,EAAIoM,IAGA,OAATA,GAA0B,KAATA,GAAwB,KAATA,IAAe6Y,EAAAA,GAAAA,IAAa7Y,GACvDyX,EAAIzX,IAGbuX,EAAQa,QAAQpY,GACT8zB,EACT,CAGA,SAASF,EAAW5zB,GAClB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChBvE,EAAO,EACAs4B,IAGLnb,EAAAA,GAAAA,IAAW5Y,IACbuX,EAAQa,QAAQpY,GACT4zB,GAGFnc,EAAIzX,EACb,CAGA,SAAS+zB,EAAiB/zB,GACxB,OAAO0Y,EAAAA,GAAAA,IAAkB1Y,GAAQg0B,EAAWh0B,GAAQyX,EAAIzX,EAC1D,CAGA,SAASg0B,EAAWh0B,GAClB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChBvE,EAAO,EACAs4B,GAGI,KAAT/zB,GAEFuX,EAAQc,KAAK,oBAAoBnjB,KAAO,gBACjCtB,EAAIoM,IAGNi0B,EAAWj0B,EACpB,CAGA,SAASi0B,EAAWj0B,GAClB,OAAc,KAATA,IAAe0Y,EAAAA,GAAAA,IAAkB1Y,KAAUvE,IAAS,IACvD8b,EAAQa,QAAQpY,GACA,KAATA,EAAci0B,EAAaD,GAG7Bvc,EAAIzX,EACb,CAGA,SAASpM,EAAIoM,GAKX,OAJAuX,EAAQW,MAAM,kBACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,kBACbd,EAAQc,KAAK,YACNb,CACT,CACF,GC3HO,IAAM0c,GAAW,CACtBxjC,KAAM,WACN4mB,SAIF,SAA0BC,EAASC,EAAIC,GACrC,IAGIyU,EAGAxM,EAGAxoB,EAGAg0B,EAZE3uB,EAAO5I,KAab,OAGA,SAAeqM,GAIb,OAHAuX,EAAQW,MAAM,YACdX,EAAQW,MAAM,gBACdX,EAAQa,QAAQpY,GACTitB,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTm0B,GAGI,KAATn0B,GACFuX,EAAQa,QAAQpY,GACT6vB,GAGI,KAAT7vB,GACFuX,EAAQa,QAAQpY,GACTo0B,IAGL9b,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GACTq0B,GAGF5c,EAAIzX,EACb,CAGA,SAASm0B,EAAgBn0B,GACvB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTs0B,GAGI,KAATt0B,GACFuX,EAAQa,QAAQpY,GAChB0f,EAAS,SACTxoB,EAAQ,EACDq9B,IAGLjc,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GACT7K,GAGFsiB,EAAIzX,EACb,CAGA,SAASs0B,EAAYt0B,GACnB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTw0B,GAGF/c,EAAIzX,EACb,CAGA,SAASw0B,EAAax0B,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZyX,EAAIzX,GAGA,KAATA,GACFuX,EAAQa,QAAQpY,GACTy0B,GAGF1/B,EAAQiL,EACjB,CAGA,SAASy0B,EAAiBz0B,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZyX,EAAIzX,GAGNjL,EAAQiL,EACjB,CAGA,SAASjL,EAAQiL,GACf,OAAa,OAATA,EACKyX,EAAIzX,GAGA,KAATA,GACFuX,EAAQa,QAAQpY,GACT00B,IAGL/c,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAcn2B,EACP4/B,EAAa30B,KAGtBuX,EAAQa,QAAQpY,GACTjL,EACT,CAGA,SAAS2/B,EAAa10B,GACpB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTpM,GAGFmB,EAAQiL,EACjB,CAGA,SAASu0B,EAAUv0B,GACjB,OAAIA,IAAS0f,EAAOhK,WAAWxe,MAC7BqgB,EAAQa,QAAQpY,GACT9I,IAAUwoB,EAAOhuB,OAASkjC,EAAQL,GAGpC9c,EAAIzX,EACb,CAGA,SAAS40B,EAAM50B,GACb,OAAa,OAATA,EACKyX,EAAIzX,GAGA,KAATA,GACFuX,EAAQa,QAAQpY,GACT60B,IAGLld,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAc0J,EACPD,EAAa30B,KAGtBuX,EAAQa,QAAQpY,GACT40B,EACT,CAGA,SAASC,EAAW70B,GAClB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACT80B,GAGFF,EAAM50B,EACf,CAGA,SAAS80B,EAAS90B,GAChB,OAAa,KAATA,EACKpM,EAAIoM,GAGA,KAATA,GACFuX,EAAQa,QAAQpY,GACT80B,GAGFF,EAAM50B,EACf,CAGA,SAAS7K,EAAY6K,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZpM,EAAIoM,IAGT2X,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAc/1B,EACPw/B,EAAa30B,KAGtBuX,EAAQa,QAAQpY,GACT7K,EACT,CAGA,SAASi/B,EAAYp0B,GACnB,OAAa,OAATA,EACKyX,EAAIzX,GAGA,KAATA,GACFuX,EAAQa,QAAQpY,GACT+0B,IAGLpd,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAckJ,EACPO,EAAa30B,KAGtBuX,EAAQa,QAAQpY,GACTo0B,EACT,CAGA,SAASW,EAAiB/0B,GACxB,OAAgB,KAATA,EAAcpM,EAAIoM,GAAQo0B,EAAYp0B,EAC/C,CAGA,SAAS6vB,EAAc7vB,GACrB,OAAIsY,EAAAA,GAAAA,IAAWtY,IACbuX,EAAQa,QAAQpY,GACTg1B,GAGFvd,EAAIzX,EACb,CAGA,SAASg1B,EAASh1B,GAChB,OAAa,KAATA,IAAe0Y,EAAAA,GAAAA,IAAkB1Y,IACnCuX,EAAQa,QAAQpY,GACTg1B,GAGFC,EAAgBj1B,EACzB,CAGA,SAASi1B,EAAgBj1B,GACvB,OAAI2X,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAc+J,EACPN,EAAa30B,KAGlBiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTi1B,GAGFrhC,EAAIoM,EACb,CAGA,SAASq0B,EAAQr0B,GACf,OAAa,KAATA,IAAe0Y,EAAAA,GAAAA,IAAkB1Y,IACnCuX,EAAQa,QAAQpY,GACTq0B,GAGI,KAATr0B,GAAwB,KAATA,IAAe8Y,EAAAA,GAAAA,IAA0B9Y,GACnDk1B,EAAel1B,GAGjByX,EAAIzX,EACb,CAGA,SAASk1B,EAAel1B,GACtB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTpM,GAGI,KAAToM,GAAwB,KAATA,IAAesY,EAAAA,GAAAA,IAAWtY,IAC3CuX,EAAQa,QAAQpY,GACTm1B,IAGLxd,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAcgK,EACPP,EAAa30B,KAGlBiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTk1B,GAGFthC,EAAIoM,EACb,CAGA,SAASm1B,EAAqBn1B,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA0Y,EAAAA,GAAAA,IAAkB1Y,IAElBuX,EAAQa,QAAQpY,GACTm1B,GAGFC,EAA0Bp1B,EACnC,CAGA,SAASo1B,EAA0Bp1B,GACjC,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GACTq1B,IAGL1d,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAckK,EACPT,EAAa30B,KAGlBiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTo1B,GAGFF,EAAel1B,EACxB,CAGA,SAASq1B,EAA4Br1B,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOyX,EAAIzX,GAGA,KAATA,GAAwB,KAATA,GACjBuX,EAAQa,QAAQpY,GAChBksB,EAASlsB,EACFs1B,IAGL3d,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAcmK,EACPV,EAAa30B,KAGlBiY,EAAAA,GAAAA,IAAcjY,IAChBuX,EAAQa,QAAQpY,GACTq1B,IAGT9d,EAAQa,QAAQpY,GAChBksB,OAASv0B,EACF49B,EACT,CAGA,SAASD,EAA4Bt1B,GACnC,OAAIA,IAASksB,GACX3U,EAAQa,QAAQpY,GACTw1B,GAGI,OAATx1B,EACKyX,EAAIzX,IAGT2X,EAAAA,GAAAA,IAAmB3X,IACrBkrB,EAAcoK,EACPX,EAAa30B,KAGtBuX,EAAQa,QAAQpY,GACTs1B,EACT,CAGA,SAASE,EAAiCx1B,GACxC,OAAa,KAATA,GAAwB,KAATA,IAAe8Y,EAAAA,GAAAA,IAA0B9Y,GACnDk1B,EAAel1B,GAGjByX,EAAIzX,EACb,CAGA,SAASu1B,EAA8Bv1B,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOyX,EAAIzX,GAGA,KAATA,IAAe8Y,EAAAA,GAAAA,IAA0B9Y,GACpCk1B,EAAel1B,IAGxBuX,EAAQa,QAAQpY,GACTu1B,EACT,CAKA,SAASZ,EAAa30B,GAKpB,OAJAuX,EAAQc,KAAK,gBACbd,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACNX,EAAAA,GAAAA,GACLH,EACAuX,EACA,aACAvyB,EAAK0nB,OAAO/J,WAAWyM,QAAQC,KAAKvL,SAAS,qBACzC1jB,EACA,EAER,CAGA,SAASm3B,EAAY9uB,GAEnB,OADAuX,EAAQW,MAAM,gBACPgT,EAAYlrB,EACrB,CAGA,SAASpM,EAAIoM,GACX,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,gBACbd,EAAQc,KAAK,YACNb,GAGFC,EAAIzX,EACb,CACF,GCtdO,IAAMy1B,GAAiB,CAC5B/kC,KAAM,iBACN4mB,SAKF,SAAgCC,EAASC,EAAIC,GAC3C,IAAMlb,EAAO5I,KACb,OAGA,SAAeqM,GAMb,OALAuX,EAAQW,MAAM,aACdX,EAAQW,MAAM,eACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,eACbd,EAAQc,KAAK,aACN6U,CACT,EAGA,SAASA,EAAMltB,GAQb,OAAgB,KAATA,GAAe,2BAA4BzD,EAAK0nB,OAAO/J,WAC1DzC,EAAIzX,GACJwX,EAAGxX,EACT,CACF,EA/BEib,WAAYiX,GAASjX,YCHhB,IAAMya,GAAkB,CAC7BhlC,KAAM,kBACN4mB,SAIF,SAAiCC,EAASC,EAAIC,GAC5C,OAGA,SAAezX,GAIb,OAHAuX,EAAQW,MAAM,mBACdX,EAAQW,MAAM,gBACdX,EAAQa,QAAQpY,GACTitB,CACT,EAGA,SAASA,EAAKjtB,GACZ,OAAI2X,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQc,KAAK,gBACbd,EAAQc,KAAK,mBACNb,EAAGxX,IAGLyX,EAAIzX,EACb,CACF,GCxBO,mBAAM21B,GAAW,CACtBjlC,KAAM,WACN4mB,SA0EF,SAA0BC,EAASC,EAAIC,GACrC,IAIIhc,EAGA2oB,EANAoN,EAAW,EAOf,OAGA,SAAexxB,GAGb,OAFAuX,EAAQW,MAAM,YACdX,EAAQW,MAAM,oBACPqb,EAAgBvzB,EACzB,EAGA,SAASuzB,EAAgBvzB,GACvB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChBwxB,IACO+B,IAGThc,EAAQc,KAAK,oBACNud,EAAI51B,GACb,CAGA,SAAS41B,EAAI51B,GAEX,OAAa,OAATA,EACKyX,EAAIzX,GAIA,KAATA,GACFokB,EAAQ7M,EAAQW,MAAM,oBACtBzc,EAAO,EACA4zB,EAAgBrvB,IAGZ,KAATA,GACFuX,EAAQW,MAAM,SACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,SACNud,IAGLje,EAAAA,GAAAA,IAAmB3X,IACrBuX,EAAQW,MAAM,cACdX,EAAQa,QAAQpY,GAChBuX,EAAQc,KAAK,cACNud,IAGTre,EAAQW,MAAM,gBACP7c,EAAK2E,GACd,CAIA,SAAS3E,EAAK2E,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACA2X,EAAAA,GAAAA,IAAmB3X,IAEnBuX,EAAQc,KAAK,gBACNud,EAAI51B,KAGbuX,EAAQa,QAAQpY,GACT3E,EACT,CAIA,SAASg0B,EAAgBrvB,GAEvB,OAAa,KAATA,GACFuX,EAAQa,QAAQpY,GAChBvE,IACO4zB,GAGL5zB,IAAS+1B,GACXja,EAAQc,KAAK,oBACbd,EAAQc,KAAK,YACNb,EAAGxX,KAGZokB,EAAMlvB,KAAO,eACNmG,EAAK2E,GACd,CACF,EA3KEtF,QAKF,SAAyBwgB,GACvB,IAIIhkB,EAGAghB,EAPA2d,EAAgB3a,EAAOxpB,OAAS,EAChCokC,EAAiB,EAQrB,IACsC,eAAnC5a,EAAO4a,GAAgB,GAAG5gC,MACU,UAAnCgmB,EAAO4a,GAAgB,GAAG5gC,QACO,eAAlCgmB,EAAO2a,GAAe,GAAG3gC,MACU,UAAlCgmB,EAAO2a,GAAe,GAAG3gC,MAI3B,IAFAgC,EAAQ4+B,IAEC5+B,EAAQ2+B,GACf,GAA8B,iBAA1B3a,EAAOhkB,GAAO,GAAGhC,KAAyB,CAE5CgmB,EAAO4a,GAAgB,GAAG5gC,KAAO,kBACjCgmB,EAAO2a,GAAe,GAAG3gC,KAAO,kBAChC4gC,GAAkB,EAClBD,GAAiB,EACjB,KACF,CAIJ3+B,EAAQ4+B,EAAiB,EACzBD,IAEA,OAAS3+B,GAAS2+B,QACFl+B,IAAVugB,EACEhhB,IAAU2+B,GAA2C,eAA1B3a,EAAOhkB,GAAO,GAAGhC,OAC9CgjB,EAAQhhB,GAGVA,IAAU2+B,GACgB,eAA1B3a,EAAOhkB,GAAO,GAAGhC,OAEjBgmB,EAAOhD,GAAO,GAAGhjB,KAAO,eAEpBgC,IAAUghB,EAAQ,IACpBgD,EAAOhD,GAAO,GAAGtkB,IAAMsnB,EAAOhkB,EAAQ,GAAG,GAAGtD,IAC5CsnB,EAAO5Q,OAAO4N,EAAQ,EAAGhhB,EAAQghB,EAAQ,GACzC2d,GAAiB3+B,EAAQghB,EAAQ,EACjChhB,EAAQghB,EAAQ,GAGlBA,OAAQvgB,GAIZ,OAAOujB,CACT,EA5DE4I,SA+DF,SAAkB9jB,GAEhB,OACW,KAATA,GACgD,oBAAhDrM,KAAKunB,OAAOvnB,KAAKunB,OAAOxpB,OAAS,GAAG,GAAGwD,IAE3C,GCxDO,IAAMyU,IAAQ,kBAClB,GAAKuP,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAK8T,IAAU,IAIL9I,IAAiB,WAC3B,GAAKqK,IAIK/F,IAAW,mBACpB,EAAIoG,KAAY,YAChB,EAAIA,KAAY,WACjB,GAAKA,IAAY,IAIP3I,IAAI,kBACd,GAAK+I,KAAU,WACf,GAAK/C,KAAa,WAClB,GAAK,CAACkD,GAAiBlD,MAAc,WACrC,GAAKyD,KAAQ,WACb,GAAKP,KAAe,WACpB,GAAKlD,KAAa,WAClB,GAAKoF,KAAU,WACf,IAAMA,IAAU,IAINl6B,IAAM,kBAChB,GAAKoe,KAAkB,WACvB,GAAKyc,IAAe,IAIVnJ,IAAI,mBACb,EAAIoJ,KAAU,YACd,EAAIA,KAAU,YACd,EAAIA,KAAU,WACf,GAAKiB,KAAe,WACpB,GAAK3d,KAAkB,WACvB,GAAK4d,KAAS,WACd,GAAK,CAACO,GAAUQ,MAAS,WACzB,GAAKuB,KAAc,WACnB,GAAK,CAACC,GAAiB1D,MAAgB,WACvC,GAAKE,KAAQ,WACb,GAAKiB,KAAS,WACd,GAAKwC,IAAQ,IAIH7C,GAAa,CACxBlM,KAAM,CAACuM,GAAW4C,KAIP3C,GAAmB,CAC9BxM,KAAM,CAAC,GAAI,KAIAD,GAAU,CACrBC,KAAM,ICzFR,IAAM9kB,GAAS,wCC6IT6T,GAAM,CAAC,EAAEpmB,eAYFymC,GAcX,SAAUnlC,EAAOovB,EAAUxvB,GAKzB,MAJwB,kBAAbwvB,IACTxvB,EAAUwvB,EACVA,OAAWtoB,GAejB,SAAkBlH,GAEhB,IAAMwlC,EAAS,CACbC,WAAY,GACZC,eAAgB,CAAC,WAAY,WAAY,UAAW,YAAa,UACjEje,MAAO,CACLwb,SAAU0C,EAAO7oB,IACjB8oB,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYJ,EAAO7G,IACnBvC,WAAYoJ,EAAOpJ,GACnBgF,gBAAiBsE,EACjB/gB,mBAAoB+gB,EACpBjF,WAAY+E,EAAOK,GACnBC,oBAAqBhX,EACrBiX,oBAAqBjX,EACrBkP,aAAcwH,EAAOK,EAAU/W,GAC/BiW,SAAUS,EAAOT,EAAUjW,GAC3BkX,aAAcN,EACdj7B,KAAMi7B,EACNO,cAAeP,EACf/H,WAAY6H,EAAO7H,GACnBuI,4BAA6BpX,EAC7BqX,sBAAuBrX,EACvBsX,sBAAuBtX,EACvBuX,SAAUb,EAAOa,GACjBvB,gBAAiBU,EAAOc,IACxBC,kBAAmBf,EAAOc,IAC1BxH,SAAU0G,EAAOgB,GAAM1X,GACvB2X,aAAcf,EACdpC,SAAUkC,EAAOgB,GAAM1X,GACvB4X,aAAchB,EACdiB,MAAOnB,EAAOmB,IACdvJ,MAAOtO,EACPnS,KAAM6oB,EAAO7oB,IACbiqB,SAAUpB,EAAOoB,IACjBC,cAAeC,EACfC,YAAavB,EAAOld,GAAM0e,GAC1BC,cAAezB,EAAOld,IACtBkW,UAAWgH,EAAOhH,IAClB0I,UAAWC,EACXC,gBAAiBtY,EACjBuY,0BAA2BvY,EAC3BwY,oBAAqBxY,EACrByY,cAAe/B,EAAO7G,IACtB6I,OAAQhC,EAAOgC,IACfnM,cAAemK,EAAOnK,KAExB5T,KAAM,CACJme,WAAY6B,IACZC,mBAAoBC,EACpB7E,SAAU2E,IACV9B,cAAeiC,EACfnC,iBAAkBoC,EAClBzL,WAAYqL,IACZK,qBAAsBC,EACtBC,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAAyBC,EACzB3H,WAAYgH,EAAOY,GACnBC,gBAAiBC,EACjBzC,oBAAqB0C,EACrBzC,oBAAqB0C,EACrBxC,cAAe8B,EACf/J,aAAcyJ,EAAOiB,GACrB3D,SAAU0C,EAAOkB,GACjB3C,aAAc+B,EACdt9B,KAAMs9B,EACNpK,WAAY8J,IACZvB,4BAA6B0C,EAC7BzC,sBAAuB0C,EACvBzC,sBAAuB0C,EACvBzC,SAAUoB,IACV3C,gBAAiB2C,EAAOsB,GACxBxC,kBAAmBkB,EAAOsB,GAC1BjK,SAAU2I,EAAOuB,GACjBvC,aAAcsB,EACdzE,SAAUmE,EAAOwB,GACjBvC,aAAcqB,EACdpB,MAAOc,EAAOyB,GACd9L,MAAO+L,EACPC,UAAWC,EACXhI,WAAYiI,EACZ3sB,KAAM8qB,EAAO8B,GACb3C,SAAUa,IACVV,YAAaU,IACbR,cAAeQ,IACfjJ,UAAWiJ,IACXL,gBAAiBoC,EACjBnC,0BAA2BoC,EAC3BnC,oBAAqBoC,EACrBC,SAAUC,EACVrC,cAAeE,EAAOoC,GACtBC,0BAA2BC,EAC3BC,kBAAmBC,EACnBzC,OAAQC,IACRpM,cAAeoM,MAGnByC,GAAU7E,GAASxlC,GAAW,CAAC,GAAGsqC,iBAAmB,IAGrD,IAAM1/B,EAAO,CAAC,EACd,OAAO2nB,EAUP,SAASA,EAAQ9H,GAqBf,IAnBA,IAAIrF,EAAO,CACT3gB,KAAM,OACN2a,SAAU,IAGNsL,EAAU,CACdjE,MAAO,CAACrB,GACRmlB,WAAY,GACZ/E,OAAAA,EACA/d,MAAAA,EACAG,KAAAA,EACAqH,OAAAA,EACAub,OAAAA,EACAC,QAAAA,EACAC,QAAAA,GAGIC,EAAY,GACdlkC,GAAS,IACJA,EAAQgkB,EAAOxpB,QAAQ,CAG9B,GAC4B,gBAA1BwpB,EAAOhkB,GAAO,GAAGhC,MACS,kBAA1BgmB,EAAOhkB,GAAO,GAAGhC,KAEjB,GAAyB,UAArBgmB,EAAOhkB,GAAO,GAChBkkC,EAAU7mC,KAAK2C,QAGfA,EAAQmkC,EAAYngB,EADPkgB,EAAUta,MACW5pB,EAGxC,CAEA,IADAA,GAAS,IACAA,EAAQgkB,EAAOxpB,QAAQ,CAC9B,IAAMylB,EAAU8e,EAAO/a,EAAOhkB,GAAO,IACjCye,GAAI3lB,KAAKmnB,EAAS+D,EAAOhkB,GAAO,GAAGhC,OACrCiiB,EAAQ+D,EAAOhkB,GAAO,GAAGhC,MAAMlF,KAC7BX,OAAOsV,OACL,CACE2jB,eAAgBpN,EAAOhkB,GAAO,GAAGoxB,gBAEnCnN,GAEFD,EAAOhkB,GAAO,GAGpB,CAGA,GAAIikB,EAAQ6f,WAAWtpC,OAAS,EAAG,CACjC,IAAM22B,EAAOlN,EAAQ6f,WAAW7f,EAAQ6f,WAAWtpC,OAAS,IAC5C22B,EAAK,IAAMiT,IACnBtrC,KAAKmrB,OAASxjB,EAAW0wB,EAAK,GACxC,CA0BA,IAvBAxS,EAAKxiB,SAAW,CACdC,MAAO8oB,GACLlB,EAAOxpB,OAAS,EACZwpB,EAAO,GAAG,GAAG5nB,MACb,CACEC,KAAM,EACNP,OAAQ,EACR+yB,OAAQ,IAGhBnyB,IAAKwoB,GACHlB,EAAOxpB,OAAS,EACZwpB,EAAOA,EAAOxpB,OAAS,GAAG,GAAGkC,IAC7B,CACEL,KAAM,EACNP,OAAQ,EACR+yB,OAAQ,KAMlB7uB,GAAS,IACAA,EAAQ++B,EAAOC,WAAWxkC,QACjCmkB,EAAOogB,EAAOC,WAAWh/B,GAAO2e,IAASA,EAE3C,OAAOA,CACT,CAQA,SAASwlB,EAAYngB,EAAQ5nB,EAAO5B,GAYlC,IAXA,IAII8lC,EAEAzQ,EAEAwU,EAEAjP,EAVAp1B,EAAQ5D,EAAQ,EAChBkoC,GAAoB,EACpBC,GAAa,IASRvkC,GAASxF,GAAQ,CACxB,IAAMo1B,EAAQ5L,EAAOhkB,GAmCrB,GAjCoB,kBAAlB4vB,EAAM,GAAG5xB,MACS,gBAAlB4xB,EAAM,GAAG5xB,MACS,eAAlB4xB,EAAM,GAAG5xB,MAEQ,UAAb4xB,EAAM,GACR0U,IAEAA,IAEFlP,OAAW30B,GACgB,oBAAlBmvB,EAAM,GAAG5xB,KACD,UAAb4xB,EAAM,MAEN0Q,GACClL,GACAkP,GACAD,IAEDA,EAAsBrkC,GAExBo1B,OAAW30B,GAGK,eAAlBmvB,EAAM,GAAG5xB,MACS,kBAAlB4xB,EAAM,GAAG5xB,MACS,mBAAlB4xB,EAAM,GAAG5xB,MACS,mBAAlB4xB,EAAM,GAAG5xB,MACS,6BAAlB4xB,EAAM,GAAG5xB,OAITo3B,OAAW30B,IAGT6jC,GACa,UAAb1U,EAAM,IACY,mBAAlBA,EAAM,GAAG5xB,OACY,IAAtBsmC,GACc,SAAb1U,EAAM,KACa,kBAAlBA,EAAM,GAAG5xB,MACU,gBAAlB4xB,EAAM,GAAG5xB,MACb,CACA,GAAIsiC,EAAU,CACZ,IAAIkE,EAAYxkC,EAEhB,IADA6vB,OAAYpvB,EACL+jC,KAAa,CAClB,IAAMC,EAAYzgB,EAAOwgB,GACzB,GACwB,eAAtBC,EAAU,GAAGzmC,MACS,oBAAtBymC,EAAU,GAAGzmC,KACb,CACA,GAAqB,SAAjBymC,EAAU,GAAe,SACzB5U,IACF7L,EAAO6L,GAAW,GAAG7xB,KAAO,kBAC5BumC,GAAa,GAEfE,EAAU,GAAGzmC,KAAO,aACpB6xB,EAAY2U,CACd,MAAO,GACiB,eAAtBC,EAAU,GAAGzmC,MACS,qBAAtBymC,EAAU,GAAGzmC,MACS,+BAAtBymC,EAAU,GAAGzmC,MACS,qBAAtBymC,EAAU,GAAGzmC,MACS,mBAAtBymC,EAAU,GAAGzmC,KAIb,KAEJ,CAEEqmC,KACExU,GAAawU,EAAsBxU,KAGrCyQ,EAASoE,SAAU,GAIrBpE,EAAS5jC,IAAMvE,OAAOsV,OACpB,CAAC,EACDoiB,EAAY7L,EAAO6L,GAAW,GAAGzzB,MAAQwzB,EAAM,GAAGlzB,KAEpDsnB,EAAO5Q,OAAOyc,GAAa7vB,EAAO,EAAG,CAAC,OAAQsgC,EAAU1Q,EAAM,KAC9D5vB,IACAxF,GACF,CAGsB,mBAAlBo1B,EAAM,GAAG5xB,OACXsiC,EAAW,CACTtiC,KAAM,WAEN0mC,SAAS,EACTtoC,MAAOjE,OAAOsV,OAAO,CAAC,EAAGmiB,EAAM,GAAGxzB,QAGpC4nB,EAAO5Q,OAAOpT,EAAO,EAAG,CAAC,QAASsgC,EAAU1Q,EAAM,KAClD5vB,IACAxF,IACA6pC,OAAsB5jC,EACtB20B,GAAW,EAEf,CACF,CAIA,OADApR,EAAO5nB,GAAO,GAAGsoC,QAAUH,EACpB/pC,CACT,CAcA,SAASwpC,EAAQ/qC,EAAKU,GACpBwK,EAAKlL,GAAOU,CACd,CAYA,SAASsqC,EAAQhrC,GACf,OAAOkL,EAAKlL,EACd,CAYA,SAASimC,EAAOhoB,EAAQytB,GACtB,OAAO5O,EAOP,SAASA,EAAK7I,GACZlM,EAAMloB,KAAK2D,KAAMya,EAAOgW,GAAQA,GAC5ByX,GAAKA,EAAI7rC,KAAK2D,KAAMywB,EAC1B,CACF,CAMA,SAAS1E,IACP/rB,KAAKujB,MAAM3iB,KAAK,CACdW,KAAM,WACN2a,SAAU,IAEd,CAgBA,SAASqI,EAAM1kB,EAAM4wB,EAAO0X,GAU1B,OATenoC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAEvCme,SAAStb,KAAKf,GACrBG,KAAKujB,MAAM3iB,KAAKf,GAChBG,KAAKqnC,WAAWzmC,KAAK,CAAC6vB,EAAO0X,IAE7BtoC,EAAKH,SAAW,CACdC,MAAO8oB,GAAMgI,EAAM9wB,QAEdE,CACT,CAUA,SAAS6kC,EAAOwD,GACd,OAAOlJ,EAOP,SAASA,EAAMvO,GACTyX,GAAKA,EAAI7rC,KAAK2D,KAAMywB,GACxB/L,EAAKroB,KAAK2D,KAAMywB,EAClB,CACF,CAYA,SAAS/L,EAAK+L,EAAO2X,GACnB,IAAMvoC,EAAOG,KAAKujB,MAAM4J,MAClBmM,EAAOt5B,KAAKqnC,WAAWla,MAC7B,IAAKmM,EACH,MAAM,IAAI94B,MACR,iBACEiwB,EAAMlvB,KACN,MACAinB,EAAkB,CAChB7oB,MAAO8wB,EAAM9wB,MACbM,IAAKwwB,EAAMxwB,MAEb,yBAWN,OATWq5B,EAAK,GAAG/3B,OAASkvB,EAAMlvB,OAC5B6mC,EACFA,EAAY/rC,KAAK2D,KAAMywB,EAAO6I,EAAK,KAEnBA,EAAK,IAAMqO,IACnBtrC,KAAK2D,KAAMywB,EAAO6I,EAAK,KAGnCz5B,EAAKH,SAASO,IAAMwoB,GAAMgI,EAAMxwB,KACzBJ,CACT,CAMA,SAASynC,IACP,OnC1pBG,SAAkBpqC,EAAOJ,GAC9B,IAAMmzB,GAAmBnzB,GAAW,CAAC,GAAGmzB,gBACxC,OAAOD,EACL9yB,EAC2B,mBAApB+yB,GAAgCA,EAE3C,CmCopBWn0B,CAASkE,KAAKujB,MAAM4J,MAC7B,CAUA,SAAS8W,IACPsD,EAAQ,+BAA+B,EACzC,CAMA,SAASxD,EAAqBtT,GACxB+W,EAAQ,iCACOxnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvC4B,MAAQykB,OAAOwC,SAAS5mB,KAAK20B,eAAelE,GAAQ,IAC7D8W,EAAQ,+BAEZ,CAMA,SAAS9B,IACP,IAAM/9B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCsqC,KAAO3gC,CACd,CAMA,SAASg+B,IACP,IAAMh+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvC8b,KAAOnS,CACd,CAMA,SAAS89B,IAEHgC,EAAQ,oBACZxnC,KAAK+rB,SACLwb,EAAQ,kBAAkB,GAC5B,CAMA,SAASjC,IACP,IAAM59B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCb,MAAQwK,EAAKzI,QAAQ,2BAA4B,IACtDsoC,EAAQ,iBACV,CAMA,SAAS5B,IACP,IAAMj+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCb,MAAQwK,EAAKzI,QAAQ,eAAgB,GAC5C,CAMA,SAAS6mC,EAA4BrV,GACnC,IAAM4J,EAAQr6B,KAAKsnC,SACbznC,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAC5C8B,EAAKw6B,MAAQA,EACbx6B,EAAKg7B,YAAazT,EAAAA,GAAAA,GAChBpnB,KAAK20B,eAAelE,IACpBpe,aACJ,CAMA,SAAS0zB,IACP,IAAMr+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCmX,MAAQxN,CACf,CAMA,SAASm+B,IACP,IAAMn+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCqrB,IAAM1hB,CACb,CAMA,SAASk9B,EAAyBnU,GAChC,IAAM5wB,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAC5C,IAAK8B,EAAKyoC,MAAO,CACf,IAAMA,EAAQtoC,KAAK20B,eAAelE,GAAO1yB,OACzC8B,EAAKyoC,MAAQA,CACf,CACF,CAMA,SAASpB,IACPK,EAAQ,gCAAgC,EAC1C,CAMA,SAASP,EAAgCvW,GAC1BzwB,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCuqC,MAAqD,KAA7CtoC,KAAK20B,eAAelE,GAAO1O,WAAW,GAAY,EAAI,CACrE,CAMA,SAAS+kB,IACPS,EAAQ,+BACV,CAOA,SAAS5E,EAAYlS,GACnB,IAAM5wB,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACxC22B,EAAO70B,EAAKqc,SAASrc,EAAKqc,SAASne,OAAS,GAC3C22B,GAAsB,SAAdA,EAAKnzB,QAEhBmzB,EAAOQ,MAEFx1B,SAAW,CACdC,MAAO8oB,GAAMgI,EAAM9wB,QAGrBE,EAAKqc,SAAStb,KAAK8zB,IAErB10B,KAAKujB,MAAM3iB,KAAK8zB,EAClB,CAOA,SAASsQ,EAAWvU,GAClB,IAAMiE,EAAO10B,KAAKujB,MAAM4J,MACxBuH,EAAKx3B,OAAS8C,KAAK20B,eAAelE,GAClCiE,EAAKh1B,SAASO,IAAMwoB,GAAMgI,EAAMxwB,IAClC,CAOA,SAASsmC,EAAiB9V,GACxB,IAAMjJ,EAAUxnB,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAE/C,GAAIypC,EAAQ,eAIV,OAHahgB,EAAQtL,SAASsL,EAAQtL,SAASne,OAAS,GACnD2B,SAASO,IAAMwoB,GAAMgI,EAAMxwB,UAChCsnC,EAAQ,gBAIPC,EAAQ,iCACTlF,EAAOE,eAAe9a,SAASF,EAAQjmB,QAEvCohC,EAAYtmC,KAAK2D,KAAMywB,GACvBuU,EAAW3oC,KAAK2D,KAAMywB,GAE1B,CAOA,SAASuV,IACPuB,EAAQ,eAAe,EACzB,CAOA,SAAStB,IACP,IAAMv+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCb,MAAQwK,CACf,CAOA,SAASw+B,IACP,IAAMx+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCb,MAAQwK,CACf,CAOA,SAASk+B,IACP,IAAMl+B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCb,MAAQwK,CACf,CAOA,SAAS8+B,IACP,IAAM3mC,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAK5C,GAAIypC,EAAQ,eAAgB,CAE1B,IAAMe,EAAgBf,EAAQ,kBAAoB,WAClD3nC,EAAK0B,MAAQ,YAEb1B,EAAK0oC,cAAgBA,SAEd1oC,EAAKupB,WACLvpB,EAAKqV,KACd,aAESrV,EAAKg7B,kBAELh7B,EAAKw6B,MAEdkN,EAAQ,gBACV,CAOA,SAASpB,IACP,IAAMtmC,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAK5C,GAAIypC,EAAQ,eAAgB,CAE1B,IAAMe,EAAgBf,EAAQ,kBAAoB,WAClD3nC,EAAK0B,MAAQ,YAEb1B,EAAK0oC,cAAgBA,SAEd1oC,EAAKupB,WACLvpB,EAAKqV,KACd,aAESrV,EAAKg7B,kBAELh7B,EAAKw6B,MAEdkN,EAAQ,gBACV,CAOA,SAASjB,EAAgB7V,GACvB,IAAMjtB,EAASxD,KAAK20B,eAAelE,GAC7B+X,EAAWxoC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAGhDyqC,EAASnO,OAAQvT,EAAAA,GAAAA,GAAatjB,GAE9BglC,EAAS3N,YAAazT,EAAAA,GAAAA,GAAoB5jB,GAAQ6O,aACpD,CAOA,SAAS+zB,IACP,IAAMqC,EAAWzoC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAC1Cb,EAAQ8C,KAAKsnC,SACbznC,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAG5C,GADAwpC,EAAQ,eAAe,GACL,SAAd1nC,EAAK0B,KAAiB,CAGxB,IAAM2a,EAAWusB,EAASvsB,SAC1Brc,EAAKqc,SAAWA,CAClB,MACErc,EAAKqwB,IAAMhzB,CAEf,CAOA,SAASwpC,IACP,IAAMh/B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCqrB,IAAM1hB,CACb,CAOA,SAASi/B,IACP,IAAMj/B,EAAO1H,KAAKsnC,SACLtnC,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCmX,MAAQxN,CACf,CAOA,SAASm/B,IACPU,EAAQ,cACV,CAOA,SAASnD,IACPmD,EAAQ,gBAAiB,YAC3B,CAOA,SAASd,EAAsBhW,GAC7B,IAAM4J,EAAQr6B,KAAKsnC,SACbznC,EAAOG,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GAG5C8B,EAAKw6B,MAAQA,EAEbx6B,EAAKg7B,YAAazT,EAAAA,GAAAA,GAChBpnB,KAAK20B,eAAelE,IACpBpe,cACFk1B,EAAQ,gBAAiB,OAC3B,CAOA,SAASrC,EAA+BzU,GACtC8W,EAAQ,yBAA0B9W,EAAMlvB,KAC1C,CAMA,SAAS8jC,EAA8B5U,GACrC,IAGIvzB,EAHEwK,EAAO1H,KAAK20B,eAAelE,GAC3BlvB,EAAOimC,EAAQ,0BAGjBjmC,GACFrE,GAAQypB,EAAAA,GAAAA,GACNjf,EACS,oCAATnG,EAA6C,GAAK,IAEpDgmC,EAAQ,2BAGRrqC,GADeykB,EAAAA,GAAAA,GAA8Bja,GAG/C,IAAMgtB,EAAO10B,KAAKujB,MAAM4J,MACxBuH,EAAKx3B,OAASA,EACdw3B,EAAKh1B,SAASO,IAAMwoB,GAAMgI,EAAMxwB,IAClC,CAMA,SAAS6kC,EAAuBrU,GAC9BuU,EAAW3oC,KAAK2D,KAAMywB,GACTzwB,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCqrB,IAAMppB,KAAK20B,eAAelE,EACjC,CAMA,SAASoU,EAAoBpU,GAC3BuU,EAAW3oC,KAAK2D,KAAMywB,GACTzwB,KAAKujB,MAAMvjB,KAAKujB,MAAMxlB,OAAS,GACvCqrB,IAAM,UAAYppB,KAAK20B,eAAelE,EAC7C,CAOA,SAAS4I,IACP,MAAO,CACL93B,KAAM,aACN2a,SAAU,GAEd,CAGA,SAAS4mB,IACP,MAAO,CACLvhC,KAAM,OACN8mC,KAAM,KACNxuB,KAAM,KACN3c,MAAO,GAEX,CAGA,SAAS8kC,IACP,MAAO,CACLzgC,KAAM,aACNrE,MAAO,GAEX,CAGA,SAAS09B,IACP,MAAO,CACLr5B,KAAM,aACNs5B,WAAY,GACZR,MAAO,KACPnlB,MAAO,KACPkU,IAAK,GAET,CAGA,SAASka,IACP,MAAO,CACL/hC,KAAM,WACN2a,SAAU,GAEd,CAGA,SAAS0f,KAEP,MAAO,CACLr6B,KAAM,UACN+mC,WAAOtkC,EACPkY,SAAU,GAEd,CAGA,SAASqnB,KACP,MAAO,CACLhiC,KAAM,QAEV,CAGA,SAASkiC,KACP,MAAO,CACLliC,KAAM,OACNrE,MAAO,GAEX,CAGA,SAAS0mC,KACP,MAAO,CACLriC,KAAM,QACN2T,MAAO,KACPkU,IAAK,GACL8G,IAAK,KAET,CAGA,SAAStW,KACP,MAAO,CACLrY,KAAM,OACN2T,MAAO,KACPkU,IAAK,GACLlN,SAAU,GAEd,CAMA,SAASqJ,GAAKkL,GACZ,MAAO,CACLlvB,KAAM,OACNmnC,QAAwB,gBAAfjY,EAAMlvB,KACf5B,MAAO,KAEPgpC,OAAQlY,EAAMwX,QACd/rB,SAAU,GAEd,CAMA,SAAS2nB,GAASpT,GAChB,MAAO,CACLlvB,KAAM,WAENonC,OAAQlY,EAAMwX,QACdW,QAAS,KACT1sB,SAAU,GAEd,CAGA,SAASuf,KACP,MAAO,CACLl6B,KAAM,YACN2a,SAAU,GAEd,CAGA,SAASuoB,KACP,MAAO,CACLljC,KAAM,SACN2a,SAAU,GAEd,CAGA,SAASgZ,KACP,MAAO,CACL3zB,KAAM,OACNrE,MAAO,GAEX,CAGA,SAASo7B,KACP,MAAO,CACL/2B,KAAM,gBAEV,CACF,CAllCWsnC,CAAS/rC,EAAT+rC,CCjLJ,SAAqBthB,GAC1B,MAAQ2L,GAAY3L,KAIpB,OAAOA,CACT,CD4KMuhB,CExKC,WAA6B,IAAdhsC,EAAU,UAAH,6CAAG,CAAC,EASzBwzB,EAAS,CACb0K,QAAS,GACT7I,KAAM,CAAC,EACP5L,YATiBR,EAAAA,EAAAA,GAEjB,CAACgjB,GAAmBz2B,OAAOxV,EAAQkpB,YAAc,KAQjD7lB,QAASsa,EAAOta,IAChB6V,SAAUyE,EAAOzE,IACjBsc,KAAM7X,EAAO6X,IACb9uB,OAAQiX,EAAOjX,IACf0xB,KAAMza,EAAOya,KAEf,OAAO5E,EAKP,SAAS7V,EAAOma,GACd,OAGA,SAAiBhP,GACf,OAAOkQ,GAAgBxF,EAAQsE,EAAShP,EAC1C,CACF,CACF,CF0IQxE,CAAMtkB,GAASkZ,WAAW8c,MD1K3B,WACL,IAOIkW,EAPA3pC,EAAS,EACT0sB,EAAS,GAGTpsB,GAAQ,EAIZ,OAGA,SAAsBzC,EAAOovB,EAAUrsB,GAErC,IAGIT,EAGAmI,EAGAmsB,EAGAmV,EAGA58B,EAfEmpB,EAAS,GA6Bf,IAZAt4B,EAAQ6uB,EAAS7uB,EAAMpB,SAASwwB,GAChCwH,EAAgB,EAChB/H,EAAS,GAELpsB,IAC0B,QAAxBzC,EAAM6kB,WAAW,IACnB+R,IAGFn0B,OAAQqE,GAGH8vB,EAAgB52B,EAAMa,QAAQ,CAOnC,GANAoQ,GAAOiV,UAAY0Q,EAEnBmV,GADAzpC,EAAQ2O,GAAOpN,KAAK7D,UAEO8G,IAAhBxE,EAAM+D,MAAsB/D,EAAM+D,MAAQrG,EAAMa,OAC3DsO,EAAOnP,EAAM6kB,WAAWknB,IAEnBzpC,EAAO,CACVusB,EAAS7uB,EAAM8D,MAAM8yB,GACrB,KACF,CAEA,GAAa,KAATznB,GAAeynB,IAAkBmV,GAAeD,EAClDxT,EAAO50B,MAAM,GACbooC,OAAmBhlC,OAYnB,OAVIglC,IACFxT,EAAO50B,MAAM,GACbooC,OAAmBhlC,GAGjB8vB,EAAgBmV,IAClBzT,EAAO50B,KAAK1D,EAAM8D,MAAM8yB,EAAemV,IACvC5pC,GAAU4pC,EAAcnV,GAGlBznB,GACN,KAAK,EACHmpB,EAAO50B,KAAK,OACZvB,IACA,MAGF,KAAK,EAIH,IAHAsI,EAA+B,EAAxBsG,KAAKi7B,KAAK7pC,EAAS,GAC1Bm2B,EAAO50B,MAAM,GAENvB,IAAWsI,GAAM6tB,EAAO50B,MAAM,GAErC,MAGF,KAAK,GACH40B,EAAO50B,MAAM,GACbvB,EAAS,EACT,MAGF,QACE2pC,GAAmB,EACnB3pC,EAAS,EAKfy0B,EAAgBmV,EAAc,CAChC,CAQA,OANIhpC,IACE+oC,GAAkBxT,EAAO50B,MAAM,GAC/BmrB,GAAQyJ,EAAO50B,KAAKmrB,GACxByJ,EAAO50B,KAAK,OAGP40B,CACT,CACF,CC6DwC2T,GAAajsC,EAAOovB,GAAU,KAGpE,EAslCF,SAAS7D,GAAMhL,GACb,MAAO,CACL7d,KAAM6d,EAAE7d,KACRP,OAAQoe,EAAEpe,OACV+yB,OAAQ3U,EAAE2U,OAEd,CAOA,SAAS+U,GAAUiC,EAAUpjB,GAE3B,IADA,IAAIziB,GAAS,IACJA,EAAQyiB,EAAWjoB,QAAQ,CAClC,IAAMb,EAAQ8oB,EAAWziB,GACrBnH,MAAMF,QAAQgB,GAChBiqC,GAAUiC,EAAUlsC,GAEpBipB,GAAUijB,EAAUlsC,EAExB,CACF,CAOA,SAASipB,GAAUijB,EAAUjjB,GAE3B,IAAI3pB,EACJ,IAAKA,KAAO2pB,EACV,GAAInE,GAAI3lB,KAAK8pB,EAAW3pB,GACtB,GAAY,mBAARA,EAA0B,CAC5B,IACW,EADL8pB,EAAQH,EAAU3pB,GACxB,GAAI8pB,GACF,EAAA8iB,EAAS5sC,IAAKoE,KAAI,gBAAI0lB,GAE1B,MAAO,GAAY,eAAR9pB,EAAsB,CAC/B,IACW,EADL8pB,EAAQH,EAAU3pB,GACxB,GAAI8pB,GACF,EAAA8iB,EAAS5sC,IAAKoE,KAAI,gBAAI0lB,GAE1B,MAAO,GAAY,UAAR9pB,GAA2B,SAARA,EAAgB,CAC5C,IAAM8pB,EAAQH,EAAU3pB,GACpB8pB,GACF5qB,OAAOsV,OAAOo4B,EAAS5sC,GAAM8pB,EAEjC,CAGN,CAGA,SAASqhB,GAAethB,EAAMC,GAC5B,MAAID,EACI,IAAI7lB,MACR,iBACE6lB,EAAK9kB,KACL,MACAinB,EAAkB,CAChB7oB,MAAO0mB,EAAK1mB,MACZM,IAAKomB,EAAKpmB,MAEZ,0BACAqmB,EAAM/kB,KACN,MACAinB,EAAkB,CAChB7oB,MAAO2mB,EAAM3mB,MACbM,IAAKqmB,EAAMrmB,MAEb,aAGE,IAAIO,MACR,oCACE8lB,EAAM/kB,KACN,MACAinB,EAAkB,CAChB7oB,MAAO2mB,EAAM3mB,MACbM,IAAKqmB,EAAMrmB,MAEb,kBAGR,CG32CA,OCMe,SAAqBnD,GAAS,WAkB3CpB,OAAOsV,OAAOhR,KAAM,CAACmuB,OAhBN,SAACY,GAEd,IAAM5M,EAAmC,EAAKza,KAAK,YAEnD,OAAO26B,GACLtT,EACArzB,OAAOsV,OAAO,CAAC,EAAGmR,EAAUrlB,EAAS,CAInCkpB,WAAY,EAAKte,KAAK,wBAA0B,GAChD0/B,gBAAiB,EAAK1/B,KAAK,2BAA6B,KAG9D,GAGF,EC8BO,SAAS2hC,GAAansC,GAO3B,IALA,IAAMiG,EAAS,GACXI,GAAS,EACT5D,EAAQ,EACR2pC,EAAO,IAEF/lC,EAAQrG,EAAMa,QAAQ,CAC7B,IAAMsO,EAAOnP,EAAM6kB,WAAWxe,GAG1BtE,EAAU,GAEd,GACW,KAAToN,IACA0Y,EAAAA,GAAAA,IAAkB7nB,EAAM6kB,WAAWxe,EAAQ,MAC3CwhB,EAAAA,GAAAA,IAAkB7nB,EAAM6kB,WAAWxe,EAAQ,IAE3C+lC,EAAO,OAEJ,GAAIj9B,EAAO,IACT,oBAAoBtH,KAAK3B,OAAO8I,aAAaG,MAChDpN,EAAUmE,OAAO8I,aAAaG,SAG7B,GAAIA,EAAO,OAASA,EAAO,MAAO,CACrC,IAAM1E,EAAOzK,EAAM6kB,WAAWxe,EAAQ,GAElC8I,EAAO,OAAS1E,EAAO,OAASA,EAAO,OACzC1I,EAAUmE,OAAO8I,aAAaG,EAAM1E,GACpC2hC,EAAO,GAGPrqC,EAAU,QAEd,MAEEA,EAAUmE,OAAO8I,aAAaG,GAG5BpN,IACFkE,EAAOvC,KAAK1D,EAAM8D,MAAMrB,EAAO4D,GAAQgmC,mBAAmBtqC,IAC1DU,EAAQ4D,EAAQ+lC,EAAO,EACvBrqC,EAAU,IAGRqqC,IACF/lC,GAAS+lC,EACTA,EAAO,EAEX,CAEA,OAAOnmC,EAAOyG,KAAK,IAAM1M,EAAM8D,MAAMrB,EACvC,gBCgCa6pC,GAeT,SAAUtnB,EAAMnd,EAAM+d,EAAS5Q,GACT,oBAATnN,GAA0C,oBAAZ+d,IACvC5Q,EAAU4Q,EACVA,EAAU/d,EACVA,EAAO,OAGT8d,EAAAA,GAAAA,IAAaX,EAAMnd,GAMnB,SAAkBlF,EAAMkjB,GACtB,IAAME,EAASF,EAAQA,EAAQhlB,OAAS,GACxC,OAAO+kB,EACLjjB,EACAojB,EAASA,EAAO/G,SAASrQ,QAAQhM,GAAQ,KACzCojB,EAEJ,GAbmC/Q,EAcrC,ECrJSu3B,GAAahhB,GAAM,SAUnBihB,GAAWjhB,GAAM,OAsB9B,SAASA,GAAMlnB,GACb,OAQA,SAAe1B,GACb,IAAM4oB,EAAS5oB,GAAQA,EAAKH,UAAYG,EAAKH,SAAS6B,IAAU,CAAC,EAGjE,MAAO,CAEL3B,KAAM6oB,EAAM7oB,MAAQ,KAEpBP,OAAQopB,EAAMppB,QAAU,KAExB+yB,OAAQ3J,EAAM2J,QAAU,EAAI3J,EAAM2J,OAAS,KAE/C,CACF,CChEA,IAAMpQ,GAAM,CAAC,EAAEpmB,eA0Cf,SAAS+tC,GAAMzsC,GACb,OAAOkG,OAAOlG,GAAS,IAAImqB,aAC7B,CC7CO,SAASuiB,GAAkBrpB,EAAO1gB,GACvC,IAIIgqC,EAJEn2B,EAAKtQ,OAAOvD,EAAKg7B,YAAYxT,cAC7ByiB,EAAST,GAAa31B,EAAGrB,eACzB9O,EAAQgd,EAAMwpB,cAAcl+B,QAAQ6H,IAI3B,IAAXnQ,GACFgd,EAAMwpB,cAAcnpC,KAAK8S,GACzB6M,EAAMypB,eAAet2B,GAAM,EAC3Bm2B,EAAUtpB,EAAMwpB,cAAchsC,SAE9BwiB,EAAMypB,eAAet2B,KACrBm2B,EAAUtmC,EAAQ,GAGpB,IAAM0mC,EAAe1pB,EAAMypB,eAAet2B,GAGpCkG,EAAO,CACXrY,KAAM,UACNiR,QAAS,IACT03B,WAAY,CACV9e,KAAM,IAAM7K,EAAM4pB,cAAgB,MAAQL,EAC1Cp2B,GACE6M,EAAM4pB,cACN,SACAL,GACCG,EAAe,EAAI,IAAMA,EAAe,IAC3CG,iBAAiB,EACjBC,gBAAiB,CAAC,mBAEpBnuB,SAAU,CAAC,CAAC3a,KAAM,OAAQrE,MAAOkG,OAAOymC,MAE1CtpB,EAAM+pB,MAAMzqC,EAAM+Z,GAGlB,IAAM2wB,EAAM,CACVhpC,KAAM,UACNiR,QAAS,MACT03B,WAAY,CAAC,EACbhuB,SAAU,CAACtC,IAGb,OADA2G,EAAM+pB,MAAMzqC,EAAM0qC,GACXhqB,EAAMiqB,UAAU3qC,EAAM0qC,EAC/B,CCpCO,SAASE,GAAOlqB,EAAO1gB,GAC5B,IAAM6qC,EAAU7qC,EAAK0oC,cACjBoC,EAAS,IAQb,GANgB,cAAZD,EACFC,GAAU,KACW,SAAZD,IACTC,GAAU,KAAO9qC,EAAKw6B,OAASx6B,EAAKg7B,YAAc,KAGlC,mBAAdh7B,EAAK0B,KACP,MAAO,CAACA,KAAM,OAAQrE,MAAO,KAAO2C,EAAKqwB,IAAMya,GAGjD,IAAMC,EAAWrqB,EAAM0F,IAAIpmB,GACrBmX,EAAO4zB,EAAS,GAElB5zB,GAAsB,SAAdA,EAAKzV,KACfyV,EAAK9Z,MAAQ,IAAM8Z,EAAK9Z,MAExB0tC,EAAS/kB,QAAQ,CAACtkB,KAAM,OAAQrE,MAAO,MAGzC,IAAMw3B,EAAOkW,EAASA,EAAS7sC,OAAS,GAQxC,OANI22B,GAAsB,SAAdA,EAAKnzB,KACfmzB,EAAKx3B,OAASytC,EAEdC,EAAShqC,KAAK,CAACW,KAAM,OAAQrE,MAAOytC,IAG/BC,CACT,CC+DA,SAASC,GAAchrC,GACrB,IAAM8oC,EAAS9oC,EAAK8oC,OAEpB,YAAkB3kC,IAAX2kC,GAAmC,OAAXA,EAC3B9oC,EAAKqc,SAASne,OAAS,EACvB4qC,CACN,CChIA,IAAMmC,GAAM,EACNC,GAAQ,GAWP,SAASC,GAAU9tC,GAQxB,IAPA,IAAMgD,EAASkD,OAAOlG,GAChBiR,EAAS,YACX3O,EAAQ2O,EAAOpN,KAAKb,GACpB+qC,EAAO,EAEL1rC,EAAQ,GAEPC,GACLD,EAAMqB,KACJsqC,GAAShrC,EAAOc,MAAMiqC,EAAMzrC,EAAM+D,OAAQ0nC,EAAO,GAAG,GACpDzrC,EAAM,IAGRyrC,EAAOzrC,EAAM+D,MAAQ/D,EAAM,GAAGzB,OAC9ByB,EAAQ2O,EAAOpN,KAAKb,GAKtB,OAFAX,EAAMqB,KAAKsqC,GAAShrC,EAAOc,MAAMiqC,GAAOA,EAAO,GAAG,IAE3C1rC,EAAMqK,KAAK,GACpB,CAYA,SAASshC,GAAShuC,EAAOyC,EAAOM,GAC9B,IAAI42B,EAAa,EACbE,EAAW75B,EAAMa,OAErB,GAAI4B,EAGF,IAFA,IAAI0M,EAAOnP,EAAMiuC,YAAYtU,GAEtBxqB,IAASy+B,IAAOz+B,IAAS0+B,IAC9BlU,IACAxqB,EAAOnP,EAAMiuC,YAAYtU,GAI7B,GAAI52B,EAGF,IAFA,IAAIoM,EAAOnP,EAAMiuC,YAAYpU,EAAW,GAEjC1qB,IAASy+B,IAAOz+B,IAAS0+B,IAC9BhU,IACA1qB,EAAOnP,EAAMiuC,YAAYpU,EAAW,GAIxC,OAAOA,EAAWF,EAAa35B,EAAM8D,MAAM61B,EAAYE,GAAY,EACrE,CCxCO,IAAMqU,GAAW,CACtBC,WCbK,SAAoB9qB,EAAO1gB,GAEhC,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,aACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAMiN,KAAKjN,EAAM0F,IAAIpmB,IAAO,IAGxC,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EDIEmoC,MEbK,SAAmB/qB,EAAO1gB,GAE/B,IAAMsD,EAAS,CAAC5B,KAAM,UAAWiR,QAAS,KAAM03B,WAAY,CAAC,EAAGhuB,SAAU,IAE1E,OADAqE,EAAM+pB,MAAMzqC,EAAMsD,GACX,CAACod,EAAMiqB,UAAU3qC,EAAMsD,GAAS,CAAC5B,KAAM,OAAQrE,MAAO,MAC/D,EFSEmP,KGbK,SAAckU,EAAO1gB,GAC1B,IAAM3C,EAAQ2C,EAAK3C,MAAQ2C,EAAK3C,MAAQ,KAAO,GAGzCmrC,EAAOxoC,EAAKwoC,KAAOxoC,EAAKwoC,KAAK7oC,MAAM,uBAAyB,KAE5D0qC,EAAa,CAAC,EAEhB7B,IACF6B,EAAWqB,UAAY,CAAC,YAAclD,IAKxC,IAAIllC,EAAS,CACX5B,KAAM,UACNiR,QAAS,OACT03B,WAAAA,EACAhuB,SAAU,CAAC,CAAC3a,KAAM,OAAQrE,MAAAA,KAa5B,OAVI2C,EAAKga,OACP1W,EAAOuE,KAAO,CAACmS,KAAMha,EAAKga,OAG5B0G,EAAM+pB,MAAMzqC,EAAMsD,GAIlBA,EAAS,CAAC5B,KAAM,UAAWiR,QAAS,MAAO03B,WAAY,CAAC,EAAGhuB,SAAU,CAHrE/Y,EAASod,EAAMiqB,UAAU3qC,EAAMsD,KAI/Bod,EAAM+pB,MAAMzqC,EAAMsD,GACXA,CACT,EHlBEqoC,OIfK,SAAuBjrB,EAAO1gB,GAEnC,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,MACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EJMEmgC,SKjBK,SAAkB/iB,EAAO1gB,GAE9B,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,KACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,ELQEymC,kBAAAA,GACA6B,SMXK,SAAkBlrB,EAAO1gB,GAI9B,IAHA,IAAM6rC,EAAenrB,EAAMmrB,aACvBC,EAAK,EAEFA,KAAMD,GAAcC,IAE3B,IAAM9Q,EAAaz3B,OAAOuoC,GAS1B,OAPAD,EAAa7Q,GAAc,CACzBt5B,KAAM,qBACNs5B,WAAAA,EACA3e,SAAU,CAAC,CAAC3a,KAAM,YAAa2a,SAAUrc,EAAKqc,WAC9Cxc,SAAUG,EAAKH,UAGVkqC,GAAkBrpB,EAAO,CAC9Bhf,KAAM,oBACNs5B,WAAAA,EACAn7B,SAAUG,EAAKH,UAEnB,ENREk8B,QOpBK,SAAiBrb,EAAO1gB,GAE7B,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,IAAM3S,EAAKyoC,MACpB4B,WAAY,CAAC,EACbhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EPWEsgC,KQnBK,SAAcljB,EAAO1gB,GAC1B,GAAI0gB,EAAMqrB,UAAW,CAEnB,IAAMzoC,EAAS,CAAC5B,KAAM,MAAOrE,MAAO2C,EAAK3C,OAEzC,OADAqjB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,CAGA,OAAO,IACT,ERUE0oC,eSjBK,SAAwBtrB,EAAO1gB,GACpC,IAAM+3B,EAAMrX,EAAMqa,WAAW/6B,EAAKg7B,YAElC,IAAKjD,EACH,OAAO6S,GAAOlqB,EAAO1gB,GAIvB,IAAMqqC,EAAa,CAACzsC,IAAK4rC,GAAazR,EAAIxO,KAAO,IAAK8G,IAAKrwB,EAAKqwB,KAE9C,OAAd0H,EAAI1iB,YAAgClR,IAAd4zB,EAAI1iB,QAC5Bg1B,EAAWh1B,MAAQ0iB,EAAI1iB,OAIzB,IAAM/R,EAAS,CAAC5B,KAAM,UAAWiR,QAAS,MAAO03B,WAAAA,EAAYhuB,SAAU,IAEvE,OADAqE,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,ETAEygC,MUpBK,SAAerjB,EAAO1gB,GAE3B,IAAMqqC,EAAa,CAACzsC,IAAK4rC,GAAaxpC,EAAKupB,MAE1B,OAAbvpB,EAAKqwB,UAA6BlsB,IAAbnE,EAAKqwB,MAC5Bga,EAAWha,IAAMrwB,EAAKqwB,KAGL,OAAfrwB,EAAKqV,YAAiClR,IAAfnE,EAAKqV,QAC9Bg1B,EAAWh1B,MAAQrV,EAAKqV,OAI1B,IAAM/R,EAAS,CAAC5B,KAAM,UAAWiR,QAAS,MAAO03B,WAAAA,EAAYhuB,SAAU,IAEvE,OADAqE,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EVKE2oC,WWvBK,SAAoBvrB,EAAO1gB,GAEhC,IAAMq1B,EAAO,CAAC3zB,KAAM,OAAQrE,MAAO2C,EAAK3C,MAAM+B,QAAQ,YAAa,MACnEshB,EAAM+pB,MAAMzqC,EAAMq1B,GAGlB,IAAM/xB,EAAS,CACb5B,KAAM,UACNiR,QAAS,OACT03B,WAAY,CAAC,EACbhuB,SAAU,CAACgZ,IAGb,OADA3U,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EXUE4oC,cYpBK,SAAuBxrB,EAAO1gB,GACnC,IAAM+3B,EAAMrX,EAAMqa,WAAW/6B,EAAKg7B,YAElC,IAAKjD,EACH,OAAO6S,GAAOlqB,EAAO1gB,GAIvB,IAAMqqC,EAAa,CAAC9e,KAAMie,GAAazR,EAAIxO,KAAO,KAEhC,OAAdwO,EAAI1iB,YAAgClR,IAAd4zB,EAAI1iB,QAC5Bg1B,EAAWh1B,MAAQ0iB,EAAI1iB,OAIzB,IAAM/R,EAAS,CACb5B,KAAM,UACNiR,QAAS,IACT03B,WAAAA,EACAhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EZFEyW,KavBK,SAAc2G,EAAO1gB,GAE1B,IAAMqqC,EAAa,CAAC9e,KAAMie,GAAaxpC,EAAKupB,MAEzB,OAAfvpB,EAAKqV,YAAiClR,IAAfnE,EAAKqV,QAC9Bg1B,EAAWh1B,MAAQrV,EAAKqV,OAI1B,IAAM/R,EAAS,CACb5B,KAAM,UACNiR,QAAS,IACT03B,WAAAA,EACAhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EbOE0gC,SFfK,SAAkBtjB,EAAO1gB,EAAMojB,GACpC,IAAM+oB,EAAUzrB,EAAM0F,IAAIpmB,GACpBosC,EAAQhpB,EAyEhB,SAAmBpjB,GACjB,IAAIosC,GAAQ,EACZ,GAAkB,SAAdpsC,EAAK0B,KAAiB,CACxB0qC,EAAQpsC,EAAK8oC,SAAU,EAIvB,IAHA,IAAMzsB,EAAWrc,EAAKqc,SAClB3Y,GAAS,GAEL0oC,KAAW1oC,EAAQ2Y,EAASne,QAClCkuC,EAAQpB,GAAc3uB,EAAS3Y,GAEnC,CAEA,OAAO0oC,CACT,CAtFyBC,CAAUjpB,GAAU4nB,GAAchrC,GAEnDqqC,EAAa,CAAC,EAEdhuB,EAAW,GAEjB,GAA4B,mBAAjBrc,EAAK+oC,QAAuB,CACrC,IAEInN,EAFEzkB,EAAOg1B,EAAQ,GAIjBh1B,GAAsB,YAAdA,EAAKzV,MAAuC,MAAjByV,EAAKxE,QAC1CipB,EAAYzkB,GAEZykB,EAAY,CAACl6B,KAAM,UAAWiR,QAAS,IAAK03B,WAAY,CAAC,EAAGhuB,SAAU,IACtE8vB,EAAQnmB,QAAQ4V,IAGdA,EAAUvf,SAASne,OAAS,GAC9B09B,EAAUvf,SAAS2J,QAAQ,CAACtkB,KAAM,OAAQrE,MAAO,MAGnDu+B,EAAUvf,SAAS2J,QAAQ,CACzBtkB,KAAM,UACNiR,QAAS,QACT03B,WAAY,CAAC3oC,KAAM,WAAYqnC,QAAS/oC,EAAK+oC,QAASuD,UAAU,GAChEjwB,SAAU,KAKZguB,EAAWqB,UAAY,CAAC,iBAC1B,CAIA,IAFA,IAAIhoC,GAAS,IAEJA,EAAQyoC,EAAQjuC,QAAQ,CAC/B,IAAMkd,EAAQ+wB,EAAQzoC,IAIpB0oC,GACU,IAAV1oC,GACe,YAAf0X,EAAM1Z,MACY,MAAlB0Z,EAAMzI,UAEN0J,EAAStb,KAAK,CAACW,KAAM,OAAQrE,MAAO,OAGnB,YAAf+d,EAAM1Z,MAAwC,MAAlB0Z,EAAMzI,SAAoBy5B,EAGxD/vB,EAAStb,KAAKqa,GAFdiB,EAAStb,KAAI,MAAbsb,GAAQ,OAASjB,EAAMiB,UAI3B,CAEA,IAAMwY,EAAOsX,EAAQA,EAAQjuC,OAAS,GAGlC22B,IAASuX,GAAuB,YAAdvX,EAAKnzB,MAAuC,MAAjBmzB,EAAKliB,UACpD0J,EAAStb,KAAK,CAACW,KAAM,OAAQrE,MAAO,OAItC,IAAMiG,EAAS,CAAC5B,KAAM,UAAWiR,QAAS,KAAM03B,WAAAA,EAAYhuB,SAAAA,GAE5D,OADAqE,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EErDEoiB,Kc3BK,SAAchF,EAAO1gB,GAE1B,IAAMqqC,EAAa,CAAC,EACd8B,EAAUzrB,EAAM0F,IAAIpmB,GACtB0D,GAAS,EAOb,IAL0B,kBAAf1D,EAAKF,OAAqC,IAAfE,EAAKF,QACzCuqC,EAAWvqC,MAAQE,EAAKF,SAIjB4D,EAAQyoC,EAAQjuC,QAAQ,CAC/B,IAAMkd,EAAQ+wB,EAAQzoC,GAEtB,GACiB,YAAf0X,EAAM1Z,MACY,OAAlB0Z,EAAMzI,SACNyI,EAAMivB,YACN9tC,MAAMF,QAAQ+e,EAAMivB,WAAWqB,YAC/BtwB,EAAMivB,WAAWqB,UAAU7jB,SAAS,kBACpC,CACAwiB,EAAWqB,UAAY,CAAC,sBACxB,KACF,CACF,CAGA,IAAMpoC,EAAS,CACb5B,KAAM,UACNiR,QAAS3S,EAAK6oC,QAAU,KAAO,KAC/BwB,WAAAA,EACAhuB,SAAUqE,EAAMiN,KAAKwe,GAAS,IAGhC,OADAzrB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EdPEs4B,Ue7BK,SAAmBlb,EAAO1gB,GAE/B,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,IACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EfoBE0F,KgB7BK,SAAc0X,EAAO1gB,GAE1B,IAAMsD,EAAS,CAAC5B,KAAM,OAAQ2a,SAAUqE,EAAMiN,KAAKjN,EAAM0F,IAAIpmB,KAE7D,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EhByBEshC,OiB/BK,SAAgBlkB,EAAO1gB,GAE5B,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,SACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EjBsBEipC,MkB9BK,SAAe7rB,EAAO1gB,GAC3B,IAAMwsC,EAAO9rB,EAAM0F,IAAIpmB,GACjBysC,EAAWD,EAAKE,QAEhBC,EAAe,GAErB,GAAIF,EAAU,CAEZ,IAAMt1B,EAAO,CACXzV,KAAM,UACNiR,QAAS,QACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAMiN,KAAK,CAAC8e,IAAW,IAEnC/rB,EAAM+pB,MAAMzqC,EAAKqc,SAAS,GAAIlF,GAC9Bw1B,EAAa5rC,KAAKoW,EACpB,CAEA,GAAIq1B,EAAKtuC,OAAS,EAAG,CAEnB,IAAM0uC,EAAO,CACXlrC,KAAM,UACNiR,QAAS,QACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAMiN,KAAK6e,GAAM,IAGvB1sC,EAAQ8pC,GAAW5pC,EAAKqc,SAAS,IACjCjc,EAAMypC,GAAS7pC,EAAKqc,SAASrc,EAAKqc,SAASne,OAAS,IACtD4B,EAAMC,MAAQK,EAAIL,OAAM6sC,EAAK/sC,SAAW,CAACC,MAAAA,EAAOM,IAAAA,IACpDusC,EAAa5rC,KAAK6rC,EACpB,CAGA,IAAMtpC,EAAS,CACb5B,KAAM,UACNiR,QAAS,QACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAMiN,KAAKgf,GAAc,IAGrC,OADAjsB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,ElBXEupC,UmBjCK,SAAmBnsB,EAAO1gB,GAI/B,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,KACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAM0F,IAAIpmB,IAGtB,OADA0gB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EnBsBEwpC,SoBtBK,SAAkBpsB,EAAO1gB,EAAMojB,GAWpC,IAVA,IAAM2pB,EAAW3pB,EAASA,EAAO/G,cAAWlY,EAGtCwO,EAAuB,KADZo6B,EAAWA,EAAS/gC,QAAQhM,GAAQ,GACpB,KAAO,KAClCgtC,EAAQ5pB,GAA0B,UAAhBA,EAAO1hB,KAAmB0hB,EAAO4pB,WAAQ7oC,EAC3DjG,EAAS8uC,EAAQA,EAAM9uC,OAAS8B,EAAKqc,SAASne,OAChD+uC,GAAa,EAEXC,EAAQ,KAELD,EAAY/uC,GAAQ,CAE3B,IAAMivC,EAAOntC,EAAKqc,SAAS4wB,GAErB5C,EAAa,CAAC,EACd+C,EAAaJ,EAAQA,EAAMC,QAAa9oC,EAE1CipC,IACF/C,EAAW2C,MAAQI,GAIrB,IAAI9pC,EAAS,CAAC5B,KAAM,UAAWiR,QAAAA,EAAS03B,WAAAA,EAAYhuB,SAAU,IAE1D8wB,IACF7pC,EAAO+Y,SAAWqE,EAAM0F,IAAI+mB,GAC5BzsB,EAAM+pB,MAAM0C,EAAM7pC,GAClBA,EAASod,EAAMiqB,UAAU3qC,EAAMsD,IAGjC4pC,EAAMnsC,KAAKuC,EACb,CAGA,IAAMA,EAAS,CACb5B,KAAM,UACNiR,QAAS,KACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAMiN,KAAKuf,GAAO,IAG9B,OADAxsB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EpBpBE+xB,KqBhCK,SAAc3U,EAAO1gB,GAE1B,IAAMsD,EAAS,CAAC5B,KAAM,OAAQrE,MAAO8tC,GAAU5nC,OAAOvD,EAAK3C,SAE3D,OADAqjB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,ErB4BEm1B,csBpCK,SAAuB/X,EAAO1gB,GAEnC,IAAMsD,EAAS,CACb5B,KAAM,UACNiR,QAAS,KACT03B,WAAY,CAAC,EACbhuB,SAAU,IAGZ,OADAqE,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,EtB2BE+pC,KAAM3qB,GACN4qB,KAAM5qB,GACNqY,WAAYrY,GACZ6qB,mBAAoB7qB,IAItB,SAASA,KAEP,OAAO,IACT,CuBwGA,IAAMP,GAAM,CAAC,EAAEpmB,eAYR,SAASyxC,GAAYnrB,EAAMplB,GAChC,IAAMqlB,EAAWrlB,GAAW,CAAC,EACvB8uC,EAAYzpB,EAASmrB,qBAAsB,EAE3C5B,EAAe,CAAC,EA2DtB,OAnDAnrB,EAAMqrB,UAAYA,EAElBrrB,EAAM4pB,mBACuBnmC,IAA3Bme,EAASgoB,eAA0D,OAA3BhoB,EAASgoB,cAC7C,gBACAhoB,EAASgoB,cAEf5pB,EAAMgtB,cAAgBprB,EAASorB,eAAiB,YAEhDhtB,EAAMitB,qBAAuBrrB,EAASqrB,sBAAwB,KAE9DjtB,EAAMktB,wBAA0BtrB,EAASsrB,yBAA2B,CAClElC,UAAW,CAAC,YAGdhrB,EAAMmtB,kBAAoBvrB,EAASurB,mBAAqB,kBAExDntB,EAAMotB,eAAiBxrB,EAASwrB,eAEhCptB,EAAMqtB,YAAczrB,EAASyrB,YAE7BrtB,EAAM6qB,UAAW,kBAAIA,IAAajpB,EAASipB,UAI3C7qB,EAAMqa,W5BxLD,SAAqB1Y,GAE1B,IAAM2rB,EAAQnyC,OAAO+e,OAAO,MAE5B,IAAKyH,IAASA,EAAK3gB,KACjB,MAAM,IAAIf,MAAM,wCAUlB,OAPAgpC,GAAMtnB,EAAM,cAAc,SAAC0Y,GACzB,IAAMlnB,EAAKi2B,GAAM/O,EAAWC,YACxBnnB,IAAOsO,GAAI3lB,KAAKwxC,EAAOn6B,KACzBm6B,EAAMn6B,GAAMknB,EAEhB,IAKA,SAAoBC,GAClB,IAAMnnB,EAAKi2B,GAAM9O,GAEjB,OAAOnnB,GAAMsO,GAAI3lB,KAAKwxC,EAAOn6B,GAAMm6B,EAAMn6B,GAAM,IACjD,CACF,C4BiKqBo6B,CAAY5rB,GAC/B3B,EAAMmrB,aAAeA,EAErBnrB,EAAMwpB,cAAgB,GAEtBxpB,EAAMypB,eAAiB,CAAC,EAExBzpB,EAAM+pB,MAAQA,GACd/pB,EAAMiqB,UAAYA,GAClBjqB,EAAMyP,IAsGN,SAAkBnwB,EAAMojB,GAEtB,OAAO+M,GAAIzP,EAAO1gB,EAAMojB,EAC1B,EAxGA1C,EAAM0F,IAkHN,SAAkBhD,GAEhB,OAAOgD,GAAI1F,EAAO0C,EACpB,EApHA1C,EAAMiN,KAAOA,GAEbjN,EAAMwtB,QAAUA,EAEhBvE,GAAMtnB,EAAM,sBAAsB,SAAC0Y,GACjC,IAAMlnB,EAAKtQ,OAAOw3B,EAAWC,YAAYxT,cAIpCrF,GAAI3lB,KAAKqvC,EAAch4B,KAC1Bg4B,EAAah4B,GAAMknB,EAEvB,IAGOra,EAWP,SAASwtB,EAAQ1nB,EAAMC,GAErB,GAAID,GAAQ,SAAUA,GAAQA,EAAK3e,KAAM,CAEvC,IAAMA,EAAO2e,EAAK3e,KAEdA,EAAKsmC,QACY,YAAf1nB,EAAM/kB,OACR+kB,EAAQ,CACN/kB,KAAM,UACNiR,QAAS,GACT03B,WAAY,CAAC,EACbhuB,SAAU,KAIdoK,EAAM9T,QAAU9K,EAAKsmC,OAGJ,YAAf1nB,EAAM/kB,MAAsBmG,EAAKumC,cACnC3nB,EAAM4jB,YAAa,kBAAI5jB,EAAM4jB,YAAexiC,EAAKumC,cAG/C,aAAc3nB,GAASA,EAAMpK,UAAYxU,EAAKwmC,YAChD5nB,EAAMpK,SAAWxU,EAAKwmC,UAE1B,CAEA,GAAI7nB,EAAM,CACR,IAAM8nB,EAAM,SAAU9nB,EAAOA,EAAO,CAAC3mB,SAAU2mB,ICpQ9C,SAAmBxmB,GACxB,OACGA,IACAA,EAAKH,WACLG,EAAKH,SAASC,QACdE,EAAKH,SAASC,MAAMC,OACpBC,EAAKH,SAASC,MAAMN,SACpBQ,EAAKH,SAASO,MACdJ,EAAKH,SAASO,IAAIL,OAClBC,EAAKH,SAASO,IAAIZ,MAEvB,ED2PW+uC,CAAUD,KAEb7nB,EAAM5mB,SAAW,CAACC,MAAO8pC,GAAW0E,GAAMluC,IAAKypC,GAASyE,IAE5D,CAEA,OAAO7nB,CACT,CAUA,SAAS/F,EAAM1gB,EAAM2S,EAAShN,EAAO0W,GAOnC,OANI9f,MAAMF,QAAQsJ,KAChB0W,EAAW1W,EACXA,EAAQ,CAAC,GAIJuoC,EAAQluC,EAAM,CACnB0B,KAAM,UACNiR,QAAAA,EACA03B,WAAY1kC,GAAS,CAAC,EACtB0W,SAAUA,GAAY,IAE1B,CA8BF,CAYA,SAASouB,GAAM1kB,EAAMyoB,GACfzoB,EAAKlmB,WAAU2uC,EAAG3uC,S7BpTjB,SAAkBG,GACvB,MAAO,CAACF,MAAO8pC,GAAW5pC,GAAOI,IAAKypC,GAAS7pC,GACjD,C6BkTmCH,CAASkmB,GAC5C,CAcA,SAAS4kB,GAAU5kB,EAAMyoB,GAEvB,IAAIlrC,EAASkrC,EAGb,GAAIzoB,GAAQA,EAAKle,KAAM,CACrB,IAAMsmC,EAAQpoB,EAAKle,KAAKsmC,MAClBE,EAAYtoB,EAAKle,KAAKwmC,UACtBD,EAAcroB,EAAKle,KAAKumC,YAET,kBAAVD,IAGW,YAAhB7qC,EAAO5B,KACT4B,EAAOqP,QAAUw7B,EAOjB7qC,EAAS,CACP5B,KAAM,UACNiR,QAASw7B,EACT9D,WAAY,CAAC,EACbhuB,SAAU,KAeI,YAAhB/Y,EAAO5B,MAAsB0sC,IAC/B9qC,EAAO+mC,YAAa,kBAAI/mC,EAAO+mC,YAAe+D,IAI9C,aAAc9qC,GACdA,EAAO+Y,UACO,OAAdgyB,QACclqC,IAAdkqC,IAGA/qC,EAAO+Y,SAAWgyB,EAEtB,CAEA,OAAO/qC,CACT,CAeO,SAAS6sB,GAAIzP,EAAO1gB,EAAMojB,GAC/B,IAAM1hB,EAAO1B,GAAQA,EAAK0B,KAG1B,IAAKA,EACH,MAAM,IAAIf,MAAM,uBAAyBX,EAAO,KAGlD,OAAImiB,GAAI3lB,KAAKkkB,EAAM6qB,SAAU7pC,GACpBgf,EAAM6qB,SAAS7pC,GAAMgf,EAAO1gB,EAAMojB,GAGvC1C,EAAMqtB,aAAertB,EAAMqtB,YAAYlmB,SAASnmB,GAG3C,aAAc1B,GAAO,kBAAIA,GAAI,IAAEqc,SAAU+J,GAAI1F,EAAO1gB,KAASA,EAGlE0gB,EAAMotB,eACDptB,EAAMotB,eAAeptB,EAAO1gB,EAAMojB,GAiE7C,SAA+B1C,EAAO1gB,GACpC,IAAM6H,EAAO7H,EAAK6H,MAAQ,CAAC,EAErBvE,IACJ,UAAWtD,IACTmiB,GAAI3lB,KAAKqL,EAAM,gBAAkBsa,GAAI3lB,KAAKqL,EAAM,aAE9C,CACEnG,KAAM,UACNiR,QAAS,MACT03B,WAAY,CAAC,EACbhuB,SAAU+J,GAAI1F,EAAO1gB,IALvB,CAAC0B,KAAM,OAAQrE,MAAO2C,EAAK3C,OASjC,OADAqjB,EAAM+pB,MAAMzqC,EAAMsD,GACXod,EAAMiqB,UAAU3qC,EAAMsD,EAC/B,CA9ESmrC,CAAsB/tB,EAAO1gB,EACtC,CAaO,SAASomB,GAAI1F,EAAO0C,GAEzB,IAAM7X,EAAS,GAEf,GAAI,aAAc6X,EAGhB,IAFA,IAAME,EAAQF,EAAO/G,SACjB3Y,GAAS,IACJA,EAAQ4f,EAAMplB,QAAQ,CAC7B,IAAMoF,EAAS6sB,GAAIzP,EAAO4C,EAAM5f,GAAQ0f,GAGxC,GAAI9f,EAAQ,CACV,GAAII,GAAmC,UAA1B4f,EAAM5f,EAAQ,GAAGhC,OACvBnF,MAAMF,QAAQiH,IAA2B,SAAhBA,EAAO5B,OACnC4B,EAAOjG,MAAQiG,EAAOjG,MAAM+B,QAAQ,OAAQ,MAGzC7C,MAAMF,QAAQiH,IAA2B,YAAhBA,EAAO5B,MAAoB,CACvD,IAAMyV,EAAO7T,EAAO+Y,SAAS,GAEzBlF,GAAsB,SAAdA,EAAKzV,OACfyV,EAAK9Z,MAAQ8Z,EAAK9Z,MAAM+B,QAAQ,OAAQ,IAE5C,CAGE7C,MAAMF,QAAQiH,GAChBiI,EAAOxK,KAAI,MAAXwK,GAAM,OAASjI,IAEfiI,EAAOxK,KAAKuC,EAEhB,CACF,CAGF,OAAOiI,CACT,CA0CO,SAASoiB,GAAKrK,EAAO8oB,GAE1B,IAAM9oC,EAAS,GACXI,GAAS,EAMb,IAJI0oC,GACF9oC,EAAOvC,KAAK,CAACW,KAAM,OAAQrE,MAAO,SAG3BqG,EAAQ4f,EAAMplB,QACjBwF,GAAOJ,EAAOvC,KAAK,CAACW,KAAM,OAAQrE,MAAO,OAC7CiG,EAAOvC,KAAKuiB,EAAM5f,IAOpB,OAJI0oC,GAAS9oB,EAAMplB,OAAS,GAC1BoF,EAAOvC,KAAK,CAACW,KAAM,OAAQrE,MAAO,OAG7BiG,CACT,CEheO,SAASorC,GAAOrsB,EAAMplB,GAC3B,IAAMyjB,EAAQ8sB,GAAYnrB,EAAMplB,GAC1B+C,EAAO0gB,EAAMyP,IAAI9N,EAAM,MACvBssB,EClFD,SAAgBjuB,GAKrB,IAHA,IAAMkuB,EAAY,GACdlrC,GAAS,IAEJA,EAAQgd,EAAMwpB,cAAchsC,QAAQ,CAC3C,IAAM65B,EAAMrX,EAAMmrB,aAAanrB,EAAMwpB,cAAcxmC,IAEnD,GAAKq0B,EAAL,CAWA,IAPA,IAAMz3B,EAAUogB,EAAM0F,IAAI2R,GACpBlkB,EAAKtQ,OAAOw0B,EAAIiD,YAAYxT,cAC5ByiB,EAAST,GAAa31B,EAAGrB,eAC3Bq8B,EAAiB,EAEfC,EAAiB,KAEdD,GAAkBnuB,EAAMypB,eAAet2B,IAAK,CAEnD,IAAMk7B,EAAgB,CACpBrtC,KAAM,UACNiR,QAAS,IACT03B,WAAY,CACV9e,KACE,IACA7K,EAAM4pB,cACN,SACAL,GACC4E,EAAiB,EAAI,IAAMA,EAAiB,IAC/CG,qBAAqB,EACrBtD,UAAW,CAAC,yBACZuD,UAAWvuB,EAAMmtB,mBAEnBxxB,SAAU,CAAC,CAAC3a,KAAM,OAAQrE,MAAO,YAG/BwxC,EAAiB,GACnBE,EAAc1yB,SAAStb,KAAK,CAC1BW,KAAM,UACNiR,QAAS,MACT0J,SAAU,CAAC,CAAC3a,KAAM,OAAQrE,MAAOkG,OAAOsrC,OAIxCC,EAAe5wC,OAAS,GAC1B4wC,EAAe/tC,KAAK,CAACW,KAAM,OAAQrE,MAAO,MAG5CyxC,EAAe/tC,KAAKguC,EACtB,CAEA,IAAMla,EAAOv0B,EAAQA,EAAQpC,OAAS,GAEtC,GAAI22B,GAAsB,YAAdA,EAAKnzB,MAAuC,MAAjBmzB,EAAKliB,QAAiB,OACrDu8B,EAAWra,EAAKxY,SAASwY,EAAKxY,SAASne,OAAS,GAClDgxC,GAA8B,SAAlBA,EAASxtC,KACvBwtC,EAAS7xC,OAAS,IAElBw3B,EAAKxY,SAAStb,KAAK,CAACW,KAAM,OAAQrE,MAAO,OAG3C,EAAAw3B,EAAKxY,UAAStb,KAAI,QAAI+tC,EACxB,MACExuC,EAAQS,KAAI,MAAZT,EAAgBwuC,GAIlB,IAAM9K,EAAW,CACftiC,KAAM,UACNiR,QAAS,KACT03B,WAAY,CAACx2B,GAAI6M,EAAM4pB,cAAgB,MAAQL,GAC/C5tB,SAAUqE,EAAMiN,KAAKrtB,GAAS,IAGhCogB,EAAM+pB,MAAM1S,EAAKiM,GAEjB4K,EAAU7tC,KAAKijC,EApEf,CAqEF,CAEA,GAAyB,IAArB4K,EAAU1wC,OAId,MAAO,CACLwD,KAAM,UACNiR,QAAS,UACT03B,WAAY,CAAC8E,eAAe,EAAMzD,UAAW,CAAC,cAC9CrvB,SAAU,CACR,CACE3a,KAAM,UACNiR,QAAS+N,EAAMitB,qBACftD,YAAY,kBAEPpf,KAAK1J,MAAM0J,KAAKC,UAAUxK,EAAMktB,2BAAyB,IAC5D/5B,GAAI,mBAENwI,SAAU,CAAC,CAAC3a,KAAM,OAAQrE,MAAOqjB,EAAMgtB,iBAEzC,CAAChsC,KAAM,OAAQrE,MAAO,MACtB,CACEqE,KAAM,UACNiR,QAAS,KACT03B,WAAY,CAAC,EACbhuB,SAAUqE,EAAMiN,KAAKihB,GAAW,IAElC,CAACltC,KAAM,OAAQrE,MAAO,OAG5B,CD5Be+xC,CAAO1uB,GAUpB,OARIiuB,GAIF3uC,EAAKqc,SAAStb,KAAK,CAACW,KAAM,OAAQrE,MAAO,MAAOsxC,GAI3CpyC,MAAMF,QAAQ2D,GAAQ,CAAC0B,KAAM,OAAQ2a,SAAUrc,GAAQA,CAChE,CE3EA,IAUA,GAPI,SAAU+vB,EAAa9yB,GACrB,OAAO8yB,GAAe,QAASA,EAcrC,SAAgBA,EAAa9yB,GAC3B,OAAO,SAAC+C,EAAMopB,EAAMthB,GAClBioB,EAAY3C,IAAIshB,GAAO1uC,EAAM/C,GAAUmsB,GAAM,SAAC5oB,GAC5CsH,EAAKtH,EACP,GACF,CACF,CAnBU6uC,CAAOtf,EAAa9yB,GA2B9B,SAAgBA,GAEd,OAAO,SAAC+C,GAAI,OAAK0uC,GAAO1uC,EAAM/C,EAAQ,CACxC,CA7BUqyC,CAAOvf,GAAe9yB,EAC5B,iBCpCSsyC,IAAM,QAOjB,WAAYxtC,EAAUytC,EAAQtE,IAAO,eACnC/qC,KAAK4B,SAAWA,EAChB5B,KAAKqvC,OAASA,EACVtE,IACF/qC,KAAK+qC,MAAQA,EAEjB,ICPK,SAASuE,GAAMxB,EAAa/C,GAOjC,IALA,IAAMnpC,EAAW,CAAC,EAEZytC,EAAS,CAAC,EACZ9rC,GAAS,IAEJA,EAAQuqC,EAAY/vC,QAC3BrC,OAAOsV,OAAOpP,EAAUksC,EAAYvqC,GAAO3B,UAC3ClG,OAAOsV,OAAOq+B,EAAQvB,EAAYvqC,GAAO8rC,QAG3C,OAAO,IAAID,GAAOxtC,EAAUytC,EAAQtE,EACtC,CCrBO,SAASngB,GAAU1tB,GACxB,OAAOA,EAAMmV,aACf,CFiBA+8B,GAAOzzC,UAAUiG,SAAW,CAAC,EAE7BwtC,GAAOzzC,UAAU0zC,OAAS,CAAC,EAE3BD,GAAOzzC,UAAUovC,MAAQ,oBG3BZwE,IAAI,QAMf,WAAY3tC,EAAU4U,IAAW,eAE/BxW,KAAK4B,SAAWA,EAEhB5B,KAAKwW,UAAYA,CACnB,IAIF+4B,GAAK5zC,UAAUovC,MAAQ,KACvBwE,GAAK5zC,UAAU6zC,SAAU,EACzBD,GAAK5zC,UAAU8zC,YAAa,EAC5BF,GAAK5zC,UAAU+zC,mBAAoB,EACnCH,GAAK5zC,UAAUg0C,QAAS,EACxBJ,GAAK5zC,UAAUi0C,gBAAiB,EAChCL,GAAK5zC,UAAUk0C,gBAAiB,EAChCN,GAAK5zC,UAAUm0C,uBAAwB,EACvCP,GAAK5zC,UAAUo0C,iBAAkB,EACjCR,GAAK5zC,UAAUq/B,SAAU,ECxBzB,IAAIgV,GAAS,EAEAR,GAAUS,KACVR,GAAaQ,KACbP,GAAoBO,KACpBN,GAASM,KACTJ,GAAiBI,KACjBL,GAAiBK,KACjBH,GAAwBG,KAErC,SAASA,KACP,OAAO,KAAP,IAAO,IAAOD,GAChB,CCPA,IAAME,GAASx0C,OAAO6L,KAAKgB,GAEd4nC,GAAW,0CAQtB,WAAYvuC,EAAU4U,EAAW45B,EAAMrF,GAAO,sBAC5C,IAAIxnC,GAAS,EAMb,GAJA,cAAM3B,EAAU4U,GAEhB65B,IAAK,WAAM,QAAStF,GAEA,kBAATqF,EACT,OAAS7sC,EAAQ2sC,GAAOnyC,QAAQ,CAC9B,IAAMg0B,EAAQme,GAAO3sC,GACrB8sC,IAAK,WAAMH,GAAO3sC,IAAS6sC,EAAO7nC,EAAMwpB,MAAYxpB,EAAMwpB,GAC5D,CACD,QACH,CAAC,iBArBqB,CAASwd,IA+BjC,SAASc,GAAKjlC,EAAQ5O,EAAKU,GACrBA,IAEFkO,EAAO5O,GAAOU,EAElB,CAZAizC,GAAYx0C,UAAUq/B,SAAU,ECbhC,IAAMhZ,GAAM,CAAC,EAAEpmB,eAMR,SAAS6e,GAAOmgB,GAErB,IAIIn5B,EAJEG,EAAW,CAAC,EAEZytC,EAAS,CAAC,EAIhB,IAAK5tC,KAAQm5B,EAAWsP,WACtB,GAAIloB,GAAI3lB,KAAKu+B,EAAWsP,WAAYzoC,GAAO,CACzC,IAAMvE,EAAQ09B,EAAWsP,WAAWzoC,GAC9B40B,EAAO,IAAI8Z,GACf1uC,EACAm5B,EAAWnyB,UAAUmyB,EAAW7kB,YAAc,CAAC,EAAGtU,GAClDvE,EACA09B,EAAWmQ,OAIXnQ,EAAWmV,iBACXnV,EAAWmV,gBAAgBroB,SAASjmB,KAEpC40B,EAAK0Z,iBAAkB,GAGzBnuC,EAASH,GAAQ40B,EAEjBgZ,EAAOzkB,GAAUnpB,IAASA,EAC1B4tC,EAAOzkB,GAAUyL,EAAK7f,YAAc/U,CACtC,CAGF,OAAO,IAAI2tC,GAAOxtC,EAAUytC,EAAQzU,EAAWmQ,MACjD,CCvDO,IAAMuF,GAAQ71B,GAAO,CAC1BswB,MAAO,QACPtiC,UAAS,SAAC2uB,EAAG31B,GACX,MAAO,SAAWA,EAAKT,MAAM,GAAGqR,aAClC,EACA63B,WAAY,CACVqG,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,UAAW,QCZFC,GAAMr2B,GAAO,CACxBswB,MAAO,MACPtiC,UAAS,SAAC2uB,EAAG31B,GACX,MAAO,OAASA,EAAKT,MAAM,GAAGqR,aAChC,EACA63B,WAAY,CAAC6G,QAAS,KAAMC,QAAS,KAAMC,SAAU,QCFhD,SAASC,GAAuBn7B,EAAYS,GACjD,OAAOA,KAAaT,EAAaA,EAAWS,GAAaA,CAC3D,CCAO,SAAS26B,GAAyBp7B,EAAYnU,GACnD,OAAOsvC,GAAuBn7B,EAAYnU,EAASyQ,cACrD,CCNO,IAAM++B,GAAQ32B,GAAO,CAC1BswB,MAAO,QACPh1B,WAAY,CAACs7B,WAAY,eACzB5oC,UAAW0oC,GACXjH,WAAY,CAACkH,MAAO,KAAME,WAAY,QCJ3BC,GAAO92B,GAAO,CACzBhS,UAAS,SAAC2uB,EAAG31B,GACX,MAAgB,SAATA,EAAkBA,EAAO,QAAUA,EAAKT,MAAM,GAAGqR,aAC1D,EACA63B,WAAY,CACVsH,qBAAsB,KACtBC,WAAYhC,GACZiC,iBAAkB,KAClBC,SAAUlC,GACVmC,YAAanC,GACboC,aAAclC,GACdmC,aAAcnC,GACdoC,YAAapC,GACbqC,aAAcnC,GACdoC,YAAa,KACb5H,gBAAiBwF,GACjBqC,YAAa,KACbC,aAAc1C,GACd2C,eAAgBvC,GAChBwC,iBAAkB,KAClBC,aAAc7C,GACd8C,WAAY1C,GACZ2C,YAAa/C,GACbgD,aAAc,KACdC,WAAYjD,GACZkD,YAAa,KACbC,iBAAkB,KAClB9D,UAAW,KACX+D,eAAgBhD,GAChBiD,UAAWnD,GACXoD,SAAU,KACVC,UAAWvD,GACXwD,cAAexD,GACfyD,oBAAqBzD,GACrB0D,gBAAiB,KACjBC,SAAUvD,GACVwD,gBAAiB,KACjBC,aAAc3D,GACd4D,YAAa9D,GACb+D,aAAc/D,GACdgE,aAAc,KACdC,aAAcjE,GACdkE,oBAAqB9D,GACrB+D,aAAcjE,GACdkE,aAAclE,GACdmE,YAAanE,GACboE,aAActE,GACduE,YAAarE,GACbsE,SAAU,KACVC,aAAcvE,GACdwE,aAAcxE,GACdyE,aAAczE,GACd0E,cAAe,KACfC,KAAM,QC7CG7Q,GAAOhpB,GAAO,CACzBswB,MAAO,OACPh1B,WAAY,CACVw+B,cAAe,iBACfC,UAAW,QACXC,QAAS,MACTC,UAAW,cAEbjsC,UAAW0oC,GACXpB,gBAAiB,CAAC,UAAW,WAAY,QAAS,YAClD7F,WAAY,CAEVyK,KAAM,KACNC,OAAQhF,GACRiF,cAAehF,GACfiF,UAAWjF,GACXkF,OAAQ,KACRC,MAAO,KACPC,gBAAiBzF,GACjB0F,oBAAqB1F,GACrB2F,eAAgB3F,GAChBtf,IAAK,KACLklB,GAAI,KACJC,MAAO7F,GACP8F,eAAgB,KAChBC,aAAc1F,GACd2F,UAAWhG,GACXiG,SAAUjG,GACVkG,QAASlG,GACTmG,QAAS,KACT/M,QAAS4G,GACToG,KAAM,KACNrK,UAAWsE,GACXgG,KAAMlG,GACNmG,QAAS,KACT31C,QAAS,KACT41C,gBAAiBtG,GACjBuG,SAAUxG,GACVyG,aAAcpG,GACdqG,OAAQvG,GAASC,GACjBuG,YAAa,KACbzuC,KAAM,KACN0uC,SAAU,KACVC,SAAU,KACVC,QAAS9G,GACT3yB,MAAO2yB,GACP+G,IAAK,KACLC,QAAS,KACTrK,SAAUqD,GACViH,SAAU/G,GACVgH,UAAWjH,GACXkH,QAAS,KACTC,aAAc,KACdC,KAAM,KACNC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgBzH,GAChB0H,WAAY,KACZC,QAAStH,GACTuH,OAAQzH,GACR0H,OAAQ7H,GACR8H,KAAM3H,GACNvkB,KAAM,KACNmsB,SAAU,KACVC,QAAS3H,GACT4H,UAAW5H,GACXn8B,GAAI,KACJgkC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,GAAI,KACJC,MAAOvI,GACPwI,OAAQ,KACRC,SAAUpI,GACVqI,QAASrI,GACTsI,UAAW3I,GACX4I,SAAUvI,GACVnX,KAAM,KACN2B,MAAO,KACPgO,KAAM,KACNgQ,SAAU,KACV9yB,KAAM,KACN+yB,QAAS,KACTC,KAAM/I,GACNgJ,IAAK7I,GACL8I,SAAU,KACVv0B,IAAK,KACLw0B,UAAW/I,GACX1Q,MAAO,KACP0Z,OAAQ,KACRC,IAAK,KACLC,UAAWlJ,GACXmJ,SAAUtJ,GACVuJ,MAAOvJ,GACPzyC,KAAM,KACNi8C,MAAO,KACPC,SAAUzJ,GACV0J,WAAY1J,GACZ2J,QAAS,KACTC,aAAc,KACdC,WAAY,KACZC,cAAe,KACfC,cAAe,KACfC,eAAgB,KAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,cAAe,KACfC,cAAe,KACfC,kBAAmB,KACnBC,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,iBAAkB,KAClBC,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBC,UAAW,KACXC,YAAa,KACbC,UAAW,KACXC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdC,mBAAoB,KACpBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,YAAa,KACbC,0BAA2B,KAC3BC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVC,qBAAsB,KACtBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACTnlB,KAAMkW,GACNkP,QAAS/O,GACTgP,QAAS,KACTC,KAAM/O,GACNgP,YAAa,KACbC,YAAatP,GACbuP,OAAQ,KACRC,QAAS,KACTC,SAAUzP,GACV0P,eAAgB,KAChBC,IAAKtP,GACLuP,SAAU5P,GACV6P,SAAU7P,GACVnD,KAAMsD,GACN2P,QAAS3P,GACT4P,QAAS1P,GACT2P,MAAO,KACPC,OAAQjQ,GACRkQ,SAAUlQ,GACVmQ,SAAUnQ,GACVoQ,MAAO,KACP93C,KAAM6nC,GACNkQ,MAAO,KACPC,KAAM,KACNC,KAAMpQ,GACNqQ,WAAYvQ,GACZhyC,IAAK,KACLwiD,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRxgD,MAAOgwC,GACPyQ,KAAM,KACNlhD,MAAO,KACPmhD,SAAU1Q,GACV9yC,OAAQ,KACRqY,MAAO,KACPorC,UAAW,KACX/+C,KAAM,KACNg/C,cAAe/Q,GACfgR,OAAQ,KACRtjD,MAAOuyC,GACPgR,MAAO9Q,GACPniB,KAAM,KAINqf,MAAO,KACP6T,MAAO,KACPC,QAAS9Q,GACT+Q,KAAM,KACNC,WAAY,KACZC,QAAS,KACTC,OAAQpR,GACRqR,YAAa,KACbC,aAActR,GACduR,YAAa,KACbC,YAAa,KACbt/B,KAAM,KACNu/B,QAAS,KACTC,QAAS,KACTC,MAAO,KACPj1C,KAAM,KACNk1C,SAAU,KACVC,SAAU,KACVC,MAAO,KACPC,QAASlS,GACTmS,QAASnS,GACTrc,MAAO,KACPyuB,KAAM,KACNC,MAAO,KACPC,YAAa,KACbC,OAAQpS,GACRqS,WAAYrS,GACZ/1B,KAAM,KACNqoC,SAAU,KACVC,OAAQ,KACRC,aAAcxS,GACdyS,YAAazS,GACb0S,SAAU7S,GACV8S,OAAQ9S,GACR+S,QAAS/S,GACTgT,OAAQhT,GACRpqC,OAAQ,KACRq9C,QAAS,KACTC,OAAQ,KACRC,IAAK,KACLC,YAAajT,GACbzuC,MAAO,KACP2hD,OAAQ,KACRC,UAAWrT,GACXsT,QAAS,KACTC,QAAS,KACT9tB,KAAM,KACN+tB,UAAWtT,GACXuT,UAAW,KACXC,QAAS,KACTC,OAAQ,KACRC,MAAO,KACPC,OAAQ3T,GAGR4T,kBAAmB,KACnBC,YAAa,KACbC,SAAU,KACVC,wBAAyBlU,GACzBmU,sBAAuBnU,GACvBhrB,OAAQ,KACR5iB,SAAU,KACVoqC,QAAS2D,GACTiU,SAAU,KACVC,aAAc,QC1SLC,GAAMrpC,GAAO,CACxBswB,MAAO,MACPh1B,WAAY,CACVguC,aAAc,gBACdC,kBAAmB,qBACnBC,WAAY,cACZC,cAAe,iBACfC,UAAW,aACX5Y,UAAW,QACX6Y,SAAU,YACVC,SAAU,YACVC,mBAAoB,sBACpBC,0BAA2B,8BAC3BC,aAAc,gBACdC,eAAgB,kBAChBtO,YAAa,cACbuO,SAAU,WACVC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,YAAa,eACbC,SAAU,YACVC,WAAY,cACZC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,eAAgB,mBAChBC,YAAa,eACbC,UAAW,aACXC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,2BAA4B,+BAC5BC,yBAA0B,6BAC1BnO,SAAU,WACVoO,UAAW,cACXC,aAAc,iBACdC,aAAc,iBACdC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,UAAW,aACXC,UAAW,aACXC,YAAa,eACbC,QAAS,WACTC,YAAa,gBACbC,aAAc,iBACdC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,SAAU,YACVC,MAAO,SACPC,UAAW,cACXC,WAAY,eACZ1N,QAAS,UACT2N,WAAY,aACZ1N,aAAc,eACdG,cAAe,gBACfwN,QAAS,UACTrN,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBC,SAAU,WACVC,QAAS,UACTC,QAAS,UACTI,OAAQ,SACRC,YAAa,cACbC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,OAAQ,SACRC,iBAAkB,mBAClBC,UAAW,YACXgM,MAAO,QACP/L,QAAS,UACTC,QAAS,UACTC,QAAS,UACT8L,UAAW,YACXC,WAAY,aACZ7L,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTE,OAAQ,SACRC,aAAc,eACdC,iBAAkB,mBAClBE,YAAa,cACbC,UAAW,YACXE,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,UAAW,YACX0K,aAAc,eACdzK,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdgK,SAAU,WACV9J,QAAS,UACTC,SAAU,WACVC,SAAU,WACVG,SAAU,WACVC,UAAW,YACXC,SAAU,WACVwJ,OAAQ,SACRtJ,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVE,SAAU,WACVC,eAAgB,iBAChBC,UAAW,YACX8I,OAAQ,SACRC,iBAAkB,oBAClBC,kBAAmB,qBACnBC,WAAY,cACZC,QAAS,WACTC,cAAe,iBACfzI,eAAgB,iBAChB0I,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,aACXC,YAAa,eACbC,sBAAuB,yBACvBC,uBAAwB,0BACxBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,iBAAkB,oBAClBC,cAAe,iBACfC,YAAa,eACbnI,SAAU,WACVoI,WAAY,cACZC,eAAgB,kBAChBC,cAAe,iBACf3oC,OAAQ,SACR4oC,kBAAmB,qBACnBC,mBAAoB,sBACpBC,YAAa,eACbC,aAAc,gBACdC,WAAY,eACZC,YAAa,eACbC,SAAU,YACVC,aAAc,gBACdC,cAAe,iBACfC,aAAc,gBACdC,SAAU,aACVC,YAAa,gBACbC,YAAa,gBACbC,YAAa,eACbC,YAAa,eACbC,QAAS,WAETC,cAAe,gBACfC,cAAe,iBAEjBphD,UAAWyoC,GACXhH,WAAY,CACV4f,MAAOha,GACPiU,aAAcpU,GACdoa,WAAY,KACZC,SAAU,KACVhG,kBAAmB,KACnBiG,WAAYta,GACZua,UAAWva,GACXsU,WAAY,KACZkG,OAAQxa,GACRya,cAAe,KACfC,cAAe,KACfC,QAAS3a,GACT4a,UAAW,KACXrG,cAAe,KACfsG,cAAe,KACfC,YAAa,KACbC,KAAM,KACNC,MAAO,KACPC,KAAMjb,GACNkb,GAAI,KACJC,SAAU,KACV3G,UAAWxU,GACXpE,UAAWsE,GACXkb,KAAM,KACN3G,SAAU,KACV4G,cAAe,KACf3G,SAAU,KACV5C,MAAO,KACP6C,mBAAoB,KACpBC,0BAA2B,KAC3BC,aAAc,KACdC,eAAgB,KAChBtkD,QAAS,KACT8qD,kBAAmB,KACnBC,iBAAkB,KAClB/U,YAAa,KACbgV,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJ5tC,EAAG,KACHinC,SAAU,KACV4G,cAAe,KACfC,QAAS5b,GACT6b,gBAAiB7b,GACjB8b,UAAW,KACXC,QAAS,KACTC,IAAK,KACLC,QAASjc,GACTgV,iBAAkB,KAClBlO,SAAUjH,GACVqc,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAWtc,GACXiV,iBAAkB,KAClB3kD,IAAK,KACLkzB,MAAO,KACP+4B,SAAUvc,GACVwc,0BAA2B,KAC3BC,KAAM,KACNvH,YAAalV,GACbmV,SAAU,KACVz2C,OAAQ,KACRg+C,UAAW,KACXC,YAAa,KACbvH,WAAY,KACZC,aAAc,KACduH,UAAW,KACXC,eAAgB,KAChBvH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZ33C,OAAQ,KACR6+C,GAAI,KACJ7mC,KAAM,KACN8mC,GAAI,KACJC,GAAI,KACJC,GAAIhd,GACJid,GAAIjd,GACJ4V,UAAW5V,GACX6V,2BAA4B,KAC5BC,yBAA0B,KAC1BoH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACfxpC,QAAS,KACTypC,QAAStd,GACTud,kBAAmB,KACnBC,WAAY,KACZ/V,OAAQ,KACRhsB,KAAM,KACNmsB,SAAU,KACVoO,UAAWhW,GACXiW,aAAcjW,GACdkW,aAAclW,GACdj8B,GAAI,KACJ05C,YAAazd,GACbmW,eAAgB,KAChBuH,kBAAmB,KACnBC,GAAI,KACJC,IAAK,KACLC,UAAW7d,GACXljC,EAAGkjC,GACH8d,GAAI9d,GACJ+d,GAAI/d,GACJge,GAAIhe,GACJie,GAAIje,GACJke,aAAc/d,GACdge,iBAAkB,KAClBC,UAAW,KACXC,WAAY,KACZC,SAAU,KACVC,QAAS,KACT7lB,KAAM,KACN8lB,aAAc,KACdpI,cAAe,KACfC,cAAe,KACfoI,kBAAmBze,GACnB0e,MAAO,KACPpI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbmI,aAAc,KACdC,YAAa,KACbC,YAAa,KACbpe,KAAM,KACNqe,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACdzqC,IAAK,KACL+a,MAAO,KACP2vB,uBAAwB,KACxBC,sBAAuB,KACvBC,UAAWnf,GACXof,UAAW,KACXpW,OAAQ,KACRC,IAAK,KACLoW,KAAM,KACNjyD,KAAM,KACNqpD,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZoI,WAAY,KACZC,SAAU,KACV98B,OAAQ,KACR+mB,QAAS,KACT2N,WAAY,KACZ1N,aAAc,KACdG,cAAe,KACfwN,QAAS,KACTrN,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTI,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXgM,MAAO,KACP/L,QAAS,KACTC,QAAS,KACTC,QAAS,KACT8L,UAAW,KACXC,WAAY,KACZ7L,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTE,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBE,YAAa,KACbC,UAAW,KACXE,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACX0K,aAAc,KACdzK,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdgK,SAAU,KACV9J,QAAS,KACTC,SAAU,KACVC,SAAU,KACVG,SAAU,KACVC,UAAW,KACXC,SAAU,KACVwJ,OAAQ,KACRtJ,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVE,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACX8I,OAAQ,KACR6H,QAAS,KACTC,SAAU,KACVvjC,MAAO,KACPwjC,OAAQ,KACRC,YAAa,KACb1mC,OAAQ,KACR2mC,SAAU,KACVC,QAAS,KACTjI,iBAAkB5X,GAClB6X,kBAAmB7X,GACnB8X,WAAY,KACZC,QAAS,KACTp+B,KAAM,KACNmmC,WAAY9f,GACZ+f,oBAAqB,KACrBC,iBAAkB,KAClBC,aAAc,KACdC,MAAO,KACPjR,KAAM/O,GACNigB,MAAO,KACPlG,cAAe,KACfjC,cAAe,KACfoI,OAAQ,KACRC,UAAWrgB,GACXsgB,UAAWtgB,GACXugB,UAAWvgB,GACXwgB,cAAe,KACfC,oBAAqB,KACrBC,eAAgB,KAChBC,UAAW,KACX1uD,SAAUkuC,GACV5xB,EAAG,KACHqyC,OAAQ,KACRrR,eAAgB,KAChBsR,KAAM,KACNC,KAAM,KACNtR,IAAKrP,GACL6S,IAAK7S,GACL8X,gBAAiB,KACjB8I,YAAa,KACbC,UAAW,KACXC,mBAAoB9gB,GACpB+gB,iBAAkB/gB,GAClBghB,cAAehhB,GACfihB,gBAAiBjhB,GACjBlJ,SAAU,KACVoqB,QAAS,KACT7tD,OAAQ,KACR8tD,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJC,MAAO,KACPC,KAAM,KACNxJ,eAAgB,KAChByJ,KAAM,KACNC,MAAO,KACPC,aAAc,KACdC,iBAAkB9hB,GAClB+hB,iBAAkB/hB,GAClBgiB,aAAc,KACdC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,MAAO,KACPC,YAAa,KACbnK,UAAW,KACXC,YAAa,KACbC,sBAAuBrY,GACvBsY,uBAAwBtY,GACxBnsC,OAAQ,KACR0uD,OAAQ,KACRhK,gBAAiBpY,GACjBqY,iBAAkB,KAClBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB3Y,GAClB4Y,cAAe5Y,GACf6Y,YAAa,KACbtpD,MAAO,KACPizD,aAAcxiB,GACdyiB,aAAc,KACdC,oBAAqB,KACrBC,WAAY,KACZC,cAAe,KACfC,qBAAsB,KACtBC,eAAgB3iB,GAChBuQ,SAAU1Q,GACV+iB,YAAa,KACb71D,OAAQ,KACR81D,QAAShjB,GACTijB,QAASjjB,GACT8Y,WAAY,KACZC,eAAgB,KAChBC,cAAe,KACfkK,WAAY,KACZhJ,cAAe,KACf30C,MAAO,KACP49C,kBAAmB,KACnBvxD,KAAM,KACNye,OAAQ8vB,GACRzB,GAAI,KACJ5lC,UAAW,KACXsqD,GAAI,KACJC,GAAI,KACJpK,kBAAmBjZ,GACnBkZ,mBAAoBlZ,GACpBsjB,QAAS,KACTnK,YAAa,KACbC,aAAc,KACdC,WAAYrZ,GACZvkC,OAAQ,KACR69C,YAAatZ,GACbyZ,cAAezZ,GACf0Z,aAAc,KACdH,SAAUvZ,GACVwZ,aAAcxZ,GACdwT,QAAS,KACTmG,SAAU3Z,GACV4Z,YAAa5Z,GACb6Z,YAAa7Z,GACbujB,QAAS,KACTC,WAAY,KACZC,WAAY,KACZ3S,MAAO,KACP4S,OAAQ,KACR5J,YAAa,KACbC,YAAa,KACb4J,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClB9J,QAASha,GACT+jB,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBC,EAAG,KACHC,WAAY,QCliBHtwB,GAAO6L,GAAM,CAACwB,GAAKR,GAAOc,GAAOG,GAAMyiB,IAAW,QAClDlQ,GAAMxU,GAAM,CAACwB,GAAKR,GAAOc,GAAOG,GAAM0iB,IAAU,OCM9C,SAASC,GAAap3D,GACnC,GAAIA,EAAQq3D,iBAAmBr3D,EAAQs3D,mBACrC,MAAM,IAAIj1D,UACR,4EAIJ,GACErC,EAAQq3D,iBACRr3D,EAAQs3D,oBACRt3D,EAAQu3D,aAER,OAAO,SAACnyC,GACNsnB,GAAMtnB,EAAM,WAAW,SAACriB,EAAM0D,EAAO+wD,GACnC,IAEI9uC,EAFEvC,EAAsCqxC,EAc5C,GAVIx3D,EAAQq3D,gBACV3uC,GAAU1oB,EAAQq3D,gBAAgBzsC,SAAS7nB,EAAK2S,SACvC1V,EAAQs3D,qBACjB5uC,EAAS1oB,EAAQs3D,mBAAmB1sC,SAAS7nB,EAAK2S,WAG/CgT,GAAU1oB,EAAQu3D,cAAiC,kBAAV9wD,IAC5CiiB,GAAU1oB,EAAQu3D,aAAax0D,EAAM0D,EAAO0f,IAG1CuC,GAA2B,kBAAVjiB,EAAoB,CACQ,MAA/C,GAAIzG,EAAQy3D,kBAAoB10D,EAAKqc,UACnC,EAAA+G,EAAO/G,UAASvF,OAAM,SAACpT,EAAO,GAAC,eAAK1D,EAAKqc,iBAEzC+G,EAAO/G,SAASvF,OAAOpT,EAAO,GAGhC,OAAOA,CACT,CAGF,GACF,CAEJ,gBCrDO,SAASxD,GAAWy0D,GAEzB,IAAMt3D,EAEJs3D,GAA0B,kBAAVA,GAAqC,SAAfA,EAAMjzD,KAExCizD,EAAMt3D,OAAS,GACfs3D,EAIN,MAAwB,kBAAVt3D,GAA4D,KAAtCA,EAAM+B,QAAQ,eAAgB,GACpE,CChBA,IAAMw1D,GAAQ,kBACRC,GAAO,UACPC,GAAM,SA+CZ,SAASC,GAAM5tC,GACb,MAAO,IAAMA,EAAG3U,aAClB,CAMA,SAASwiD,GAAU7tC,GACjB,OAAOA,EAAG1lB,OAAO,GAAG+lB,aACtB,CC1DO,IAAMytC,GAAc,CACzBzT,QAAS,UACTqD,SAAU,WACV1M,OAAQ,SACRkQ,gBAAiB,kBACjBC,iBAAkB,mBAClBC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBtoC,OAAQ,SACRuwB,aAAc,eACdC,aAAc,eACdC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,UAAW,YACXS,WAAY,kBCxBd,WCFMyjB,GAAY,CAAC,OAAQ,QAAS,SAAU,OAMvC,SAASC,GAAeC,GAC7B,IAAM7rC,GAAO6rC,GAAO,IAAIl2D,OAClBm2D,EAAQ9rC,EAAI9nB,OAAO,GAEzB,GAAc,MAAV4zD,GAA2B,MAAVA,EACnB,OAAO9rC,EAGT,IAAM+rC,EAAQ/rC,EAAIvd,QAAQ,KAC1B,IAAe,IAAXspD,EACF,OAAO/rC,EAKT,IAFA,IAAI7lB,GAAS,IAEJA,EAAQwxD,GAAUh3D,QAAQ,CACjC,IAAMwtB,EAAWwpC,GAAUxxD,GAE3B,GACE4xD,IAAU5pC,EAASxtB,QACnBqrB,EAAIpoB,MAAM,EAAGuqB,EAASxtB,QAAQsU,gBAAkBkZ,EAEhD,OAAOnC,CAEX,CAGA,OAAe,KADf7lB,EAAQ6lB,EAAIvd,QAAQ,OACAspD,EAAQ5xD,IAKb,KADfA,EAAQ6lB,EAAIvd,QAAQ,OACAspD,EAAQ5xD,EAJnB6lB,EASF,oBACT,CCmEA,IAAMpH,GAAM,CAAC,EAAEpmB,eAITw5D,GAAgB,IAAI9yD,IAAI,CAAC,QAAS,QAAS,QAAS,QAAS,OAM5D,SAAS+yD,GAAgB7tC,EAAS3nB,GAOvC,IALA,IAGIob,EAHEiB,EAAW,GACbo5C,GAAc,IAITA,EAAaz1D,EAAKqc,SAASne,QAGf,aAFnBkd,EAAQpb,EAAKqc,SAASo5C,IAEZ/zD,KACR2a,EAAStb,KAAK20D,GAAQ/tC,EAASvM,EAAOq6C,EAAYz1D,IAC1B,SAAfob,EAAM1Z,KASC,YAAd1B,EAAK0B,MACJ6zD,GAAc/sC,IAAIxoB,EAAK2S,UACvBzS,GAAWkb,IAEZiB,EAAStb,KAAKqa,EAAM/d,OAEE,QAAf+d,EAAM1Z,MAAmBimB,EAAQ1qB,QAAQ04D,UAElDt5C,EAAStb,KAAKqa,EAAM/d,OAIxB,OAAOgf,CACT,CAQA,SAASq5C,GAAQ/tC,EAAS3nB,EAAM0D,EAAO0f,GACrC,IAaIrhB,EAbE9E,EAAU0qB,EAAQ1qB,QAClB2L,OACyBzE,IAA7BlH,EAAQ24D,iBACJT,GACAl4D,EAAQ24D,iBACRC,EAAeluC,EAAQpF,OAGvBrlB,EAAO8C,EAAK2S,QAEZ03B,EAAa,CAAC,EAChB9nB,EAASszC,EASb,GAL2B,SAAvBA,EAAa3qB,OAA6B,QAAThuC,IACnCqlB,EAAS0hC,GACTt8B,EAAQpF,OAASA,GAGfviB,EAAKqqC,WACP,IAAKtoC,KAAY/B,EAAKqqC,WAChBloB,GAAI3lB,KAAKwD,EAAKqqC,WAAYtoC,IAC5B+zD,GAAYzrB,EAAYtoC,EAAU/B,EAAKqqC,WAAWtoC,GAAW4lB,GAKtD,OAATzqB,GAA0B,OAATA,GACnByqB,EAAQouC,YAGV,IAAM15C,EAAWm5C,GAAgB7tC,EAAS3nB,GAE7B,OAAT9C,GAA0B,OAATA,GACnByqB,EAAQouC,YAIVpuC,EAAQpF,OAASszC,EAIjB,IA4OuBr0D,EA5OjB3B,EAAWG,EAAKH,UAAY,CAChCC,MAAO,CAACC,KAAM,KAAMP,OAAQ,KAAM+yB,OAAQ,MAC1CnyB,IAAK,CAACL,KAAM,KAAMP,OAAQ,KAAM+yB,OAAQ,OAEpCyjC,EACJ/4D,EAAQg5D,YAAc9zC,GAAI3lB,KAAKS,EAAQg5D,WAAY/4D,GAC/CD,EAAQg5D,WAAW/4D,GACnBA,EACAg5D,EAA6B,kBAAdF,GAA0BA,IAAcp9C,EAAAA,SAE7D,IAAKu9C,GAAAA,mBAA2BH,GAC9B,MAAM,IAAI12D,UAAU,uBAAD,OACOpC,EAAI,uCA2DhC,GAvDAmtC,EAAW1tC,IAAM,CACfO,EACA2C,EAASC,MAAMC,KACfF,EAASC,MAAMN,OACfkE,GACAqG,KAAK,KAEM,MAAT7M,GAAgBD,EAAQm5D,aAC1B/rB,EAAWrtC,OACqB,oBAAvBC,EAAQm5D,WACXn5D,EAAQm5D,WACN7yD,OAAO8mC,EAAW9e,MAAQ,IAC1BvrB,EAAKqc,SACuB,kBAArBguB,EAAWh1B,MAAqBg1B,EAAWh1B,MAAQ,MAE5DpY,EAAQm5D,YAGH,MAATl5D,GAAgB0L,IAClByhC,EAAW9e,KAAO3iB,EAChBrF,OAAO8mC,EAAW9e,MAAQ,IAC1BvrB,EAAKqc,SACuB,kBAArBguB,EAAWh1B,MAAqBg1B,EAAWh1B,MAAQ,OAK3D6gD,GACQ,SAATh5D,GACgB,YAAhBkmB,EAAO1hB,MACY,QAAnB0hB,EAAOzQ,UAEP03B,EAAWgsB,QAAS,GAInBH,GACS,OAATh5D,GACU,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,IAEFmtC,EAAWisB,MAAQ/xC,OAAOwC,SAAS7pB,EAAKuE,OAAO,GAAI,KAGxC,QAATvE,GAAkBD,EAAQs5D,oBAC5BlsB,EAAWzsC,IAAMX,EAAQs5D,kBACvBhzD,OAAO8mC,EAAWzsC,KAAO,IACzB2F,OAAO8mC,EAAWha,KAAO,IACG,kBAArBga,EAAWh1B,MAAqBg1B,EAAWh1B,MAAQ,QAIzD6gD,GAAkB,OAATh5D,GAAiC,YAAhBkmB,EAAO1hB,KAAoB,CACxD,IAAM+hB,EA0DV,SAAyBzjB,GACvB,IAAI0D,GAAS,EAEb,OAASA,EAAQ1D,EAAKqc,SAASne,QAAQ,CACrC,IAAMkd,EAAQpb,EAAKqc,SAAS3Y,GAE5B,GAAmB,YAAf0X,EAAM1Z,MAAwC,UAAlB0Z,EAAMzI,QACpC,OAAOyI,CAEX,CAEA,OAAO,IACT,CAtEkBo7C,CAAgBx2D,GAC9BqqC,EAAWtB,QACTtlB,GAASA,EAAM4mB,WAAapa,QAAQxM,EAAM4mB,WAAWtB,SAAW,KAClEsB,EAAW3mC,MAAQ+yD,GAAuBrzC,EAAQpjB,GAClDqqC,EAAWxB,QAA6B,OAAnBzlB,EAAOzQ,OAC9B,CA4CA,OA1CKujD,GAAmB,OAATh5D,GAA0B,OAATA,IAC9BmtC,EAAWxB,QAAmB,OAAT3rC,EACrBmtC,EAAW5B,MAAQ9gB,EAAQouC,WAGhB,OAAT74D,GAA0B,OAATA,IACfmtC,EAAW2C,QACR3C,EAAWhrC,QAAOgrC,EAAWhrC,MAAQ,CAAC,GAE3CgrC,EAAWhrC,MAAMq3D,UAAYrsB,EAAW2C,aACjC3C,EAAW2C,OAGfkpB,IACH7rB,EAAWssB,SAAoB,OAATz5D,IAIrBg5D,GAAkB,OAATh5D,GAAiC,YAAhBkmB,EAAO1hB,OACpC2oC,EAAWssB,SAAW1mC,QAA2B,UAAnB7M,EAAOzQ,UAInC1V,EAAQ25D,YACVvsB,EAAW,kBAsIN,EADgB7oC,EArI0B3B,GAuI3CC,MAAMC,KACV,IACAyB,EAAI1B,MAAMN,OACV,IACAgC,EAAIpB,IAAIL,KACR,IACAyB,EAAIpB,IAAIZ,QAEPwI,IAAIzE,QACJwG,KAAK,MA7IHmsD,GAASj5D,EAAQ45D,eACpBxsB,EAAWysB,eAAiB92D,EAAKH,WAI9Bq2D,GAASj5D,EAAQ85D,sBACpB1sB,EAAW3mC,MAAQ+yD,GAAuBrzC,EAAQpjB,GAClDqqC,EAAW2sB,aAAeP,GAAuBrzC,IAG9C8yC,IACH7rB,EAAWrqC,KAAOA,GAIbqc,EAASne,OAAS,EACrB0a,EAAAA,cAAoBo9C,EAAW3rB,EAAYhuB,GAC3CzD,EAAAA,cAAoBo9C,EAAW3rB,EACrC,CAyBA,SAASosB,GAAuBrzC,EAAQpjB,GAItC,IAHA,IAAI0D,GAAS,EACTuzD,EAAQ,IAEHvzD,EAAQ0f,EAAO/G,SAASne,QAC3BklB,EAAO/G,SAAS3Y,KAAW1D,GACK,YAAhCojB,EAAO/G,SAAS3Y,GAAOhC,MAAoBu1D,IAGjD,OAAOA,CACT,CAQA,SAASnB,GAAYnwD,EAAO/D,EAAMvE,EAAOixC,GACvC,IAAM9X,EJtWD,SAAcjU,EAAQllB,GAC3B,IAAMmyC,EAASzkB,GAAU1tB,GACrBuE,EAAOvE,EACP65D,EAAOxnB,GAEX,GAAIF,KAAUjtB,EAAOitB,OACnB,OAAOjtB,EAAOxgB,SAASwgB,EAAOitB,OAAOA,IAGvC,GAAIA,EAAOtxC,OAAS,GAA4B,SAAvBsxC,EAAOruC,MAAM,EAAG,IAAiByzD,GAAM1vD,KAAK7H,GAAQ,CAE3E,GAAwB,MAApBA,EAAMoE,OAAO,GAAY,CAE3B,IAAM01D,EAAO95D,EAAM8D,MAAM,GAAG/B,QAAQy1D,GAAMG,IAC1CpzD,EAAO,OAASu1D,EAAK11D,OAAO,GAAG+lB,cAAgB2vC,EAAKh2D,MAAM,EAC5D,KAAO,CAEL,IAAMg2D,EAAO95D,EAAM8D,MAAM,GAEzB,IAAK0zD,GAAK3vD,KAAKiyD,GAAO,CACpB,IAAIC,EAASD,EAAK/3D,QAAQ01D,GAAKC,IAEN,MAArBqC,EAAO31D,OAAO,KAChB21D,EAAS,IAAMA,GAGjB/5D,EAAQ,OAAS+5D,CACnB,CACF,CAEAF,EAAO5mB,EACT,CAEA,OAAO,IAAI4mB,EAAKt1D,EAAMvE,EACxB,CIoUe4P,CAAKqhC,EAAI/rB,OAAQ3gB,GAC1B0B,EAASjG,EAIE,OAAXiG,QAA8Ba,IAAXb,GAAwBA,IAAWA,IAMtD/G,MAAMF,QAAQiH,KAChBA,EAASkzB,EAAKuZ,eCvUX,SAAmBxkC,EAAQtO,GAChC,IAAMqlB,EAAWrlB,GAAW,CAAC,EAK7B,OAF4C,KAA9BsO,EAAOA,EAAOrN,OAAS,GAAY,GAAH,eAAOqN,GAAM,CAAE,KAAMA,GAGhExB,MACEuY,EAAS+0C,SAAW,IAAM,IACzB,MACsB,IAArB/0C,EAASg1C,QAAoB,GAAK,MAEtCp4D,MACL,CD0TmCq4D,CAAOj0D,GAAiBA,EE7W3CyG,KAAK,KAAK7K,QFgXF,UAAlBs3B,EAAKz0B,UAA0C,kBAAXuB,IACtCA,EAkBJ,SAAoBjG,GAElB,IAAMiG,EAAS,CAAC,EAEhB,IACEjE,GAAMhC,EAAOuK,EAEb,CADA,SACA,CAGF,OAAOtE,EAMP,SAASsE,EAAS1K,EAAMihB,GACtB,IAAMvR,EAAyB,SAArB1P,EAAKiE,MAAM,EAAG,GAAgB,MAAH,OAASjE,EAAKiE,MAAM,IAAOjE,EAChEoG,EAAOsJ,EAAExN,QAAQ,YAAao4D,KAAkBr5C,CAClD,CACF,CAtCas5C,CAAWn0D,IAGlBkzB,EAAK0U,OAAS1U,EAAKz0B,SACrB4D,EACEwc,GAAI3lB,KAAKy4D,GAAaz+B,EAAKz0B,UACvBkzD,GAAYz+B,EAAKz0B,UACjBy0B,EAAKz0B,UACPuB,EACKkzB,EAAK7f,YACdhR,EAAM6wB,EAAK7f,WAAarT,GAE5B,CAgCA,SAASk0D,GAAcjgC,EAAGnQ,GACxB,OAAOA,EAAGI,aACZ,CGjZA,IAAMrF,GAAM,CAAC,EAAEpmB,eACT27D,GACJ,oEAGIC,GAAa,CACjB5oC,QAAS,CAACyf,GAAI,gBAAiB36B,GAAI,mCACnC+jD,UAAW,CAACppB,GAAI,aAAc36B,GAAI,kCAClCgkD,WAAY,CAAChkD,GAAI,wCACjB45B,mBAAoB,CAAC55B,GAAI,wCACzBikD,WAAY,CAACjkD,GAAI,wCACjBxT,OAAQ,CAACmuC,GAAI,WAAY36B,GAAI,6BAC7BkkD,UAAW,CACTvpB,GAAI,eACJ36B,GAAI,sDAENmkD,aAAc,CACZxpB,GAAI,kBACJ36B,GAAI,sDAENokD,gBAAiB,CACfzpB,GAAI,qBACJ36B,GAAI,sDAENqkD,iBAAkB,CAChB1pB,GAAI,sBACJ36B,GAAI,mDAUD,SAASskD,GAAcl7D,GAC5B,IAAK,IAAMN,KAAOg7D,GAChB,GAAIx1C,GAAI3lB,KAAKm7D,GAAYh7D,IAAQwlB,GAAI3lB,KAAKS,EAASN,GAAM,CACvD,IAAMy7D,EAAcT,GAAWh7D,GAC/B4X,QAAQ1B,KAAK,oCAAD,OAERulD,EAAY5pB,GAAK,QAAH,OAAY4pB,EAAY5pB,GAAE,gBAAkB,SAAQ,aAC9D7xC,EAAG,mBAAY+6D,GAAS,YAAIU,EAAYvkD,GAAE,4BAE3C8jD,GAAWh7D,EACpB,CAGF,IAAMyxB,EAAYN,IACfF,IAAIyqC,IACJzqC,IAAI3wB,EAAQq7D,eAAiB,IAC7B1qC,IAAI2qC,IAAc,kBACdt7D,EAAQu7D,qBAAmB,IAC9B/qB,oBAAoB,KAErB7f,IAAI3wB,EAAQw7D,eAAiB,IAC7B7qC,IAAIymC,GAAcp3D,GAEfmsB,EAAO,IAAI6C,EAEe,kBAArBhvB,EAAQof,SACjB+M,EAAK/rB,MAAQJ,EAAQof,cACSlY,IAArBlH,EAAQof,UAA+C,OAArBpf,EAAQof,UACnD9H,QAAQ1B,KAAK,uEAAD,OACgE5V,EAAQof,SAAQ,OAI9F,IAAMq8C,EAAWtqC,EAAUuB,QAAQvB,EAAU7M,MAAM6H,GAAOA,GAE1D,GAAsB,SAAlBsvC,EAASh3D,KACX,MAAM,IAAIpC,UAAU,0BAItB,IAAIgE,EAASsV,EAAAA,cACXA,EAAAA,SACA,CAAC,EACD48C,GAAgB,CAACv4D,QAAAA,EAASslB,OAAQqhB,GAAMmyB,UAAW,GAAI2C,IAOzD,OAJIz7D,EAAQyuC,YACVpoC,EAASsV,EAAAA,cAAoB,MAAO,CAAC8yB,UAAWzuC,EAAQyuC,WAAYpoC,IAG/DA,CACT,CAEA60D,GAAct7C,UAAY,CAExBR,SAAUS,GAAAA,OAEV4uB,UAAW5uB,GAAAA,OAEX03C,aAAc13C,GAAAA,KACdw3C,gBAAiBx3C,GAAAA,QAAkBA,GAAAA,QACnCy3C,mBAAoBz3C,GAAAA,QAAkBA,GAAAA,QACtC43C,iBAAkB53C,GAAAA,KAElBw7C,cAAex7C,GAAAA,QACbA,GAAAA,UAAoB,CAClBA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QACEA,GAAAA,UAAoB,CAClBA,GAAAA,KACAA,GAAAA,OACAA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QAGEA,GAAAA,WAMV27C,cAAe37C,GAAAA,QACbA,GAAAA,UAAoB,CAClBA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QACEA,GAAAA,UAAoB,CAClBA,GAAAA,KACAA,GAAAA,OACAA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QAGEA,GAAAA,WAOV85C,UAAW95C,GAAAA,KACX+5C,aAAc/5C,GAAAA,KACd64C,SAAU74C,GAAAA,KACVi6C,oBAAqBj6C,GAAAA,KACrB84C,iBAAkB94C,GAAAA,UAAoB,CAACA,GAAAA,KAAgBA,GAAAA,OACvDs5C,WAAYt5C,GAAAA,UAAoB,CAACA,GAAAA,KAAgBA,GAAAA,SACjDy5C,kBAAmBz5C,GAAAA,KACnBm5C,WAAYn5C,GAAAA,uFClKD67C,EAAW,CACtB,CACEz7D,KAAM,QACN4P,MAAO,eACPmK,KAAM,CAAC,MAAO,WACd2hD,YAAa,aACbC,UAAW,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,SAElE,CACE37D,KAAM,QACN4P,MAAO,eACPmK,KAAM,CAAC,SACP2hD,YAAa,iCACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACE37D,KAAM,eACN4P,MAAO,eACPmK,KAAM,GACN2hD,YAAa,eACbC,UAAW,CAAC,OAAQ,QAEtB,CACE37D,KAAM,WACN4P,MAAO,eACPmK,KAAM,GACN2hD,YAAa,gBACbC,UAAW,CAAC,KAAM,MAAO,MAAO,OAAQ,KAAM,MAAO,MAAO,SAE9D,CACE37D,KAAM,MACN4P,MAAO,eACPmK,KAAM,CAAC,MAAO,QACd2hD,YAAa,cACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACE37D,KAAM,WACN4P,MAAO,eACPmK,KAAM,GACN2hD,YAAa,gCACbC,UAAW,CAAC,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,MAAO,QAE3D,CACE37D,KAAM,QACN4P,MAAO,eACPmK,KAAM,CAAC,QACP2hD,YAAa,YACbC,UAAW,CAAC,OAEd,CACE37D,KAAM,MACN4P,MAAO,eACPmK,KAAM,CAAC,QAAS,QAAS,OAAQ,SACjC2hD,YAAa,wBACbC,UAAW,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,SAElE,CACE37D,KAAM,WACN4P,MAAO,eACPmK,KAAM,CAAC,SACP2hD,YAAa,yBACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACE37D,KAAM,MACN4P,MAAO,eACPmK,KAAM,CAAC,SACP2hD,YAAa,yBACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACE37D,KAAM,UACN4P,MAAO,eACPmK,KAAM,GACN2hD,YAAa,eACbC,UAAW,CAAC,KAAM,MAAO,KAAM,QAEjC,CACE37D,KAAM,WACN4P,MAAO,eACPmK,KAAM,CAAC,QAAS,QAChB2hD,YAAa,0BACbC,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,QAGJ,CACE37D,KAAM,MACN4P,MAAO,eACPmK,KAAM,CAAC,WAAY,SAAU,OAC7B2hD,YAAa,MACbC,UAAW,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,QAExE,CACE37D,KAAM,eACN4P,MAAO,eACPmK,KAAM,CAAC,OACP2hD,YAAa,eACbC,UAAW,CAAC,KAAM,MAAO,KAAM,QAEjC,CACE37D,KAAM,WACN4P,MAAO,eACPmK,KAAM,CAAC,OAAQ,WACf2hD,YAAa,qBACbC,UAAW,CAAC,OAEd,CACE37D,KAAM,aACN4P,MAAO,eACPmK,KAAM,CAAC,WAAY,YAAa,OAChC2hD,YAAa,uBACbC,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MACA,QAGJ,CACE37D,KAAM,OACN4P,MAAO,eACPmK,KAAM,CAAC,SACP2hD,YAAa,eACbC,UAAW,CAAC,KAAM,MAAO,KAAM,QAEjC,CACE37D,KAAM,QACN4P,MAAO,eACPmK,KAAM,CAAC,QAAS,MAAO,QAAS,WAChC2hD,YAAa,kCACbC,UAAW,CAAC,KAAM,MAAO,KAAM,QAEjC,CACE37D,KAAM,SACN4P,MAAO,eACPmK,KAAM,CAAC,QAAS,MAAO,QACvB2hD,YAAa,8BACbC,UAAW,CAAC,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,MAAO,QAE3D,CACE37D,KAAM,cACN4P,MAAO,eACPmK,KAAM,CAAC,QAAS,OAAQ,SACxB2hD,YAAa,0BACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACE37D,KAAM,MACN4P,MAAO,eACPmK,KAAM,CAAC,MAAO,MAAO,WACrB2hD,YAAa,qBACbC,UAAW,CACT,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,UAGJ,CACE37D,KAAM,mBACN4P,MAAO,eACPmK,KAAM,GACN2hD,YAAa,mBACbC,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MACA,QAGJ,CACE37D,KAAM,+BACN4P,MAAO,eACPmK,KAAM,CAAC,SACP2hD,YAAa,6BACbC,UAAW,CAAC,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,QAEnE,CACE37D,KAAM,+BACN4P,MAAO,eACPmK,KAAM,CAAC,QAAS,SAChB2hD,YAAa,2BACbC,UAAW,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,QAE9C,CACE37D,KAAM,aACN4P,MAAO,eACPmK,KAAM,CAAC,QACP2hD,YAAa,+BACbC,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,QAGJ,CACE37D,KAAM,QACN4P,MAAO,eACPmK,KAAM,GACN2hD,YAAa,2BACbC,UAAW,CACT,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,SAGJ,CACE37D,KAAM,cACN4P,MAAO,eACPmK,KAAM,CAAC,OACP2hD,YAAa,2BACbC,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,SAGJ,CACE37D,KAAM,WACN4P,MAAO,eACPmK,KAAM,CAAC,OACP2hD,YAAa,gBACbC,UAAW,CACT,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,QAGJ,CACE37D,KAAM,OACN4P,MAAO,eACPmK,KAAM,CAAC,SACP2hD,YAAa,eACbC,UAAW,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,mBC7c1CC,EAAW,uBACXC,EAAW,kDACXC,EAAgB,KAChBC,EAAW,gBAEXC,EAAmB,CACrBC,eAAe,EACfR,UAAU,EACVS,YAAY,GAGD,SAAStqC,EAAO7xB,GAC3B,IAAMqlB,EAAWzmB,OAAOsV,OAAO,CAAC,EAAG+nD,EAAkBj8D,GAC/Co8D,IAAQ/2C,EAAS62C,cACjBG,IAAmBh3C,EAASq2C,SAC5BS,IAAe92C,EAAS82C,WAE9B,SAAS1nB,EAAKrc,EAAMmF,GAGhB,MAAO,CACH94B,KAAM,OACNsY,KAAM,KACN3c,MAAOg4B,EACPxtB,KAAM,CACFsmC,MAAO,OACPC,YAAa,CACTqG,KAAM,MACNxF,UAAWzU,GAEf6T,UAAW,CAAC,CAAE3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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_baseValues.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hasUnicode.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_iteratorToArray.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_root.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_unicodeToArray.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isString.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/keys.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/toArray.js","../node_modules/lodash/values.js","../node_modules/node-emoji/index.js","../node_modules/node-emoji/lib/emoji.js","../node_modules/react-helmet/es/Helmet.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/react-side-effect/lib/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/emoticon/index.js","../node_modules/remark-emoji/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/ccount/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nmodule.exports = iteratorToArray;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var Symbol = require('./_Symbol'),\n    copyArray = require('./_copyArray'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    iteratorToArray = require('./_iteratorToArray'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray'),\n    stringToArray = require('./_stringToArray'),\n    values = require('./values');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nmodule.exports = toArray;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","module.exports = require('./lib/emoji');","/*jslint node: true*/\nvar toArray = require('lodash/toArray');\nvar emojiByName = require('./emoji.json');\n\n\"use strict\";\n\n/**\n * regex to parse emoji in a string - finds emoji, e.g. :coffee:\n */\nvar emojiNameRegex = /:([a-zA-Z0-9_\\-\\+]+):/g;\n\n/**\n * regex to trim whitespace\n * use instead of String.prototype.trim() for IE8 support\n */\nvar trimSpaceRegex = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n/**\n * Removes colons on either side\n * of the string if present\n * @param  {string} str\n * @return {string}\n */\nfunction stripColons (str) {\n  var colonIndex = str.indexOf(':');\n  if (colonIndex > -1) {\n    // :emoji: (http://www.emoji-cheat-sheet.com/)\n    if (colonIndex === str.length - 1) {\n      str = str.substring(0, colonIndex);\n      return stripColons(str);\n    } else {\n      str = str.substr(colonIndex + 1);\n      return stripColons(str);\n    }\n  }\n\n  return str;\n}\n\n/**\n * Adds colons to either side\n * of the string\n * @param {string} str\n * @return {string}\n */\nfunction wrapColons (str) {\n  return (typeof str === 'string' && str.length > 0) ? ':' + str + ':' : str;\n}\n\n/**\n * Ensure that the word is wrapped in colons\n * by only adding them, if they are not there.\n * @param {string} str\n * @return {string}\n */\nfunction ensureColons (str) {\n  return (typeof str === 'string' && str[0] !== ':') ? wrapColons(str) : str;\n}\n\n// Non spacing mark, some emoticons have them. It's the 'Variant Form',\n// which provides more information so that emoticons can be rendered as\n// more colorful graphics. FE0E is a unicode text version, where as FE0F\n// should be rendered as a graphical version. The code gracefully degrades.\nvar NON_SPACING_MARK = String.fromCharCode(65039); // 65039 - '️' - 0xFE0F;\nvar nonSpacingRegex = new RegExp(NON_SPACING_MARK, 'g')\n\n// Remove the non-spacing-mark from the code, never send a stripped version\n// to the client, as it kills graphical emoticons.\nfunction stripNSB (code) {\n  return code.replace(nonSpacingRegex, '');\n};\n\n// Reversed hash table, where as emojiByName contains a { heart: '❤' }\n// dictionary emojiByCode contains { ❤: 'heart' }. The codes are normalized\n// to the text version.\nvar emojiByCode = Object.keys(emojiByName).reduce(function(h,k) {\n  h[stripNSB(emojiByName[k])] = k;\n  return h;\n}, {});\n\n/**\n * Emoji namespace\n */\nvar Emoji = {\n  emoji: emojiByName,\n};\n\n/**\n * get emoji code from name. return emoji code back if code is passed in.\n * @param  {string} emoji\n * @return {string}\n */\nEmoji._get = function _get (emoji) {\n  if (emojiByCode[stripNSB(emoji)]) {\n    return emoji;\n  } else if (emojiByName.hasOwnProperty(emoji)) {\n    return emojiByName[emoji];\n  }\n\n  return ensureColons(emoji);\n};\n\n/**\n * get emoji code from :emoji: string or name\n * @param  {string} emoji\n * @return {string}\n */\nEmoji.get = function get (emoji) {\n  emoji = stripColons(emoji);\n\n  return Emoji._get(emoji);\n};\n\n/**\n * find the emoji by either code or name\n * @param {string} nameOrCode The emoji to find, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\nEmoji.find = function find (nameOrCode) {\n  return Emoji.findByName(nameOrCode) || Emoji.findByCode(nameOrCode);\n};\n\n/**\n * find the emoji by name\n * @param {string} name The emoji to find either `coffee` or `:coffee:`;\n * @return {object}\n */\nEmoji.findByName = function findByName (name) {\n  var stripped = stripColons(name);\n  var emoji = emojiByName[stripped];\n\n  return emoji ? ({ emoji: emoji, key: stripped }) : undefined;\n};\n\n/**\n * find the emoji by code (emoji)\n * @param {string} code The emoji to find; for example `☕` or `☔`\n * @return {object}\n */\nEmoji.findByCode = function findByCode (code) {\n  var stripped = stripNSB(code);\n  var name = emojiByCode[stripped];\n\n  // lookup emoji to ensure the Variant Form is returned\n  return name ? ({ emoji: emojiByName[name], key: name }) : undefined;\n};\n\n\n/**\n * Check if an emoji is known by this library\n * @param {string} nameOrCode The emoji to validate, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\nEmoji.hasEmoji = function hasEmoji (nameOrCode) {\n  return Emoji.hasEmojiByName(nameOrCode) || Emoji.hasEmojiByCode(nameOrCode);\n};\n\n/**\n * Check if an emoji with given name is known by this library\n * @param {string} name The emoji to validate either `coffee` or `:coffee:`;\n * @return {object}\n */\nEmoji.hasEmojiByName = function hasEmojiByName (name) {\n  var result = Emoji.findByName(name);\n  return !!result && result.key === stripColons(name);\n};\n\n/**\n * Check if a given emoji is known by this library\n * @param {string} code The emoji to validate; for example `☕` or `☔`\n * @return {object}\n */\nEmoji.hasEmojiByCode = function hasEmojiByCode (code) {\n  var result = Emoji.findByCode(code);\n  return !!result && stripNSB(result.emoji) === stripNSB(code);\n};\n\n/**\n * get emoji name from code\n * @param  {string} emoji\n * @param  {boolean} includeColons should the result include the ::\n * @return {string}\n */\nEmoji.which = function which (emoji_code, includeColons) {\n  var code = stripNSB(emoji_code);\n  var word = emojiByCode[code];\n\n  return includeColons ? wrapColons(word) : word;\n};\n\n/**\n * emojify a string (replace :emoji: with an emoji)\n * @param  {string} str\n * @param  {function} on_missing (gets emoji name without :: and returns a proper emoji if no emoji was found)\n * @param  {function} format (wrap the returned emoji in a custom element)\n * @return {string}\n */\nEmoji.emojify = function emojify (str, on_missing, format) {\n  if (!str) return '';\n\n  return str.split(emojiNameRegex) // parse emoji via regex\n            .map(function parseEmoji(s, i) {\n              // every second element is an emoji, e.g. \"test :fast_forward:\" -> [ \"test \", \"fast_forward\" ]\n              if (i % 2 === 0) return s;\n              var emoji = Emoji._get(s);\n              var isMissing = emoji.indexOf(':') > -1;\n\n              if (isMissing && typeof on_missing === 'function') {\n                return on_missing(s);\n              }\n\n              if (!isMissing && typeof format === 'function') {\n                return format(emoji, s);\n              }\n\n              return emoji;\n            })\n            .join('') // convert back to string\n  ;\n};\n\n/**\n * return a random emoji\n * @return {string}\n */\nEmoji.random = function random () {\n  var emojiKeys = Object.keys(emojiByName);\n  var randomIndex = Math.floor(Math.random() * emojiKeys.length);\n  var key = emojiKeys[randomIndex];\n  var emoji = Emoji._get(key);\n  return { key: key, emoji: emoji };\n}\n\n/**\n *  return an collection of potential emoji matches\n *  @param {string} str\n *  @return {Array.<Object>}\n */\nEmoji.search = function search (str) {\n  var emojiKeys = Object.keys(emojiByName);\n  var matcher = stripColons(str)\n  var matchingKeys = emojiKeys.filter(function(key) {\n    return key.toString().indexOf(matcher) === 0;\n  });\n  return matchingKeys.map(function(key) {\n    return {\n      key: key,\n      emoji: Emoji._get(key),\n    };\n  });\n}\n\n/**\n * unemojify a string (replace emoji with :emoji:)\n * @param  {string} str\n * @return {string}\n */\nEmoji.unemojify = function unemojify (str) {\n  if (!str) return '';\n  var words = toArray(str);\n\n  return words.map(function(word) {\n    return Emoji.which(word, true) || word;\n  }).join('');\n};\n\n/**\n * replace emojis with replacement value\n * @param {string} str\n * @param {function|string} the string or callback function to replace the emoji with\n * @param {boolean} should trailing whitespaces be cleaned? Defaults false\n * @return {string}\n */\nEmoji.replace = function replace (str, replacement, cleanSpaces) {\n  if (!str) return '';\n\n  var replace = typeof replacement === 'function' ? replacement : function() { return replacement; };\n  var words = toArray(str);\n\n  var replaced = words.map(function(word, idx) {\n    var emoji = Emoji.findByCode(word);\n\n    if (emoji && cleanSpaces && words[idx + 1] === ' ') {\n      words[idx + 1] = '';\n    }\n\n    return emoji ? replace(emoji) : word;\n  }).join('');\n\n  return cleanSpaces ? replaced.replace(trimSpaceRegex, '') : replaced;\n};\n\n\n/**\n * remove all emojis from a string\n * @param {string} str\n * @return {string}\n */\nEmoji.strip = function strip (str) {\n  return Emoji.replace(str, '', true);\n};\n\nmodule.exports = Emoji;\n","import PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport React from 'react';\nimport objectAssign from 'object-assign';\n\nvar ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\",\n    TARGET: \"target\"\n};\n\nvar REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = \"data-react-helmet\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return Array.isArray(innermostTitle) ? innermostTitle.join(\"\") : innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === TAG_PROPERTIES.INNER_HTML || attributeKey === TAG_PROPERTIES.CSS_TEXT || attributeKey === TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = objectAssign({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF, TAG_PROPERTIES.TARGET], propsList),\n        bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(TAG_NAMES.LINK, [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(TAG_NAMES.META, [TAG_PROPERTIES.NAME, TAG_PROPERTIES.CHARSET, TAG_PROPERTIES.HTTPEQUIV, TAG_PROPERTIES.PROPERTY, TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(TAG_NAMES.SCRIPT, [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [React.createElement(TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === TAG_PROPERTIES.INNER_HTML || mappedAttribute === TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return React.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case ATTRIBUTE_NAMES.BODY:\n        case ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            classCallCheck(this, HelmetWrapper);\n            return possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !isEqual(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case TAG_NAMES.SCRIPT:\n                case TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _babelHelpers$extends;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_babelHelpers$extends = {}, _babelHelpers$extends[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _babelHelpers$extends));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _babelHelpers$extends2, _babelHelpers$extends3;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_babelHelpers$extends2 = {}, _babelHelpers$extends2[child.type] = nestedChildren, _babelHelpers$extends2.titleAttributes = _extends({}, newChildProps), _babelHelpers$extends2));\n\n                case TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_babelHelpers$extends3 = {}, _babelHelpers$extends3[child.type] = _extends({}, newChildProps), _babelHelpers$extends3));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _babelHelpers$extends4;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_babelHelpers$extends4 = {}, _babelHelpers$extends4[arrayChildName] = arrayTypeChildren[arrayChildName], _babelHelpers$extends4));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return warn(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return warn(\"Only elements types \" + VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            React.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = convertReactPropstoHtmlAttributes(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case TAG_NAMES.LINK:\n                    case TAG_NAMES.META:\n                    case TAG_NAMES.NOSCRIPT:\n                    case TAG_NAMES.SCRIPT:\n                    case TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return React.createElement(Component, newProps);\n        };\n\n        createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n             * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n             * @param {Object} bodyAttributes: {\"className\": \"root\"}\n             * @param {String} defaultTitle: \"Default Title\"\n             * @param {Boolean} defer: true\n             * @param {Boolean} encodeSpecialCharacters: true\n             * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n             * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n             * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n             * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n             * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n             * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n             * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n             * @param {String} title: \"Title\"\n             * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n             * @param {String} titleTemplate: \"MySite.com - %s\"\n             */\n            set: function set$$1(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n        return HelmetWrapper;\n    }(React.Component), _class.propTypes = {\n        base: PropTypes.object,\n        bodyAttributes: PropTypes.object,\n        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n        defaultTitle: PropTypes.string,\n        defer: PropTypes.bool,\n        encodeSpecialCharacters: PropTypes.bool,\n        htmlAttributes: PropTypes.object,\n        link: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.arrayOf(PropTypes.object),\n        noscript: PropTypes.arrayOf(PropTypes.object),\n        onChangeClientState: PropTypes.func,\n        script: PropTypes.arrayOf(PropTypes.object),\n        style: PropTypes.arrayOf(PropTypes.object),\n        title: PropTypes.string,\n        titleAttributes: PropTypes.object,\n        titleTemplate: PropTypes.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = mapStateOnServer({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = withSideEffect(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexport default HelmetExport;\nexport { HelmetExport as Helmet };\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect =\n    /*#__PURE__*/\n    function (_PureComponent) {\n      _inheritsLoose(SideEffect, _PureComponent);\n\n      function SideEffect() {\n        return _PureComponent.apply(this, arguments) || this;\n      }\n\n      // Try to use displayName of wrapped component\n      // Expose canUseDOM so tests can monkeypatch it\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      var _proto = SideEffect.prototype;\n\n      _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      _proto.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.PureComponent);\n\n    _defineProperty(SideEffect, \"displayName\", \"SideEffect(\" + getDisplayName(WrappedComponent) + \")\");\n\n    _defineProperty(SideEffect, \"canUseDOM\", canUseDOM);\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef Emoticon\n *   Info on an emoticon.\n * @property {string} name\n *   Name of an emoticon (preferred name from `wooorm/gemoji`).\n * @property {string} emoji\n *   Corresponding emoji.\n * @property {Array<string>} tags\n *   Associated tags (from `wooorm/gemoji`).\n * @property {string} description\n *   Associated description (from `wooorm/gemoji`).\n * @property {Array<string>} emoticons\n *   ASCII emoticons.\n */\n\n/**\n * List of emoticons.\n *\n * @type {Array<Emoticon>}\n */\nexport const emoticon = [\n  {\n    name: 'angry',\n    emoji: '😠',\n    tags: ['mad', 'annoyed'],\n    description: 'angry face',\n    emoticons: ['>:(', '>:[', '>:-(', '>:-[', '>=(', '>=[', '>=-(', '>=-[']\n  },\n  {\n    name: 'blush',\n    emoji: '😊',\n    tags: ['proud'],\n    description: 'smiling face with smiling eyes',\n    emoticons: [\n      ':\")',\n      ':\"]',\n      ':\"D',\n      ':-\")',\n      ':-\"]',\n      ':-\"D',\n      '=\")',\n      '=\"]',\n      '=\"D',\n      '=-\")',\n      '=-\"]',\n      '=-\"D'\n    ]\n  },\n  {\n    name: 'broken_heart',\n    emoji: '💔',\n    tags: [],\n    description: 'broken heart',\n    emoticons: ['<\\\\3', '</3']\n  },\n  {\n    name: 'confused',\n    emoji: '😕',\n    tags: [],\n    description: 'confused face',\n    emoticons: [':/', ':\\\\', ':-/', ':-\\\\', '=/', '=\\\\', '=-/', '=-\\\\']\n  },\n  {\n    name: 'cry',\n    emoji: '😢',\n    tags: ['sad', 'tear'],\n    description: 'crying face',\n    emoticons: [\n      ':,(',\n      ':,[',\n      ':,|',\n      ':,-(',\n      ':,-[',\n      ':,-|',\n      \":'(\",\n      \":'[\",\n      \":'|\",\n      \":'-(\",\n      \":'-[\",\n      \":'-|\",\n      '=,(',\n      '=,[',\n      '=,|',\n      '=,-(',\n      '=,-[',\n      '=,-|',\n      \"='(\",\n      \"='[\",\n      \"='|\",\n      \"='-(\",\n      \"='-[\",\n      \"='-|\"\n    ]\n  },\n  {\n    name: 'frowning',\n    emoji: '😦',\n    tags: [],\n    description: 'frowning face with open mouth',\n    emoticons: [':(', ':[', ':-(', ':-[', '=(', '=[', '=-(', '=-[']\n  },\n  {\n    name: 'heart',\n    emoji: '❤️',\n    tags: ['love'],\n    description: 'red heart',\n    emoticons: ['<3']\n  },\n  {\n    name: 'imp',\n    emoji: '👿',\n    tags: ['angry', 'devil', 'evil', 'horns'],\n    description: 'angry face with horns',\n    emoticons: [']:(', ']:[', ']:-(', ']:-[', ']=(', ']=[', ']=-(', ']=-[']\n  },\n  {\n    name: 'innocent',\n    emoji: '😇',\n    tags: ['angel'],\n    description: 'smiling face with halo',\n    emoticons: [\n      'o:)',\n      'o:]',\n      'o:D',\n      'o:-)',\n      'o:-]',\n      'o:-D',\n      'o=)',\n      'o=]',\n      'o=D',\n      'o=-)',\n      'o=-]',\n      'o=-D',\n      'O:)',\n      'O:]',\n      'O:D',\n      'O:-)',\n      'O:-]',\n      'O:-D',\n      'O=)',\n      'O=]',\n      'O=D',\n      'O=-)',\n      'O=-]',\n      'O=-D',\n      '0:)',\n      '0:]',\n      '0:D',\n      '0:-)',\n      '0:-]',\n      '0:-D',\n      '0=)',\n      '0=]',\n      '0=D',\n      '0=-)',\n      '0=-]',\n      '0=-D'\n    ]\n  },\n  {\n    name: 'joy',\n    emoji: '😂',\n    tags: ['tears'],\n    description: 'face with tears of joy',\n    emoticons: [\n      ':,)',\n      ':,]',\n      ':,D',\n      ':,-)',\n      ':,-]',\n      ':,-D',\n      \":')\",\n      \":']\",\n      \":'D\",\n      \":'-)\",\n      \":'-]\",\n      \":'-D\",\n      '=,)',\n      '=,]',\n      '=,D',\n      '=,-)',\n      '=,-]',\n      '=,-D',\n      \"=')\",\n      \"=']\",\n      \"='D\",\n      \"='-)\",\n      \"='-]\",\n      \"='-D\"\n    ]\n  },\n  {\n    name: 'kissing',\n    emoji: '😗',\n    tags: [],\n    description: 'kissing face',\n    emoticons: [':*', ':-*', '=*', '=-*']\n  },\n  {\n    name: 'laughing',\n    emoji: '😆',\n    tags: ['happy', 'haha'],\n    description: 'grinning squinting face',\n    emoticons: [\n      'x)',\n      'x]',\n      'xD',\n      'x-)',\n      'x-]',\n      'x-D',\n      'X)',\n      'X]',\n      'X-)',\n      'X-]',\n      'X-D'\n    ]\n  },\n  {\n    name: 'man',\n    emoji: '👨',\n    tags: ['mustache', 'father', 'dad'],\n    description: 'man',\n    emoticons: [':3', ':-3', '=3', '=-3', ';3', ';-3', 'x3', 'x-3', 'X3', 'X-3']\n  },\n  {\n    name: 'neutral_face',\n    emoji: '😐',\n    tags: ['meh'],\n    description: 'neutral face',\n    emoticons: [':|', ':-|', '=|', '=-|']\n  },\n  {\n    name: 'no_mouth',\n    emoji: '😶',\n    tags: ['mute', 'silence'],\n    description: 'face without mouth',\n    emoticons: [':-']\n  },\n  {\n    name: 'open_mouth',\n    emoji: '😮',\n    tags: ['surprise', 'impressed', 'wow'],\n    description: 'face with open mouth',\n    emoticons: [\n      ':o',\n      ':O',\n      ':0',\n      ':-o',\n      ':-O',\n      ':-0',\n      '=o',\n      '=O',\n      '=0',\n      '=-o',\n      '=-O',\n      '=-0'\n    ]\n  },\n  {\n    name: 'rage',\n    emoji: '😡',\n    tags: ['angry'],\n    description: 'pouting face',\n    emoticons: [':@', ':-@', '=@', '=-@']\n  },\n  {\n    name: 'smile',\n    emoji: '😄',\n    tags: ['happy', 'joy', 'laugh', 'pleased'],\n    description: 'grinning face with smiling eyes',\n    emoticons: [':D', ':-D', '=D', '=-D']\n  },\n  {\n    name: 'smiley',\n    emoji: '😃',\n    tags: ['happy', 'joy', 'haha'],\n    description: 'grinning face with big eyes',\n    emoticons: [':)', ':]', ':-)', ':-]', '=)', '=]', '=-)', '=-]']\n  },\n  {\n    name: 'smiling_imp',\n    emoji: '😈',\n    tags: ['devil', 'evil', 'horns'],\n    description: 'smiling face with horns',\n    emoticons: [\n      ']:)',\n      ']:]',\n      ']:D',\n      ']:-)',\n      ']:-]',\n      ']:-D',\n      ']=)',\n      ']=]',\n      ']=D',\n      ']=-)',\n      ']=-]',\n      ']=-D'\n    ]\n  },\n  {\n    name: 'sob',\n    emoji: '😭',\n    tags: ['sad', 'cry', 'bawling'],\n    description: 'loudly crying face',\n    emoticons: [\n      \":,'(\",\n      \":,'[\",\n      \":,'-(\",\n      \":,'-[\",\n      \":',(\",\n      \":',[\",\n      \":',-(\",\n      \":',-[\",\n      \"=,'(\",\n      \"=,'[\",\n      \"=,'-(\",\n      \"=,'-[\",\n      \"=',(\",\n      \"=',[\",\n      \"=',-(\",\n      \"=',-[\"\n    ]\n  },\n  {\n    name: 'stuck_out_tongue',\n    emoji: '😛',\n    tags: [],\n    description: 'face with tongue',\n    emoticons: [\n      ':p',\n      ':P',\n      ':d',\n      ':-p',\n      ':-P',\n      ':-d',\n      '=p',\n      '=P',\n      '=d',\n      '=-p',\n      '=-P',\n      '=-d'\n    ]\n  },\n  {\n    name: 'stuck_out_tongue_closed_eyes',\n    emoji: '😝',\n    tags: ['prank'],\n    description: 'squinting face with tongue',\n    emoticons: ['xP', 'x-p', 'x-P', 'x-d', 'Xp', 'Xd', 'X-p', 'X-P', 'X-d']\n  },\n  {\n    name: 'stuck_out_tongue_winking_eye',\n    emoji: '😜',\n    tags: ['prank', 'silly'],\n    description: 'winking face with tongue',\n    emoticons: [';p', ';P', ';d', ';-p', ';-P', ';-d']\n  },\n  {\n    name: 'sunglasses',\n    emoji: '😎',\n    tags: ['cool'],\n    description: 'smiling face with sunglasses',\n    emoticons: [\n      '8)',\n      '8]',\n      '8D',\n      '8-)',\n      '8-]',\n      '8-D',\n      'B)',\n      'B]',\n      'B-)',\n      'B-]',\n      'B-D'\n    ]\n  },\n  {\n    name: 'sweat',\n    emoji: '😓',\n    tags: [],\n    description: 'downcast face with sweat',\n    emoticons: [\n      ',:(',\n      ',:[',\n      ',:-(',\n      ',:-[',\n      ',=(',\n      ',=[',\n      ',=-(',\n      ',=-[',\n      \"':(\",\n      \"':[\",\n      \"':-(\",\n      \"':-[\",\n      \"'=(\",\n      \"'=[\",\n      \"'=-(\",\n      \"'=-[\"\n    ]\n  },\n  {\n    name: 'sweat_smile',\n    emoji: '😅',\n    tags: ['hot'],\n    description: 'grinning face with sweat',\n    emoticons: [\n      ',:)',\n      ',:]',\n      ',:D',\n      ',:-)',\n      ',:-]',\n      ',:-D',\n      ',=)',\n      ',=]',\n      ',=D',\n      ',=-)',\n      ',=-]',\n      ',=-D',\n      \"':)\",\n      \"':]\",\n      \"':D\",\n      \"':-)\",\n      \"':-]\",\n      \"':-D\",\n      \"'=)\",\n      \"'=]\",\n      \"'=D\",\n      \"'=-)\",\n      \"'=-]\",\n      \"'=-D\"\n    ]\n  },\n  {\n    name: 'unamused',\n    emoji: '😒',\n    tags: ['meh'],\n    description: 'unamused face',\n    emoticons: [\n      ':$',\n      ':s',\n      ':z',\n      ':S',\n      ':Z',\n      ':-$',\n      ':-s',\n      ':-z',\n      ':-S',\n      ':-Z',\n      '=$',\n      '=s',\n      '=z',\n      '=S',\n      '=Z',\n      '=-$',\n      '=-s',\n      '=-z',\n      '=-S',\n      '=-Z'\n    ]\n  },\n  {\n    name: 'wink',\n    emoji: '😉',\n    tags: ['flirt'],\n    description: 'winking face',\n    emoticons: [';)', ';]', ';D', ';-)', ';-]', ';-D']\n  }\n]\n","import emoji from 'node-emoji';\nimport { emoticon } from 'emoticon';\nimport { findAndReplace } from 'mdast-util-find-and-replace';\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\nconst RE_UNDERSTORE = /_/g;\nconst RE_PUNCT = /(?:_|-(?!1))/g;\n\nconst DEFAULT_SETTINGS = {\n    padSpaceAfter: false,\n    emoticon: false,\n    accessible: false,\n};\n\nexport default function plugin(options) {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n    const accessible = !!settings.accessible;\n\n    function aria(text, label) {\n        // Creating HTML node in Markdown node is undocumented.\n        // https://github.com/syntax-tree/mdast-util-math/blob/e70bb824dc70f5423324b31b0b68581cf6698fe8/index.js#L44-L55\n        return {\n            type: 'text',\n            meta: null,\n            value: text,\n            data: {\n                hName: 'span',\n                hProperties: {\n                    role: 'img',\n                    ariaLabel: label,\n                },\n                hChildren: [{ type: 'text', value: text }],\n            },\n        };\n    }\n\n    function getEmoticon(match) {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-),\n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const icon = iconFull || iconPart;\n        if (!icon) {\n            return match;\n        }\n        const trimmedChar = !iconFull && iconPart ? match.slice(-1) : '';\n        const addPad = pad ? ' ' : '';\n        const replaced = icon.emoji + addPad + trimmedChar;\n        if (accessible) {\n            return aria(replaced, icon.name + ' emoticon');\n        }\n        return replaced;\n    }\n\n    function getEmoji(match) {\n        let got = emoji.get(match);\n\n        // Workaround for #19. :man-*: and :woman-*: are now :*_man: and :*_woman: on GitHub. node-emoji\n        // does not support the new short codes. Convert new to old.\n        // TODO: Remove this workaround when this PR is merged and shipped: https://github.com/omnidan/node-emoji/pull/112\n        if (match.endsWith('_man:') && got === match) {\n            // :foo_bar_man: -> man-foo-bar\n            const old = 'man-' + match.slice(1, -5).replace(RE_UNDERSTORE, '-');\n            const s = emoji.get(old);\n            if (s !== old) {\n                got = s;\n            }\n        } else if (match.endsWith('_woman:') && got === match) {\n            // :foo_bar_woman: -> woman-foo-bar\n            const old = 'woman-' + match.slice(1, -7).replace(RE_UNDERSTORE, '-');\n            const s = emoji.get(old);\n            if (s !== old) {\n                got = s;\n            }\n        }\n\n        if (got === match) {\n            return match;\n        }\n\n        if (pad) {\n            got = got + ' ';\n        }\n\n        if (accessible) {\n            const label = match.slice(1, -1).replace(RE_PUNCT, ' ') + ' emoji';\n            return aria(got, label);\n        }\n\n        return got;\n    }\n\n    function transformer(tree) {\n        const handlers = [[RE_EMOJI, getEmoji]];\n        if (emoticonEnable) {\n            handlers.push([RE_SHORT, getEmoticon]);\n        }\n        findAndReplace(tree, handlers);\n    }\n\n    return transformer;\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","DataView","require","getNative","Map","Promise","Set","Symbol","WeakMap","baseTimes","isArguments","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","result","String","array","iteratee","index","string","split","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","undefined","baseGetTag","isObjectLike","argsTag","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","reIsNative","RegExp","test","isLength","typedArrayTags","isPrototype","nativeKeys","object","n","func","arrayMap","props","coreJsData","freeGlobal","global","baseIsNative","getValue","nativeObjectToString","isOwn","tag","unmasked","e","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","Ctor","ctorString","reHasUnicode","MAX_SAFE_INTEGER","reIsUint","maskSrcKey","uid","keys","IE_PROTO","iterator","data","next","done","map","size","forEach","overArg","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","binding","transform","arg","freeSelf","self","root","set","asciiToArray","hasUnicode","unicodeToArray","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","join","rsSymbol","reUnicode","baseIsArguments","propertyIsEnumerable","stubFalse","Buffer","asyncTag","funcTag","genTag","proxyTag","stringTag","baseIsTypedArray","baseUnary","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","copyArray","isString","iteratorToArray","mapToArray","setToArray","stringToArray","values","symIterator","baseValues","toArray","emojiByName","emojiNameRegex","trimSpaceRegex","stripColons","colonIndex","indexOf","substring","substr","wrapColons","NON_SPACING_MARK","fromCharCode","nonSpacingRegex","stripNSB","code","emojiByCode","reduce","h","k","Emoji","emoji","_get","get","find","nameOrCode","findByName","findByCode","stripped","hasEmoji","hasEmojiByName","hasEmojiByCode","which","emoji_code","includeColons","word","emojify","on_missing","format","s","isMissing","random","emojiKeys","Math","floor","search","matcher","filter","unemojify","replacement","cleanSpaces","words","replaced","idx","strip","ATTRIBUTE_NAMES","TAG_NAMES","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","TAG_PROPERTIES","REACT_TAG_MAP","accesskey","charset","class","contenteditable","contextmenu","itemprop","tabindex","HELMET_PROPS","HTML_TAG_MAP","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","_typeof","classCallCheck","instance","Constructor","createClass","defineProperties","descriptor","protoProps","staticProps","_extends","assign","objectWithoutProperties","possibleConstructorReturn","ReferenceError","encodeSpecialCharacters","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","lowerCaseAttributeKey","toLowerCase","concat","getTagsFromPropsList","tagName","approvedSeenTags","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","tagUnion","objectAssign","rafPolyfill","clock","Date","now","callback","currentTime","setTimeout","cafPolyfill","id","clearTimeout","requestAnimationFrame","window","bind","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","console","_helmetCallback","commitTagChanges","newState","cb","baseTag","bodyAttributes","htmlAttributes","linkTags","metaTags","noscriptTags","onChangeClientState","scriptTags","styleTags","title","titleAttributes","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","attributes","document","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","splice","_i","removeAttribute","tags","headElement","head","querySelector","tagNodes","querySelectorAll","indexToDelete","newElement","createElement","innerHTML","styleSheet","cssText","appendChild","createTextNode","some","existingTag","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","attr","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","React","generateTitleAsReactComponent","attributeString","flattenedTitle","generateTitleAsString","_mappedTag","mappedTag","mappedAttribute","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","tagContent","isSelfClosing","generateTagsAsString","mapStateOnServer","_ref","_ref$title","base","link","meta","noscript","script","HelmetExport","Component","_class","_temp","_React$Component","HelmetWrapper","apply","subClass","superClass","create","setPrototypeOf","__proto__","inherits","shouldComponentUpdate","nextProps","isEqual","mapNestedChildrenToProps","child","nestedChildren","flattenArrayTypeChildren","_babelHelpers$extends","arrayTypeChildren","newChildProps","mapObjectTypeChildren","_ref2","_babelHelpers$extends2","_babelHelpers$extends3","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","_babelHelpers$extends4","warnOnInvalidChildren","mapChildrenToProps","children","_this2","_child$props","initAttributes","convertReactPropstoHtmlAttributes","render","_props","canUseDOM","propTypes","PropTypes","defaultTitle","defer","titleTemplate","defaultProps","peek","rewind","mappedState","Helmet","withSideEffect","renderStatic","u","b","for","d","f","g","l","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","ex","React__default","_defineProperty","reducePropsToState","handleStateChangeOnClient","WrappedComponent","state","mountedInstances","emitChange","SideEffect","_PureComponent","recordedState","_proto","UNSAFE_componentWillMount","componentDidUpdate","componentWillUnmount","PureComponent","displayName","getDisplayName","parse","StyleToObject","output","hasIterator","len","_objectDestructuringEmpty","element","decodeNamedCharacterReference","characterReference","char","textContent","charCodeAt","own","findAndReplace","tree","settings","schema","ignored","convert","ignore","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","visitor","parents","grandparent","parent","change","nodes","lastIndex","matchObject","input","stack","handler","escape","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","Number","POSITIVE_INFINITY","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","list","remove","items","parameters","chunkStart","from","unshift","classifyCharacter","combineExtensions","extensions","all","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","hex","normalizeIdentifier","toUpperCase","resolveAll","events","context","called","includes","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","_wrapNativeSuper","_cache","fn","has","Wrapper","getPrototypeOf","stringifyPosition","point","VFileMessage","place","origin","parts","message","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","history","stored","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","trough","fns","pipeline","run","middlewareIndex","pop","middleware","wrapped","fnExpectsCallback","then","wrap","use","middelware","unified","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","addPlugin","addList","addPreset","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","runSync","complete","assertDone","processSync","destination","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","fromMarkdown","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","ceil","preprocess","combined","normalizeUri","skip","encodeURIComponent","visit","pointStart","pointEnd","clean","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","merge","Info","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","DefinedInfo","mask","mark","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","addProperty","listDepth","component","components","basic","ReactIs","linkTarget","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","padRight","padLeft","commas","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","emoticon","description","emoticons","RE_EMOJI","RE_SHORT","RE_UNDERSTORE","RE_PUNCT","DEFAULT_SETTINGS","padSpaceAfter","accessible","pad","emoticonEnable","getEmoticon","iconFull","iconPart","icon","trimmedChar","addPad","getEmoji","got","endsWith","old","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","character","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","email","association","repeat","eol","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","whole","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","safeOptions","tracker","subexit","indentLines","indexStack","createTracker","handle","bulletLastUsed","containerFlow","blank","containerPhrasing","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","castFactory","typeFactory","anyFactory","propsFactory","tests","CONTINUE","EXIT","SKIP","factory","subresult","grandparents","toResult"],"sourceRoot":""}